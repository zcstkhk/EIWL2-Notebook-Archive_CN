(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2050020,      41683]
NotebookOptionsPosition[   1921561,      39149]
NotebookOutlinePosition[   2022212,      41207]
CellTagsIndexPosition[   2020966,      41159]
WindowTitle->\:6570\:636E\:96C6 - Wolfram \
\:8BED\:8A00\:5165\:95E8\:4ECB\:7ECD \:7FFB\:8BD1 By \:90D1\:660C\:76DB
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 InterpretationBox[Cell[TextData[StyleBox["\:6570\:636e\:96c6",
   FontFamily->"Microsoft YaHei",
   FontWeight->"Normal"]], "SectionInline",
   Editable->False,
   Evaluatable->False,ExpressionUUID->
   "521f21a2-6452-4797-90e3-61490657a792"],
  $Line = 0; Null]], "SectionDoubleDigit",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{
  3.652728456208679*^9, 3.652728527108994*^9, {3.836977764454463*^9, 
   3.836977764454463*^9}},
 CounterAssignments->{{"Section", 44}, {"Subsection", 0}, {
   "Subsubsection", 0}, {"Exercise", 0}},
 CellTags->"p:271",
 CellLabel->"In[1]:=",ExpressionUUID->"a43a8fc3-c81c-4787-a769-3d893d7cb992"],

Cell[TextData[{
 "\:7279\:522b\:662f\:5728\:8f83\:5927\:7684\:7ec4\:7ec7\:4e2d\:ff0c\:8ba1\
\:7b97\:5f80\:5f80\:4ee5\:5904\:7406\:5927\:91cf\:7684\:7ed3\:6784\:5316\:6570\
\:636e\:4e3a\:4e2d\:5fc3\:3002Wolfram \:8bed\:8a00\:6709\:4e00\:4e2a\:975e\
\:5e38\:5f3a\:5927\:7684\:65b9\:5f0f\:6765\:5904\:7406\:7ed3\:6784\:5316\:6570\
\:636e\:ff0c\:4f7f\:7528",
 StyleBox["\:6570\:636e\:96c6",
  FontWeight->"Bold"],
 "\:3002"
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836977783375909*^9, 3.836977784174471*^9}, {
  3.8369778547650547`*^9, 3.8369778771465163`*^9}},
 CellTags->"i:1",ExpressionUUID->"29971f26-11dc-468c-aba3-42988e3c4b43"],

Cell["\:4e00\:4e2a\:7b80\:5355\:7684\:4f8b\:5b50\:662f\:ff0c\:6570\:636e\:96c6\
\:7531\:5173\:8054\:7684\:5173\:8054\:7ec4\:6210\:3002", "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836977885428709*^9, 3.836977921597023*^9}},
 CellTags->"i:2",ExpressionUUID->"ae81b7e4-5ec6-406b-8aaf-496db845412c"],

Cell["\:521b\:5efa\:4e00\:4e2a\:7b80\:5355\:7684\:6570\:636e\:96c6\:ff0c\:53ef\
\:4ee5\:770b\:6210\:662f\:6709 2 \:884c 3 \:5217\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836979362951333*^9, 
  3.8369793754291306`*^9}},ExpressionUUID->"eabeb1e1-d802-4085-a676-\
4ba0cec6cda7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<a\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\"\<x\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<y\>\"", "\[Rule]", "2"}], ",", 
        RowBox[{"\"\<z\>\"", "\[Rule]", "3"}]}], "\[RightAssociation]"}]}], 
     ",", 
     RowBox[{"\"\<b\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\"\<x\>\"", "\[Rule]", "5"}], ",", 
        RowBox[{"\"\<y\>\"", "\[Rule]", "10"}], ",", 
        RowBox[{"\"\<z\>\"", "\[Rule]", "7"}]}], "\[RightAssociation]"}]}]}], 
    "\[RightAssociation]"}], "]"}]}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[1]:=",ExpressionUUID->"227bf311-4fff-403a-b0a1-5bb904d049e4"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"x", "y", "z"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer]}], 2], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "x"} -> 
           1, {All, "y"} -> 1, {All, "z"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "x" -> TypeSystem`PackageScope`AtomShape[34], "y" -> 
               TypeSystem`PackageScope`AtomShape[34], "z" -> 
               TypeSystem`PackageScope`AtomShape[34]]]]], 2, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[238572043], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"x", "y", "z"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer]}], 2], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[238572043]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1260814217][{All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1260814217][
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"x\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"x\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1260814217][{All, "x"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1260814217][
                  GeneralUtilities`Slice[All, "x"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"y\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"y\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1260814217][{All, "y"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1260814217][
                  GeneralUtilities`Slice[All, "y"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"z\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"z\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1260814217][{All, "z"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1260814217][
                  GeneralUtilities`Slice[All, "z"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["a", 
                    Style[
                    "a", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1260814217][{
                    Key["a"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1260814217][
                   GeneralUtilities`Slice[
                    Key["a"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1260814217][
                  GeneralUtilities`Slice[
                   Key["a"], 
                   Key["x"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1260814217][
                  GeneralUtilities`Slice[
                   Key["a"], 
                   Key["y"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1260814217][
                  GeneralUtilities`Slice[
                   Key["a"], 
                   Key["z"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["b", 
                    Style[
                    "b", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1260814217][{
                    Key["b"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1260814217][
                   GeneralUtilities`Slice[
                    Key["b"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1260814217][
                  GeneralUtilities`Slice[
                   Key["b"], 
                   Key["x"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1260814217][
                  GeneralUtilities`Slice[
                   Key["b"], 
                   Key["y"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1260814217][
                  GeneralUtilities`Slice[
                   Key["b"], 
                   Key["z"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1260814217][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1260814217]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1260814217][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1260814217][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {211., {68.75, 82.25}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[1]=",ExpressionUUID->"afb3f699-41be-4d37-9b27-5e5714dadfc5"]
}, Open  ]],

Cell["Wolfram \:8bed\:8a00\:5c06\:4ee5\:8868\:683c\:7684\:5f62\:5f0f\:6765\
\:663e\:793a\:5927\:591a\:6570\:6570\:636e\:96c6\:3002\:4f60\:53ef\:4ee5\:4ece\
\:6570\:636e\:96c6\:4e2d\:63d0\:53d6\:90e8\:5206\:5185\:5bb9\:ff0c\:5c31\:50cf\
\:4f60\:4ece\:5173\:8054\:4e2d\:63d0\:53d6\:4e00\:6837\:3002", "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369793897545786`*^9, 3.8369794101246023`*^9}},
 CellTags->"i:3",ExpressionUUID->"d84987f3-9a8e-40b7-9ac5-c0c84e0e19cb"],

Cell["\:4ece\:7b2c b \:884c\:7b2c z \:5217\:83b7\:53d6\:5143\:7d20\:ff1a", \
"CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369794277722497`*^9, 3.836979445324664*^9}},
 CellTags->"i:4",ExpressionUUID->"b44910d3-3611-4d38-abe4-224db0a56a72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"\"\<b\>\"", ",", "\"\<z\>\""}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[2]:=",ExpressionUUID->"b199d28a-7c87-4c9d-b154-5ae53988fa09"],

Cell[BoxData["7"], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[2]=",ExpressionUUID->"3d11f792-e9c1-48b6-adcb-1b3a45631912"]
}, Open  ]],

Cell["\:4f60\:53ef\:4ee5\:5148\:63d0\:53d6\:7b2c b \:884c\:6574\:884c\:ff0c\
\:7136\:540e\:83b7\:53d6\:7ed3\:679c\:4e2d\:7684\[OpenCurlyDoubleQuote]z\
\[CloseCurlyDoubleQuote]\:5143\:7d20\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836979454614498*^9, 
  3.836979505003462*^9}},ExpressionUUID->"6d9d3714-a6d4-43f8-abeb-\
cf101ccc6206"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", "\"\<b\>\"", "]"}], "[", "\"\<z\>\"", "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[3]:=",ExpressionUUID->"a5893f1d-3038-4e01-92e7-6646da5bbc25"],

Cell[BoxData["7"], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[3]=",ExpressionUUID->"5f4a8b52-a136-42e9-8374-90b204faf4a1"]
}, Open  ]],

Cell["\:4f60\:4e5f\:53ef\:4ee5\:53ea\:83b7\:53d6\:6570\:636e\:96c6\:7684\:7b2c\
 b \:884c\:6574\:884c\:3002\:7ed3\:679c\:662f\:4e00\:4e2a\:65b0\:7684\:6570\
\:636e\:96c6\:ff0c\:4e3a\:4e86\:65b9\:4fbf\:9605\:8bfb\:ff0c\:5728\:8fd9\:79cd\
\:60c5\:51b5\:4e0b\:521a\:597d\:663e\:793a\:4e3a\:4e00\:4e2a\:5217\:3002", \
"Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836979525794609*^9, 3.8369795369228706`*^9}, {
  3.8369795669526114`*^9, 
  3.8369795673623433`*^9}},ExpressionUUID->"4da1329c-8c10-4af2-aafd-\
d22e58333dc3"],

Cell["\:4f7f\:7528\:539f\:59cb\:6570\:636e\:96c6\:7684\:7b2c b \:884c\:6574\
\:884c\:6765\:751f\:6210\:4e00\:4e2a\:65b0\:7684\:6570\:636e\:96c6\:ff1a", \
"CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369795834535084`*^9, 
  3.836979601442608*^9}},ExpressionUUID->"a06eeb3e-6fc6-48a5-af3f-\
166609f90c75"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", "\"\<b\>\"", "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[4]:=",ExpressionUUID->"4bc94b73-06f0-48e7-bf7c-68019ed20c7b"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 3, "InitialType" -> 
        TypeSystem`Struct[{"x", "y", "z"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer]}], "Shape" -> 
        TypeSystem`PackageScope`DocumentShape[
          
          Association[{"x"} -> TypeSystem`PackageScope`AtomShape[34], {"y"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"z"} -> 
           TypeSystem`PackageScope`AtomShape[34]], 1], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1818362630], "Type" -> 
        TypeSystem`Struct[{"x", "y", "z"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer]}], "HandleQ" -> True, "RowTarget" -> 20, 
        "Data" -> TypeSystem`PackageScope`CacheHandle[1818362630]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"x\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"x\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1412864164][{
                    Key["x"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1412864164][
                  GeneralUtilities`Slice[
                   Key["x"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1412864164][
                  GeneralUtilities`Slice[
                   Key["x"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"y\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"y\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1412864164][{
                    Key["y"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1412864164][
                  GeneralUtilities`Slice[
                   Key["y"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1412864164][
                  GeneralUtilities`Slice[
                   Key["y"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"z\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"z\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1412864164][{
                    Key["z"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1412864164][
                  GeneralUtilities`Slice[
                   Key["z"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1412864164][
                  GeneralUtilities`Slice[
                   Key["z"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1412864164][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1412864164]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1412864164][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1412864164][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[
         TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {96., {69.75, 83.25}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[4]=",ExpressionUUID->"eca7a6b4-ed40-47a9-a76a-2e12325169fe"]
}, Open  ]],

Cell[TextData[{
 "\:8fd9\:91cc\:662f\:5bf9\:5e94\:4e8e\:6240\:6709\[OpenCurlyDoubleQuote]\
\:884c\[CloseCurlyDoubleQuote]\:7684\[OpenCurlyDoubleQuote]",
 Cell[BoxData[
 "z"], "InlineCodeText",ExpressionUUID->
  "ca2bda7e-8362-4343-8a97-58c5d2e86185"],
 " \:5217\[CloseCurlyDoubleQuote]\:7684\:6570\:636e\:96c6\:3002"
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369849477723265`*^9, 
  3.8369849828727865`*^9}},ExpressionUUID->"b5f0702e-4c56-4126-b28f-\
bb672fc9fbab"],

Cell[TextData[{
 "\:751f\:6210\:4e00\:4e2a\:7531\:6240\:6709\:884c\:7684\
\[OpenCurlyDoubleQuote]",
 Cell[BoxData[
 "z"], "InlineCode",ExpressionUUID->"2aad6f65-8eac-40ed-97dc-f548d8b1e756"],
 " \:5217\[CloseCurlyDoubleQuote]\:7ec4\:6210\:7684\:6570\:636e\:96c6\:ff1a"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369849944404497`*^9, 
  3.8369850273537636`*^9}},ExpressionUUID->"08da1713-def3-4a61-91a4-\
871c8d5ef751"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"All", ",", "\"\<z\>\""}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[5]:=",ExpressionUUID->"46463f73-8ecb-416b-a561-49ae701685a2"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Atom[Integer], 2], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
            TypeSystem`PackageScope`AtomShape[34]]], 2, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1093571957], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Atom[Integer], 2], "HandleQ" -> True, "RowTarget" -> 20, 
        "Data" -> TypeSystem`PackageScope`CacheHandle[1093571957]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                "a", ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[529882178][
                 
                  GeneralUtilities`Slice[
                   Key["a"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                "b", ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[529882178][
                 
                  GeneralUtilities`Slice[
                   Key["b"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            Module[{
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 529882178][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 529882178]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[529882178][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[529882178][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {105., {44.25, 57.75}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[5]=",ExpressionUUID->"722ae6f9-982a-4034-9447-219258cc5141"]
}, Open  ]],

Cell["\:63d0\:53d6\:6570\:636e\:96c6\:7684\:4e00\:90e8\:5206\:53ea\:662f\:4e00\
\:4e2a\:5f00\:59cb\:3002\:5728\:4efb\:4f55\:4f60\:53ef\:4ee5\:67e5\:8be2\:4e00\
\:90e8\:5206\:6570\:636e\:7684\:5730\:65b9\:ff0c\:4f60\:4e5f\:53ef\:4ee5\:7ed9\
\:51fa\:4e00\:4e2a\:51fd\:6570\:ff0c\:8be5\:51fd\:6570\:5c06\:5e94\:7528\:4e8e\
\:8be5\:5c42\:6b21\:7684\:6240\:6709\:90e8\:5206\:3002", "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369850485419226`*^9, 3.836985061662406*^9}, {
  3.8369851830257535`*^9, 3.836985208837698*^9}},
 CellTags->
  "LastCellOfAPage",ExpressionUUID->"65e77bd0-1f6c-483e-8217-3b2b10bc087e"],

Cell[TextData[{
 "\:901a\:8fc7\:5bf9\:6240\:6709\:884c\:7684\:6240\:6709\:5217\:5e94\:7528 ",
 ButtonBox["Total",
  BaseStyle->"Link"],
 "\:ff0c\:83b7\:5f97\:6bcf\:884c\:7684\:603b\:548c\:ff1a"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836985220727556*^9, 3.836985259423045*^9}},
 CellTags->{
  "p:272", "i:5"},ExpressionUUID->"d2cf7064-169f-4140-9666-76999da3fc45"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"All", ",", "Total"}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[6]:=",ExpressionUUID->"674d69bd-0d2f-465c-85f5-58001ca92487"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Atom[Integer], 2], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
            TypeSystem`PackageScope`AtomShape[34]]], 2, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[634172651], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Atom[Integer], 2], "HandleQ" -> True, "RowTarget" -> 20, 
        "Data" -> TypeSystem`PackageScope`CacheHandle[634172651]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                "a", ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[721151216][
                 
                  GeneralUtilities`Slice[
                   Key["a"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                "b", ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["22"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[721151216][
                 
                  GeneralUtilities`Slice[
                   Key["b"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            Module[{
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 721151216][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 721151216]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[721151216][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[721151216][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {105., {44.25, 57.75}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[6]=",ExpressionUUID->"5922addc-3df4-4ba7-a6cb-4a4164bcb8b0"]
}, Open  ]],

Cell[TextData[{
 "\:5982\:679c\:6211\:4eec\:7528 ",
 Cell[BoxData[
 "f"], "InlineCodeText",ExpressionUUID->
  "6d03c5d7-650d-4ae7-bbcd-c1f88aa1a164"],
 " \:800c\:4e0d\:662f ",
 ButtonBox["Total",
  BaseStyle->"Link"],
 "\:ff0c\:6211\:4eec\:53ef\:4ee5\:770b\:770b\:53d1\:751f\:4e86\:4ec0\:4e48\
\:ff1a\:51fd\:6570\:88ab\:5e94\:7528\:4e8e\:6bcf\:4e2a\[OpenCurlyDoubleQuote]\
\:884c\[CloseCurlyDoubleQuote]\:7684\:5173\:8054\:3002"
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369852697069783`*^9, 
  3.8369853295177975`*^9}},ExpressionUUID->"ef696a96-e1b7-4945-bed3-\
d3251972bdeb"],

Cell["\:5bf9\:6bcf\:884c\:5e94\:7528\:51fd\:6570 f\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369853392315063`*^9, 
  3.836985358948092*^9}},ExpressionUUID->"1ae1e45b-a4e1-483b-83a1-\
ef8d69906a7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"All", ",", "f"}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[7]:=",ExpressionUUID->"a8505d69-86d6-4b40-8e4c-fa2f4cb4e791"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "DisplayedRowCount" -> 20, "RowCount" -> 2, "Length" -> 2, 
        "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration["a", "b"]], TypeSystem`AnyType, 2], 
        "DisplayedColumnCount" -> 20, "DataRowCount" -> 0, "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[27.], 
            TypeSystem`PackageScope`UnknownShape]], 2, {}], "DataColumnCount" -> 
        0, "InitialData" -> TypeSystem`PackageScope`CacheHandle[693002410], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration["a", "b"]], TypeSystem`AnyType, 2], 
        "HandleQ" -> True, "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[693002410]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["a", 
                    Style[
                    "a", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1976287413][{
                    Key["a"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1976287413][
                   GeneralUtilities`Slice[
                    Key["a"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"f", "[", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"x\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"y\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"z\"", "\[Rule]", "3"}]}], 
                    "\[RightAssociation]"}], "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1976287413][
                  GeneralUtilities`Slice[
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["b", 
                    Style[
                    "b", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1976287413][{
                    Key["b"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1976287413][
                   GeneralUtilities`Slice[
                    Key["b"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"f", "[", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"x\"", "\[Rule]", "5"}], ",", 
                    RowBox[{"\"y\"", "\[Rule]", "10"}], ",", 
                    RowBox[{"\"z\"", "\[Rule]", "7"}]}], 
                    "\[RightAssociation]"}], "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1976287413][
                  GeneralUtilities`Slice[
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1976287413][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1976287413]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1976287413][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1976287413][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {528., {60.75, 74.25}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[7]=",ExpressionUUID->"3f5596fb-257a-41d4-bf17-89b70b14a2aa"]
}, Open  ]],

Cell["\:5e94\:7528\:4e00\:4e2a\:51fd\:6570\:ff0c\:5c06\:6bcf\:4e2a\:5173\:8054\
\:7684 x \:548c z \:5143\:7d20\:76f8\:52a0\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836985370920107*^9, 3.8369853719606953`*^9}, {
   3.8369854507040358`*^9, 3.836985452218687*^9}, 
   3.836985611102805*^9},ExpressionUUID->"0af3dd15-ccdd-4d8a-87e0-\
5d9de706bc81"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"All", ",", 
   RowBox[{
    RowBox[{"#x", "+", "#z"}], "&"}]}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[8]:=",ExpressionUUID->"f4df816e-d176-413c-a77a-a2895201b2ed"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Atom[Integer], 2], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
            TypeSystem`PackageScope`AtomShape[34]]], 2, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[477482106], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Atom[Integer], 2], "HandleQ" -> True, "RowTarget" -> 20, 
        "Data" -> TypeSystem`PackageScope`CacheHandle[477482106]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                "a", ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1035181831][
                  GeneralUtilities`Slice[
                   Key["a"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                "b", ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1035181831][
                  GeneralUtilities`Slice[
                   Key["b"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1035181831][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1035181831]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1035181831][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1035181831][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {105., {44.25, 57.75}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[8]=",ExpressionUUID->"c647ee24-3034-4077-b46e-d54410511bab"]
}, Open  ]],

Cell[TextData[{
 "\:4f60\:53ef\:4ee5\:4f7f\:7528\:4efb\:4f55\:51fd\:6570\:ff1b\:8fd9\:91cc\
\:662f ",
 ButtonBox["PieChart",
  BaseStyle->"Link"],
 "\:ff1a"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369856254931536`*^9, 3.836985633783345*^9}},
 CellTags->"i:6",ExpressionUUID->"63f7c831-910a-4f81-afd1-33b6a99371c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"All", ",", "PieChart"}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[9]:=",ExpressionUUID->"526248db-b06b-461f-9589-e34ffd8cb68c"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration["a", "b"]], 
          TypeSystem`Atom[Graphics], 2], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
            TypeSystem`PackageScope`AtomShape[60]]], 2, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[49315460], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration["a", "b"]], 
          TypeSystem`Atom[Graphics], 2], "HandleQ" -> True, "RowTarget" -> 20,
         "Data" -> TypeSystem`PackageScope`CacheHandle[49315460]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                "a", ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[{{}, {}, 
                    
                    DynamicModuleBox[{
                    DynamicChart`click$292113$292195 = False, 
                    DynamicChart`click$292120$292195 = False, 
                    DynamicChart`click$292124$292195 = False}, {{
                    Directive[
                    RGBColor[0.5, 0.5, 1.], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.0943951023931957`, 
                    3.141592653589793}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$292113$292195, 
                    FEPrivate`Not[DynamicChart`click$292113$292195]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$292113$292195, {{{1., 0}, {
                    0, 1.}}, {-0.17320508075688776`, 0.09999999999999999}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$292113$292195}]]}, {
                    
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 2.0943951023931957`}]}], 
                    StatusArea[#, 2]& , TagBoxNote -> "2"], 
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$292120$292195, 
                    FEPrivate`Not[DynamicChart`click$292120$292195]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$292120$292195, {{{1., 0}, {0, 1.}}, {
                    0.09999999999999998, 0.17320508075688776`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$292120$292195}]]}, {
                    
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}], 
                    StatusArea[#, 3]& , TagBoxNote -> "3"], 
                    StyleBox["3", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[3, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$292124$292195, 
                    FEPrivate`Not[DynamicChart`click$292124$292195]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$292124$292195, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$292124$292195}]]}}}}}, {}}, {{}}}}, {{{{
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$292113$292195, 
                    FEPrivate`Not[DynamicChart`click$292113$292195]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$292113$292195, {{{1., 0}, {
                    0, 1.}}, {-0.17320508075688776`, 0.09999999999999999}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$292113$292195}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$292120$292195, 
                    FEPrivate`Not[DynamicChart`click$292120$292195]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$292120$292195, {{{1., 0}, {0, 1.}}, {
                    0.09999999999999998, 0.17320508075688776`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$292120$292195}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
                    StyleBox["3", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[3, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$292124$292195, 
                    FEPrivate`Not[DynamicChart`click$292124$292195]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$292124$292195, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$292124$292195}]]}, {}}}, {}}}, 
                    DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, \
{}}}, {}}}, {PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                    GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                    None, ImageSize -> 96, ContentSelectable -> False, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], LabelStyle -> {
                    GrayLevel[0], FontFamily -> "Arial"}, 
                    PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
                    Scaled[0.02]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1873534869][
                  GeneralUtilities`Slice[
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                "b", ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[{{}, {}, 
                    
                    DynamicModuleBox[{
                    DynamicChart`click$292163$292196 = False, 
                    DynamicChart`click$292167$292196 = False, 
                    DynamicChart`click$292171$292196 = False}, {{
                    Directive[
                    RGBColor[0.5, 0.5, 1.], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {1.7135959928671598`, 
                    3.141592653589793}]}], StatusArea[#, 5]& , TagBoxNote -> 
                    "5"], 
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$292163$292196, 
                    FEPrivate`Not[DynamicChart`click$292163$292196]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$292163$292196, {{{1., 0}, {
                    0, 1.}}, {-0.15114991487085164`, 
                    0.13097214678905705`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$292163$292196}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.1423973285781068`, 
                    1.7135959928671598`}]}], StatusArea[#, 10]& , TagBoxNote -> 
                    "10"], 
                    StyleBox["10", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$292167$292196, 
                    FEPrivate`Not[DynamicChart`click$292167$292196]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$292167$292196, {{{1., 0}, {0, 1.}}, {
                    0.1918985947228995, 0.056346511368285904`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$292167$292196}]]}, {
                    
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.1423973285781068`}]}], 
                    StatusArea[#, 7]& , TagBoxNote -> "7"], 
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$292171$292196, 
                    FEPrivate`Not[DynamicChart`click$292171$292196]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$292171$292196, {{{1., 0}, {
                    0, 
                    1.}}, {-0.10812816349111953`, -0.16825070656623622`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$292171$292196}]]}}}}}, {}}, {{}}}}, {{{{
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 5]& , TagBoxNote -> "5"], 
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$292163$292196, 
                    FEPrivate`Not[DynamicChart`click$292163$292196]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$292163$292196, {{{1., 0}, {
                    0, 1.}}, {-0.15114991487085164`, 
                    0.13097214678905705`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$292163$292196}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 10]& , TagBoxNote -> "10"], 
                    StyleBox["10", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$292167$292196, 
                    FEPrivate`Not[DynamicChart`click$292167$292196]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$292167$292196, {{{1., 0}, {0, 1.}}, {
                    0.1918985947228995, 0.056346511368285904`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$292167$292196}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 7]& , TagBoxNote -> "7"], 
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$292171$292196, 
                    FEPrivate`Not[DynamicChart`click$292171$292196]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$292171$292196, {{{1., 0}, {
                    0, 1.}}, {-0.10812816349111953`, -0.16825070656623622`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$292171$292196}]]}, {}}}, {}}}, 
                    DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, \
{}}}, {}}}, {PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                    GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                    None, ImageSize -> 96, ContentSelectable -> False, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], LabelStyle -> {
                    GrayLevel[0], FontFamily -> "Arial"}, 
                    PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
                    Scaled[0.02]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1873534869][
                  GeneralUtilities`Slice[
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1873534869][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1873534869]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1873534869][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1873534869][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {263., {199.25, 212.75}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[9]=",ExpressionUUID->"237fd118-e84b-44a3-bc38-14a84d80ec0d"]
}, Open  ]],

Cell["\:4f60\:4e5f\:53ef\:4ee5\:7ed9\:51fa\:4e00\:4e2a\:5e94\:7528\:4e8e\:6240\
\:6709\:884c\:7684\:51fd\:6570\:3002", "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836985661458043*^9, 
  3.8369856916420846`*^9}},ExpressionUUID->"4ca7617d-13f4-499b-804b-\
42adf09ef4a0"],

Cell[TextData[{
 "\:8fd9\:5c06\:63d0\:53d6\:6bcf\:4e2a\[OpenCurlyDoubleQuote]z \:5217\
\[CloseCurlyDoubleQuote]\:7684\:503c\:ff0c\:7136\:540e\:5c06 ",
 Cell[BoxData[
 "f"], "InlineCode",ExpressionUUID->"b5982e91-598e-4788-870a-9e9a1423da35"],
 " \:5e94\:7528\:4e8e\:7ed3\:679c\:7684\:5173\:8054\:ff1a"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369857034909563`*^9, 3.8369857200514693`*^9}, {
  3.836985778693308*^9, 
  3.836985785338763*^9}},ExpressionUUID->"e71fc055-bc15-4adc-a2da-\
10ffceb8c8f9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"f", ",", "\"\<z\>\""}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[10]:=",ExpressionUUID->"df3c5ee7-3967-49a4-bbd9-2521217764b3"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"a\"\>", "\[Rule]", "3"}], ",", 
    RowBox[{"\<\"b\"\>", "\[Rule]", "7"}]}], "\[RightAssociation]"}], 
  "]"}]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[10]=",ExpressionUUID->"f887f3b1-ef7c-4cde-ab4b-9c20c5536fc8"]
}, Open  ]],

Cell["\:5bf9\:6240\:6709\:5217\:7684\:603b\:548c\:5e94\:7528 f\:ff1a", \
"CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836985818887635*^9, 
  3.8369858335923715`*^9}},ExpressionUUID->"2c3ca063-f10e-4914-95e1-\
23dbd7b657d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"f", ",", "Total"}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[11]:=",ExpressionUUID->"15365425-176f-4f2c-bbbe-a9960ffe7782"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"a\"\>", "\[Rule]", "6"}], ",", 
    RowBox[{"\<\"b\"\>", "\[Rule]", "22"}]}], "\[RightAssociation]"}], 
  "]"}]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[11]=",ExpressionUUID->"5d538428-1b0a-4923-92e2-930df24b44df"]
}, Open  ]],

Cell["\:627e\:51fa\:8fd9\:4e9b\:603b\:548c\:7684\:6700\:5927\:503c\:ff1a", \
"CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836985855876335*^9, 3.8369858625488353`*^9}},
 CellTags->{
  "p:273", "i:7"},ExpressionUUID->"d2a75d4d-d24c-4935-9df0-acec04d937c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"Max", ",", "Total"}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[12]:=",ExpressionUUID->"69c86e2f-9341-4965-8a83-aaa0a173a69a"],

Cell[BoxData["22"], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[12]=",ExpressionUUID->"7adce590-cf05-4f20-9cea-1e545abc5e93"]
}, Open  ]],

Cell[TextData[{
 "\:4f60\:603b\:662f\:53ef\:4ee5\:8fdb\:884c\[OpenCurlyDoubleQuote]\:8fde\
\:9501\[CloseCurlyDoubleQuote]\:67e5\:8be2\:ff0c\:4f8b\:5982\:ff0c\:9996\:5148\
\:8ba1\:7b97\:6240\:6709\:884c\:7684\:603b\:548c\:ff0c\:7136\:540e\:53d6\:51fa\
\[OpenCurlyDoubleQuote]",
 Cell[BoxData[
 "b"], "InlineCodeText",ExpressionUUID->
  "4545c74d-294c-4259-b840-6ff4b7397272"],
 " \:884c\[CloseCurlyDoubleQuote]\:7684\:7ed3\:679c\:3002"
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369858735770607`*^9, 3.836985950541561*^9}, 
   3.8369860056991963`*^9},
 CellTags->"i:8",ExpressionUUID->"f5634acf-c28f-4fa8-86ef-8bab832b889c"],

Cell[TextData[{
 "\:8ba1\:7b97\:6240\:6709\:884c\:7684\:603b\:548c\:ff0c\:7136\:540e\:53d6\
\:51fa\[OpenCurlyDoubleQuote]",
 Cell[BoxData[
 "b"], "InlineCode",ExpressionUUID->"345af5f6-f2dd-4665-903c-7b6b042e4101"],
 " \:884c\[CloseCurlyDoubleQuote]\:7684\:603b\:548c\:ff1a"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836985967279663*^9, 
  3.8369860013441277`*^9}},ExpressionUUID->"ca00f8f2-e235-4e6e-b852-\
c97a2cca05e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", 
   RowBox[{"All", ",", "Total"}], "]"}], "[", "\"\<b\>\"", "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[13]:=",ExpressionUUID->"b9f883fa-0a03-4600-88b2-d9e266c5a0ef"],

Cell[BoxData["22"], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[13]=",ExpressionUUID->"6ae4ddaf-fa5f-42aa-8c9b-170c7dffc2fc"]
}, Open  ]],

Cell["\:5b83\:7b49\:540c\:4e8e\:8fd9\:6837\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369860147225523`*^9, 
  3.8369860179308577`*^9}},ExpressionUUID->"bbaa57d0-8c22-4705-9ec9-\
d4527960877e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"\"\<b\>\"", ",", "Total"}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[14]:=",ExpressionUUID->"68a6c3fe-496d-4c95-928c-9b16fa270f98"],

Cell[BoxData["22"], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[14]=",ExpressionUUID->"a1070862-60e9-4ffb-9485-85f3989e992e"]
}, Open  ]],

Cell[TextData[{
 "\:7279\:522b\:662f\:5728\:5904\:7406\:5927\:578b\:6570\:636e\:96c6\:7684\
\:65f6\:5019\:ff0c\:901a\:5e38\:4f1a\:60f3\:6839\:636e\:4e00\:4e2a\:6807\:51c6\
\:6765\:9009\:62e9\:90e8\:5206\:6570\:636e\:3002",
 ButtonBox["Select",
  BaseStyle->"Link"],
 " \:7684",
 StyleBox["\:8fd0\:7b97\:7b26\:5f62\:5f0f",
  FontWeight->"Bold"],
 "\:63d0\:4f9b\:4e86\:4e00\:4e2a\:975e\:5e38\:65b9\:4fbf\:7684\:65b9\:6cd5\
\:6765\:505a\:5230\:8fd9\:4e00\:70b9\:3002"
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369860278612833`*^9, 3.8369860291459208`*^9}, 
   3.8369860634581947`*^9, {3.8369863210927134`*^9, 3.8369863437087107`*^9}},
 CellTags->"i:9",ExpressionUUID->"9a3c31e7-e1eb-4cff-8a73-8f8f07590932"],

Cell["\:4ece\:5217\:8868\:4e2d\:9009\:62e9\:5927\:4e8e 5 \:7684\:6570\:5b57\
\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369863535494266`*^9, 3.836986378470914*^9}},
 CellTags->"i:10",ExpressionUUID->"3c31075a-9bf1-4a0d-ae07-d2f653fdd530"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "3", ",", "6", ",", "8", ",", "2", ",", "5", ",", "9", ",", 
     "7"}], "}"}], ",", 
   RowBox[{
    RowBox[{"#", ">", "5"}], "&"}]}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[15]:=",ExpressionUUID->"4b96ff64-d4fd-4212-9303-5e9cbe3b9dc0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "8", ",", "9", ",", "7"}], "}"}]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[15]=",ExpressionUUID->"07ec3864-2369-4c6a-ad1a-446520bd1231"]
}, Open  ]],

Cell[TextData[{
 "\:8fd8\:6709\:4e00\:79cd\:65b9\:6cd5\:53ef\:4ee5\:5f97\:5230\:540c\:6837\
\:7684\:7b54\:6848\:ff0c\:4f7f\:7528 ",
 ButtonBox["Select",
  BaseStyle->"Link"],
 " \:7684\:8fd0\:7b97\:7b26\:5f62\:5f0f\:ff1a"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369863901585264`*^9, 
  3.8369864058981733`*^9}},ExpressionUUID->"be1be0b9-365c-4d5e-bb43-\
32b83d9ef231"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"#", ">", "5"}], "&"}], "]"}], "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "3", ",", "6", ",", "8", ",", "2", ",", "5", ",", "9", ",", 
    "7"}], "}"}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[16]:=",ExpressionUUID->"f0593e3d-bda8-46f9-8dbe-15c3ea6275d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "8", ",", "9", ",", "7"}], "}"}]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[16]=",ExpressionUUID->"221b8342-9541-460b-9f12-66c43172dac8"]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Select",
  BaseStyle->"Link"],
 " \:7684\:8fd0\:7b97\:7b26\:5f62\:5f0f\:662f\:4e00\:4e2a\:51fd\:6570\:ff0c\
\:53ef\:4ee5\:5e94\:7528\:5b83\:6765\:5b9e\:9645\:6267\:884c ",
 ButtonBox["Select",
  BaseStyle->"Link"],
 " \:64cd\:4f5c\:3002"
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836986429558715*^9, 3.836986438077808*^9}, {
  3.8369865745247746`*^9, 
  3.8369865846613874`*^9}},ExpressionUUID->"fbb6df0d-6369-4f24-92c2-\
8ce26ae9d5d8"],

Cell[TextData[{
 "\:901a\:8fc7\:53ea\:9009\:62e9\[OpenCurlyDoubleQuote]",
 Cell[BoxData[
 "z"], "InlineCode",ExpressionUUID->"c1b42d28-f1e0-44d4-a120-6ef630bd8ade"],
 " \:5217\[CloseCurlyDoubleQuote]\:5927\:4e8e 5 \
\:7684\:884c\:6765\:521b\:5efa\:4e00\:4e2a\:6570\:636e\:96c6\:ff1a"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369865972010345`*^9, 3.836986635373334*^9}, 
   3.8369866774941173`*^9},ExpressionUUID->"c99eafed-da95-4c25-a5cd-\
bff7cd44c1fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"#z", ">", "5"}], "&"}], "]"}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[17]:=",ExpressionUUID->"a37a2ddb-7432-4933-9b34-fb897ca1bf4c"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"x", "y", "z"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer]}], 1], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "x"} -> 
           1, {All, "y"} -> 1, {All, "z"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "x" -> TypeSystem`PackageScope`AtomShape[34], "y" -> 
               TypeSystem`PackageScope`AtomShape[34], "z" -> 
               TypeSystem`PackageScope`AtomShape[34]]]]], 1, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1722381316], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"x", "y", "z"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer]}], 1], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1722381316]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1313445835][{All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313445835][
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"x\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"x\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1313445835][{All, "x"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313445835][
                  GeneralUtilities`Slice[All, "x"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"y\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"y\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1313445835][{All, "y"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313445835][
                  GeneralUtilities`Slice[All, "y"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"z\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"z\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1313445835][{All, "z"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313445835][
                  GeneralUtilities`Slice[All, "z"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["b", 
                    Style[
                    "b", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1313445835][{
                    Key["b"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1313445835][
                   GeneralUtilities`Slice[
                    Key["b"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313445835][
                  GeneralUtilities`Slice[
                   Key["b"], 
                   Key["x"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313445835][
                  GeneralUtilities`Slice[
                   Key["b"], 
                   Key["y"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313445835][
                  GeneralUtilities`Slice[
                   Key["b"], 
                   Key["z"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1313445835][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1313445835]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313445835][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313445835][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {211., {44.75, 58.25}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[17]=",ExpressionUUID->"73fe2cde-6dbc-4000-89ea-a7d340fcf7af"]
}, Open  ]],

Cell["\:5bf9\:4e8e\:6bcf\:4e00\:884c\:ff0c\:9009\:62e9\:6570\:503c\:5927\:4e8e\
 5 \:7684\:5217\:ff0c\:7559\:4e0b\:4e00\:4e2a\:952f\:9f7f\:72b6\:7ed3\:6784\
\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369866869824643`*^9, 3.8369866957726145`*^9}, 
   3.8369867693490353`*^9},ExpressionUUID->"22a282d3-918f-44c6-85a6-\
fc8e8d10e13b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"All", ",", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#", ">", "5"}], "&"}], "]"}]}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[18]:=",ExpressionUUID->"04b9370c-ac5b-45cd-ac51-489e0feff0c4"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "DisplayedRowCount" -> 20, "RowCount" -> 2, "Length" -> 2, 
        "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Assoc[
           TypeSystem`Atom[String], 
           TypeSystem`Atom[Integer], TypeSystem`AnyLength], 2], 
        "DisplayedColumnCount" -> 20, "DataRowCount" -> 0, "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`KeyValueShape[
               TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
               TypeSystem`PackageScope`AtomShape[34]]], 2, {All}]]], 2, {}], 
        "DataColumnCount" -> 0, "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[2060372795], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Assoc[
           TypeSystem`Atom[String], 
           TypeSystem`Atom[Integer], TypeSystem`AnyLength], 2], "HandleQ" -> 
        True, "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[2060372795]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["a", 
                    Style[
                    "a", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 431110065][{
                    
                    Key["a"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[431110065][
                   GeneralUtilities`Slice[
                    Key["a"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Spacer[10], 
                    Style[
                    Spacer[10], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 431110065][{
                    
                    Key["a"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[431110065][
                 
                  GeneralUtilities`Slice[
                   Key["a"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5], 8}], SpanFromLeft}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["b", 
                    Style[
                    "b", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 431110065][{
                    
                    Key["b"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[431110065][
                   GeneralUtilities`Slice[
                    Key["b"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["y", 
                    Style[
                    "y", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 431110065][{
                    
                    Key["b"], 
                    Key["y"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[431110065][
                   GeneralUtilities`Slice[
                    Key["b"], 
                    Key["y"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[431110065][
                 
                  GeneralUtilities`Slice[
                   Key["b"], 
                   Key["y"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["z", 
                    Style[
                    "z", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 431110065][{
                    
                    Key["b"], 
                    Key["z"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[431110065][
                   GeneralUtilities`Slice[
                    Key["b"], 
                    Key["z"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[431110065][
                 
                  GeneralUtilities`Slice[
                   Key["b"], 
                   Key["z"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 431110065][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 431110065]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[431110065][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[431110065][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {153., {82.75, 96.25}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[18]=",ExpressionUUID->"1fb61b46-4f77-4baf-ade5-fd71f64a4630"]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Normal",
  BaseStyle->"Link"],
 " \:5c06\:6570\:636e\:96c6\:8f6c\:6362\:4e3a\:4e00\:4e2a\:666e\:901a\:7684\
\:5173\:8054\:7684\:5173\:8054\:ff1a"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369868676366873`*^9, 3.836986903471525*^9}},
 CellTags->{
  "p:274", "i:11"},ExpressionUUID->"7a9974ef-4edd-4036-b26e-5e5326320fc4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "%", "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[19]:=",ExpressionUUID->"a291396a-348a-4b03-821b-f97d0a40e888"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"a\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"y\"\>", "\[Rule]", "10"}], ",", 
      RowBox[{"\<\"z\"\>", "\[Rule]", "7"}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[19]=",ExpressionUUID->"3c869a03-8bb0-4b15-a17b-190cc7e5169f"]
}, Open  ]],

Cell["\:8bb8\:591a Wolfram \:8bed\:8a00\:51fd\:6570\:90fd\:6709\:8fd0\:7b97\
\:7b26\:5f62\:5f0f\:3002", "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369869181097293`*^9, 
  3.8369869323764057`*^9}},ExpressionUUID->"9bb61a47-28f5-4dbd-b368-\
722c268fa869"],

Cell["\:6839\:636e\:51fd\:6570\:5e94\:7528\:4e8e\:6bcf\:4e2a\:5143\:7d20\:540e\
\:7684\:503c\:8fdb\:884c\:6392\:5e8f\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369869450986805`*^9, 3.836986946119478*^9}, {
  3.8369869838677692`*^9, 3.836986999960498*^9}},
 CellTags->"i:12",ExpressionUUID->"dd1c88f7-6239-480c-abd7-4647da5e97d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SortBy", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "3", ",", "6", ",", "8", ",", "2", ",", "5", ",", "9", ",", 
     "7"}], "}"}], ",", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"EvenQ", "[", "#", "]"}], ",", "#", ",", 
      RowBox[{"10", "+", "#"}]}], "]"}], "&"}]}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[20]:=",ExpressionUUID->"79054081-f344-4c57-a3b5-27e574c16292"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "6", ",", "8", ",", "1", ",", "3", ",", "5", ",", "7", ",", "9"}],
   "}"}]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[20]=",ExpressionUUID->"83885077-e72e-4161-8dd3-ef9a9d679c3e"]
}, Open  ]],

Cell[TextData[{
 ButtonBox["SortBy",
  BaseStyle->"Link"],
 " \:6709\:4e00\:4e2a\:8fd0\:7b97\:7b26\:5f62\:5f0f\:ff1a"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369870119759607`*^9, 
  3.8369870165985374`*^9}},ExpressionUUID->"4460d28a-a035-4f8b-ab9e-\
268cd96f57aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SortBy", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"EvenQ", "[", "#", "]"}], ",", "#", ",", 
      RowBox[{"10", "+", "#"}]}], "]"}], "&"}], "]"}], "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "3", ",", "6", ",", "8", ",", "2", ",", "5", ",", "9", ",", 
    "7"}], "}"}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[21]:=",ExpressionUUID->"374cc508-4b89-4c76-a7b3-6e925b2363ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "6", ",", "8", ",", "1", ",", "3", ",", "5", ",", "7", ",", "9"}],
   "}"}]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[21]=",ExpressionUUID->"82f83f63-8a38-416f-b570-00d5ff4c93e2"]
}, Open  ]],

Cell["\:6839\:636e x \:548c y \
\:5217\:7684\:5dee\:503c\:5bf9\:884c\:8fdb\:884c\:6392\:5e8f\:ff1a", \
"CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836987032342903*^9, 3.8369870377342963`*^9}, 
   3.8369870703961487`*^9},ExpressionUUID->"d71dbce1-aabc-411e-aaf3-\
262127c8e5eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"SortBy", "[", 
   RowBox[{
    RowBox[{"#x", "-", "#y"}], "&"}], "]"}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[22]:=",ExpressionUUID->"6c29b2ad-f13e-4df3-8959-bc7eeb9bf680"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"x", "y", "z"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer]}], 2], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "x"} -> 
           1, {All, "y"} -> 1, {All, "z"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "x" -> TypeSystem`PackageScope`AtomShape[34], "y" -> 
               TypeSystem`PackageScope`AtomShape[34], "z" -> 
               TypeSystem`PackageScope`AtomShape[34]]]]], 2, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[502204778], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"x", "y", "z"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer]}], 2], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[502204778]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 233387336][{
                    All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[233387336][
                 
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"x\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"x\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 233387336][{
                    All, "x"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[233387336][
                 
                  GeneralUtilities`Slice[All, "x"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"y\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"y\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 233387336][{
                    All, "y"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[233387336][
                 
                  GeneralUtilities`Slice[All, "y"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"z\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"z\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 233387336][{
                    All, "z"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[233387336][
                 
                  GeneralUtilities`Slice[All, "z"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["b", 
                    Style[
                    "b", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 233387336][{
                    
                    Key["b"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[233387336][
                   GeneralUtilities`Slice[
                    Key["b"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[233387336][
                 
                  GeneralUtilities`Slice[
                   Key["b"], 
                   Key["x"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[233387336][
                 
                  GeneralUtilities`Slice[
                   Key["b"], 
                   Key["y"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[233387336][
                 
                  GeneralUtilities`Slice[
                   Key["b"], 
                   Key["z"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["a", 
                    Style[
                    "a", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 233387336][{
                    
                    Key["a"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[233387336][
                   GeneralUtilities`Slice[
                    Key["a"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[233387336][
                 
                  GeneralUtilities`Slice[
                   Key["a"], 
                   Key["x"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[233387336][
                 
                  GeneralUtilities`Slice[
                   Key["a"], 
                   Key["y"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[233387336][
                 
                  GeneralUtilities`Slice[
                   Key["a"], 
                   Key["z"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 233387336][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 233387336]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[233387336][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[233387336][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {211., {68.75, 82.25}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[22]=",ExpressionUUID->"d4541ada-cfca-4fad-93e0-07576c99f2fb"]
}, Open  ]],

Cell["\:5bf9\:5404\:884c\:8fdb\:884c\:6392\:5e8f\:ff0c\:5e76\:627e\:51fa\:6240\
\:6709\:5217\:7684\:603b\:548c\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369870812259073`*^9, 
  3.8369870887791505`*^9}},ExpressionUUID->"101c3c5e-6bc7-4785-af73-\
860502a49ca9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"#x", "-", "#y"}], "&"}], "]"}], ",", "Total"}], "]"}]], "Input",\

 Editable->False,
 Deletable->False,
 CellLabel->"In[23]:=",ExpressionUUID->"bea25a9f-069c-4924-b6ae-ef2b23caf925"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Atom[Integer], 2], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
            TypeSystem`PackageScope`AtomShape[34]]], 2, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[706579405], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Atom[Integer], 2], "HandleQ" -> True, "RowTarget" -> 20, 
        "Data" -> TypeSystem`PackageScope`CacheHandle[706579405]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                "b", ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["22"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1263130532][
                  GeneralUtilities`Slice[
                   Key["b"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                "a", ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1263130532][
                  GeneralUtilities`Slice[
                   Key["a"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1263130532][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1263130532]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1263130532][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1263130532][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {105., {44.25, 57.75}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[23]=",ExpressionUUID->"d3904cf5-7d92-4898-8093-3f390f3c97d1"]
}, Open  ]],

Cell["\:6709\:65f6\:4f60\:60f3\:5bf9\:6570\:636e\:96c6\:4e2d\:7684\:6bcf\:4e2a\
\:5143\:7d20\:5e94\:7528\:51fd\:6570\:3002", "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836987098263135*^9, 
  3.83698712988387*^9}},ExpressionUUID->"383fd40f-0080-444c-850c-\
99bf1c2916e6"],

Cell[TextData[{
 "\:5bf9\:6570\:636e\:96c6\:4e2d\:7684\:6bcf\:4e2a\:5143\:7d20\:5e94\:7528 ",
 Cell[BoxData[
 "f"], "InlineCode",ExpressionUUID->"6dee8fd7-b113-437d-8b1a-b97a244238cf"],
 "\:ff1a"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369871441446023`*^9, 
  3.836987157281866*^9}},ExpressionUUID->"bcb5e980-e0bf-4395-83fc-\
92ba49e0e8b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"All", ",", "All", ",", "f"}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[24]:=",ExpressionUUID->"6a01e8e9-aa59-4271-8f5b-77e2fc4b0e5d"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "DisplayedRowCount" -> 20, "RowCount" -> 2, "Length" -> 2, 
        "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{"x", "y", "z"}, {
           TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], 
        "DisplayedColumnCount" -> 20, "DataRowCount" -> 0, "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[3]} -> 1, {All, "x"} -> 
           1, {All, "y"} -> 1, {All, "z"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "x" -> TypeSystem`PackageScope`UnknownShape, "y" -> 
               TypeSystem`PackageScope`UnknownShape, "z" -> 
               TypeSystem`PackageScope`UnknownShape]]]], 2, {}]], 
        "DataColumnCount" -> 0, "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[2099161119], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{"x", "y", "z"}, {
           TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], 
        "HandleQ" -> True, "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[2099161119]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1931139439][{All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1931139439][
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"x\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"x\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1931139439][{All, "x"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1931139439][
                  GeneralUtilities`Slice[All, "x"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"y\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"y\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1931139439][{All, "y"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1931139439][
                  GeneralUtilities`Slice[All, "y"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"z\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"z\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1931139439][{All, "z"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1931139439][
                  GeneralUtilities`Slice[All, "z"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["a", 
                    Style[
                    "a", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1931139439][{
                    Key["a"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1931139439][
                   GeneralUtilities`Slice[
                    Key["a"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"f", "[", "1", "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1931139439][
                  GeneralUtilities`Slice[
                   Key["a"], 
                   Key["x"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"f", "[", "2", "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1931139439][
                  GeneralUtilities`Slice[
                   Key["a"], 
                   Key["y"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"f", "[", "3", "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1931139439][
                  GeneralUtilities`Slice[
                   Key["a"], 
                   Key["z"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["b", 
                    Style[
                    "b", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1931139439][{
                    Key["b"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1931139439][
                   GeneralUtilities`Slice[
                    Key["b"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"f", "[", "5", "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1931139439][
                  GeneralUtilities`Slice[
                   Key["b"], 
                   Key["x"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"f", "[", "10", "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1931139439][
                  GeneralUtilities`Slice[
                   Key["b"], 
                   Key["y"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"f", "[", "7", "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1931139439][
                  GeneralUtilities`Slice[
                   Key["b"], 
                   Key["z"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1931139439][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1931139439]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1931139439][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1931139439][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {314., {85.25, 98.75}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[24]=",ExpressionUUID->"575c4017-560e-4d65-ab52-416ab941eb1c"]
}, Open  ]],

Cell["\:5728\:5bf9\:5176\:5143\:7d20\:7684\:5e73\:65b9\:8fdb\:884c\:6c42\:548c\
\:4e4b\:524d\:ff0c\:5148\:5bf9\:5404\:884c\:8fdb\:884c\:6392\:5e8f\:ff1a", \
"CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369871727442007`*^9, 3.8369871735093484`*^9}, {
  3.8369872154563494`*^9, 
  3.836987224771804*^9}},ExpressionUUID->"b737402f-b993-4294-8047-\
b63f52605ea6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"#x", "-", "#y"}], "&"}], "]"}], ",", "Total", ",", 
   RowBox[{
    RowBox[{"#", "^", "2"}], "&"}]}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[25]:=",ExpressionUUID->"858aee17-f9cb-41a5-b8dc-0bbb54bff195"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Atom[Rational], 2], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
            TypeSystem`PackageScope`AtomShape[34]]], 2, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1847705540], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Atom[Rational], 2], "HandleQ" -> True, "RowTarget" -> 20,
         "Data" -> TypeSystem`PackageScope`CacheHandle[1847705540]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                "b", ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["174"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[480835238][
                 
                  GeneralUtilities`Slice[
                   Key["b"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                "a", ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[480835238][
                 
                  GeneralUtilities`Slice[
                   Key["a"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            Module[{
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 480835238][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 480835238]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[480835238][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[480835238][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {116., {44.25, 57.75}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[25]=",ExpressionUUID->"770d3bbc-821f-4b0e-a712-61d1e54d3931"]
}, Open  ]],

Cell[TextData[{
 "\:6570\:636e\:96c6\:53ef\:4ee5\:5305\:542b\:4efb\:610f\:7684\:5217\:8868\
\:548c\:5173\:8054\:7684\:7ec4\:5408\:3002\:4e0b\:9762\:662f\:4e00\:4e2a\:6570\
\:636e\:96c6\:ff0c\:5b83\:53ef\:4ee5\:88ab\:8ba4\:4e3a\:662f\:4e00\:4e2a\:5e26\
\:6709\:547d\:540d\:7684",
 StyleBox["\:5b57\:6bb5",
  FontWeight->"Bold"],
 "\:7684",
 StyleBox["\:8bb0\:5f55\:5217\:8868",
  FontWeight->"Bold"],
 "\:3002"
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369872408416014`*^9, 3.836987241781168*^9}, 
   3.8369873140760856`*^9, {3.836987551982253*^9, 3.8369875864048543`*^9}},
 CellTags->{
  "p:275", "i:13"},ExpressionUUID->"40208f57-b4ad-441c-8d4a-56eb73bab303"],

Cell["\:4f7f\:7528\:7531\:5173\:8054\:7ec4\:6210\:7684\:5217\:8868\:5f62\:6210\
\:7684\:6570\:636e\:96c6\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369876028988075`*^9, 
  3.836987633072096*^9}},ExpressionUUID->"5c7c4466-4cec-4e9b-8cad-\
6bd7a4f22537"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\"\<x\>\"", "\[Rule]", "2"}], ",", 
      RowBox[{"\"\<y\>\"", "\[Rule]", "4"}], ",", 
      RowBox[{"\"\<z\>\"", "\[Rule]", "6"}]}], "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\"\<x\>\"", "\[Rule]", "11"}], ",", 
      RowBox[{"\"\<y\>\"", "\[Rule]", "7"}], ",", 
      RowBox[{"\"\<z\>\"", "\[Rule]", "1"}]}], "\[RightAssociation]"}]}], 
   "}"}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[26]:=",ExpressionUUID->"6596bced-f733-453e-86b7-47fa6f11ac33"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"x", "y", "z"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer]}], 2], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "x"} -> 1, {All, "y"} -> 1, {All, "z"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "x" -> TypeSystem`PackageScope`AtomShape[34], "y" -> 
              TypeSystem`PackageScope`AtomShape[34], "z" -> 
              TypeSystem`PackageScope`AtomShape[34]]]], 2, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1861868257], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"x", "y", "z"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer]}], 2], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1861868257]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"x\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"x\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 784006071][{
                    All, "x"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[784006071][
                 
                  GeneralUtilities`Slice[All, "x"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"y\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"y\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 784006071][{
                    All, "y"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[784006071][
                 
                  GeneralUtilities`Slice[All, "y"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"z\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"z\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 784006071][{
                    All, "z"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[784006071][
                 
                  GeneralUtilities`Slice[All, "z"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[784006071][
                 
                  GeneralUtilities`Slice[1, 
                   Key["x"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[784006071][
                 
                  GeneralUtilities`Slice[1, 
                   Key["y"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[784006071][
                 
                  GeneralUtilities`Slice[1, 
                   Key["z"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[784006071][
                 
                  GeneralUtilities`Slice[2, 
                   Key["x"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[784006071][
                 
                  GeneralUtilities`Slice[2, 
                   Key["y"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[784006071][
                 
                  GeneralUtilities`Slice[2, 
                   Key["z"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 784006071][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 784006071]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[784006071][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[784006071][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {163., {68.75, 82.25}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[26]=",ExpressionUUID->"9ec6f73a-b1ff-477b-8d60-9fab601b9775"]
}, Open  ]],

Cell["\:67d0\:4e9b\:6761\:76ee\:7f3a\:5931\:4e5f\:662f\:53ef\:4ee5\:7684\:ff1a\
", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.83698764518128*^9, 3.8369876567380595`*^9}},
 CellTags->"i:14",ExpressionUUID->"1673015e-1ff0-4429-9847-aad505b04b13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\"\<x\>\"", "\[Rule]", "2"}], ",", 
      RowBox[{"\"\<y\>\"", "\[Rule]", "4"}], ",", 
      RowBox[{"\"\<z\>\"", "\[Rule]", "6"}]}], "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\"\<x\>\"", "\[Rule]", "11"}], ",", 
      RowBox[{"\"\<y\>\"", "\[Rule]", "7"}]}], "\[RightAssociation]"}]}], 
   "}"}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[27]:=",ExpressionUUID->"4908e7a3-5d48-466e-96e6-f9ef222ad2b6"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Assoc[TypeSystem`AnyType, 
           TypeSystem`Atom[Integer], TypeSystem`AnyLength], 2], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`UnknownShape, 
              TypeSystem`PackageScope`AtomShape[34]]], 2, {All}]], 2, {}], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[2014798214], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Assoc[TypeSystem`AnyType, 
           TypeSystem`Atom[Integer], TypeSystem`AnyLength], 2], "HandleQ" -> 
        True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[2014798214]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Pane[
                  Annotation["x", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   765344279][
                    GeneralUtilities`Slice[1, 
                    Key["x"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[765344279][
                 
                  GeneralUtilities`Slice[1, 
                   Key["x"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation["y", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   765344279][
                    GeneralUtilities`Slice[1, 
                    Key["y"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[765344279][
                 
                  GeneralUtilities`Slice[1, 
                   Key["y"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["3 total \:203a ", 
                    Style[
                    "3 total \:203a ", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 765344279][{
                    1}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[765344279][
                 
                  GeneralUtilities`Slice[1]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 765344279}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 765344279}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 765344279}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 765344279}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Center, Baseline}, 
                Background -> GrayLevel[0.98]], SpanFromLeft}, {
               Item[
                Pane[
                 Pane[
                  Annotation["x", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   765344279][
                    GeneralUtilities`Slice[2, 
                    Key["x"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[765344279][
                 
                  GeneralUtilities`Slice[2, 
                   Key["x"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation["y", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   765344279][
                    GeneralUtilities`Slice[2, 
                    Key["y"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[765344279][
                 
                  GeneralUtilities`Slice[2, 
                   Key["y"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 765344279][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 765344279]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[765344279][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[765344279][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {136., {119.75, 133.25}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[27]=",ExpressionUUID->"4d7f304b-8ef7-40ee-b064-8007d65de96a"]
}, Open  ]],

Cell["\<\
\:73b0\:5728\:6211\:4eec\:5df2\:7ecf\:770b\:8fc7\:4e86\:4e00\:4e9b\:7b80\:5355\
\:7684\:4f8b\:5b50\:ff0c\:73b0\:5728\:662f\:65f6\:5019\:770b\:770b\:4e00\:4e9b\
\:7a0d\:5fae\:5b9e\:9645\:7684\:4e1c\:897f\:4e86\:3002\:8ba9\:6211\:4eec\:5bfc\
\:5165\:4e00\:4e2a\:7ed9\:51fa\:884c\:661f\:548c\:536b\:661f\:5c5e\:6027\:7684\
\:6570\:636e\:96c6\:3002\:8fd9\:4e2a\:6570\:636e\:96c6\:6709\:4e00\:4e2a\:5c42\
\:7ea7\:7ed3\:6784\:ff0c\:6bcf\:4e2a\:884c\:661f\:90fd\:6709\:81ea\:5df1\:7684\
\:8d28\:91cf\:548c\:534a\:5f84\:ff0c\:7136\:540e\:8fd8\:6709\:4e00\:4e2a\:536b\
\:661f\:7684\:96c6\:5408\:ff0c\:6bcf\:4e2a\:536b\:661f\:90fd\:6709\:81ea\:5df1\
\:7684\:5c5e\:6027\:3002\:8fd9\:79cd\:4e00\:822c\:7684\:7ed3\:6784\:5728\:73b0\
\:5b9e\:4e2d\:6781\:4e3a\:5e38\:89c1(\:60f3\:60f3\:5b66\:751f\:548c\:6210\
\:7ee9\:ff0c\:5ba2\:6237\:548c\:8ba2\:5355\:ff0c\:7b49\:7b49)\:3002\
\>", "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369877323958025`*^9, 3.836987778325287*^9}, {
  3.8369878208879585`*^9, 3.83698783241101*^9}},
 CellTags->"i:15",ExpressionUUID->"e72747f4-ff88-4b09-9282-50deda522519"],

Cell["\:4ece\:4e91\:7aef\:83b7\:53d6\:884c\:661f\:548c\:536b\:661f\:7684\:5c42\
\:7ea7\:6570\:636e\:96c6\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836987842225838*^9, 3.8369878530644116`*^9}},
 CellTags->"i:16",ExpressionUUID->"66540b04-372e-4cf8-bdb7-d1aa63d22211"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "=", 
  RowBox[{
  "CloudGet", "[", "\"\<http://wolfr.am/7FxLgPm5\>\"", "]"}]}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[28]:=",ExpressionUUID->"07665152-cccc-49a6-87ce-7bdfecd7bd58"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "DisplayedRowCount" -> 20, "RowCount" -> 8, "Length" -> 8, 
        "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"]], 
            TypeSystem`Assoc[
             TypeSystem`Atom[String], 
             TypeSystem`Struct[{"Mass", "Radius"}, {
               TypeSystem`Atom[
                Quantity[1, "Kilograms"]], 
               TypeSystem`Atom[
                Quantity[1, "Kilometers"]]}], TypeSystem`AnyLength]}], 8], 
        "DisplayedColumnCount" -> 20, "DataRowCount" -> 0, "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[5]} -> 1, {All, "Mass"} -> 
           1, {All, "Radius"} -> 1, {All, "Moons"} -> 
           Association[{All, "Moons", All, 
               TypeSystem`PackageScope`KeyDummy[4]} -> 
             1, {All, "Moons", All, "Mass"} -> 
             1, {All, "Moons", All, "Radius"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[67.20000000000002], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
               TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
               TypeSystem`PackageScope`Limited[
                 TypeSystem`PackageScope`ColumnShape[
                  TypeSystem`PackageScope`KeyValueShape[
                   TypeSystem`PackageScope`AtomShape[67.20000000000002], 
                   TypeSystem`PackageScope`RowShape[
                    Association[
                    "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                    TypeSystem`PackageScope`AtomShape[75]]]]], 2, {
                 All, "Moons"}]]]]], 8, {}]], "DataColumnCount" -> 0, 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[2051009035], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"]], 
            TypeSystem`Assoc[
             TypeSystem`Atom[String], 
             TypeSystem`Struct[{"Mass", "Radius"}, {
               TypeSystem`Atom[
                Quantity[1, "Kilograms"]], 
               TypeSystem`Atom[
                Quantity[1, "Kilometers"]]}], TypeSystem`AnyLength]}], 8], 
        "HandleQ" -> True, "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[2051009035]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Mass\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Mass\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    All, "Mass"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[All, "Mass"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Radius\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Radius\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    All, "Radius"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[All, "Radius"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Moons\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Moons\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    All, "Moons"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[All, "Moons"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    All, "Moons", All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[All, "Moons", All, Keys]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Mass\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Mass\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    All, "Moons", All, "Mass"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[All, "Moons", All, "Mass"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Radius\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Radius\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    All, "Moons", All, "Radius"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[All, "Moons", All, "Radius"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Mercury", 
                    Style[
                    "Mercury", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Mercury"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                   GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"3.30104`6.*^23", "\"kg\""}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Mercury"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2439.7`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Mercury"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Spacer[10], 
                    Style[
                    Spacer[10], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Mercury"], 
                    Key["Moons"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Mercury"], 
                   Key["Moons"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Venus", 
                    Style[
                    "Venus", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Venus"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                   GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"4.867320000000000000000001`6.*^24", "\"kg\""}], 
                   FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Venus"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"6051.85`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Venus"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Spacer[10], 
                    Style[
                    Spacer[10], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Venus"], 
                    Key["Moons"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Venus"], 
                   Key["Moons"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Earth", 
                    Style[
                    "Earth", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Earth"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                   GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"5.9721986`8.*^24", "\"kg\""}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Earth"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"6371.0088`8", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Earth"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Moon", 
                    Style[
                    "Moon", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Earth"], 
                    Key["Moons"], 
                    Key["Moon"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                   GeneralUtilities`Slice[
                    Key["Earth"], 
                    Key["Moons"], 
                    Key["Moon"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "7.3459006322855173653772`4.995678626217362*^22", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Earth"], 
                   Key["Moons"], 
                   Key["Moon"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"1737.5`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Earth"], 
                   Key["Moons"], 
                   Key["Moon"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Mars", 
                    Style[
                    "Mars", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Mars"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                   GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"6.41693`6.*^23", "\"kg\""}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Mars"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"3385.595`4.29804285290057", "\"km\""}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Mars"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Deimos", 
                    Style[
                    "Deimos", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Mars"], 
                    Key["Moons"], 
                    Key["Deimos"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                   GeneralUtilities`Slice[
                    Key["Mars"], 
                    Key["Moons"], 
                    Key["Deimos"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "1.468340774924336`1.9995659225206786*^15", "\"kg\""}], 
                   FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Mars"], 
                   Key["Moons"], 
                   Key["Deimos"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"6.2`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Mars"], 
                   Key["Moons"], 
                   Key["Deimos"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Phobos", 
                    Style[
                    "Phobos", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Mars"], 
                    Key["Moons"], 
                    Key["Phobos"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                   GeneralUtilities`Slice[
                    Key["Mars"], 
                    Key["Moons"], 
                    Key["Phobos"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "1.0724880884600402`3.9586073148417724*^16", "\"kg\""}], 
                   FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Mars"], 
                   Key["Moons"], 
                   Key["Phobos"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"11.1`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Mars"], 
                   Key["Moons"], 
                   Key["Phobos"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Jupiter", 
                    Style[
                    "Jupiter", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Jupiter"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                   GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"1.89813`6.*^27", "\"kg\""}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Jupiter"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"69911", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Jupiter"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Adrastea", 
                    Style[
                    "Adrastea", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Jupiter"], 
                    Key["Moons"], 
                    Key["Adrastea"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                   GeneralUtilities`Slice[
                    Key["Jupiter"], 
                    Key["Moons"], 
                    Key["Adrastea"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "7.491534565940487`0.9999565727231415*^15", "\"kg\""}], 
                   FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Jupiter"], 
                   Key["Moons"], 
                   Key["Adrastea"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"8.2`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Jupiter"], 
                   Key["Moons"], 
                   Key["Adrastea"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Aitne", 
                    Style[
                    "Aitne", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Jupiter"], 
                    Key["Moons"], 
                    Key["Aitne"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                   GeneralUtilities`Slice[
                    Key["Jupiter"], 
                    Key["Moons"], 
                    Key["Aitne"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "4.4949207395643`0.9999565727231415*^13", "\"kg\""}], 
                   FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Jupiter"], 
                   Key["Moons"], 
                   Key["Aitne"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"1.5`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Jupiter"], 
                   Key["Moons"], 
                   Key["Aitne"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["67 total \:203a ", 
                    Style[
                    "67 total \:203a ", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Jupiter"], 
                    Key["Moons"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Jupiter"], 
                   Key["Moons"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Center, Baseline}, Background -> 
                GrayLevel[0.98]], SpanFromLeft, SpanFromLeft}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Saturn", 
                    Style[
                    "Saturn", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Saturn"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                   GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"5.68319`6.*^26", "\"kg\""}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Saturn"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"57316.`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Saturn"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Aegaeon", 
                    Style[
                    "Aegaeon", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Saturn"], 
                    Key["Moons"], 
                    Key["Aegaeon"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                   GeneralUtilities`Slice[
                    Key["Saturn"], 
                    Key["Moons"], 
                    Key["Aegaeon"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Saturn"], 
                   Key["Moons"], 
                   Key["Aegaeon"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"0.25`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Saturn"], 
                   Key["Moons"], 
                   Key["Aegaeon"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Aegir", 
                    Style[
                    "Aegir", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Saturn"], 
                    Key["Moons"], 
                    Key["Aegir"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                   GeneralUtilities`Slice[
                    Key["Saturn"], 
                    Key["Moons"], 
                    Key["Aegir"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Saturn"], 
                   Key["Moons"], 
                   Key["Aegir"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"3.`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Saturn"], 
                   Key["Moons"], 
                   Key["Aegir"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["62 total \:203a ", 
                    Style[
                    "62 total \:203a ", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Saturn"], 
                    Key["Moons"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Saturn"], 
                   Key["Moons"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Center, Baseline}, Background -> 
                GrayLevel[0.98]], SpanFromLeft, SpanFromLeft}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Uranus", 
                    Style[
                    "Uranus", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Uranus"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                   GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"8.68103`6.*^25", "\"kg\""}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Uranus"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"25266.`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Uranus"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Ariel", 
                    Style[
                    "Ariel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Uranus"], 
                    Key["Moons"], 
                    Key["Ariel"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                   GeneralUtilities`Slice[
                    Key["Uranus"], 
                    Key["Moons"], 
                    Key["Ariel"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "1.352971142608851997243`2.9956786262173587*^21", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Uranus"], 
                   Key["Moons"], 
                   Key["Ariel"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"578.9`4", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Uranus"], 
                   Key["Moons"], 
                   Key["Ariel"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Belinda", 
                    Style[
                    "Belinda", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Uranus"], 
                    Key["Moons"], 
                    Key["Belinda"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                   GeneralUtilities`Slice[
                    Key["Uranus"], 
                    Key["Moons"], 
                    Key["Belinda"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "3.56597045338767194`2.995678626217367*^17", "\"kg\""}], 
                   FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Uranus"], 
                   Key["Moons"], 
                   Key["Belinda"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"40.3`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Uranus"], 
                   Key["Moons"], 
                   Key["Belinda"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["27 total \:203a ", 
                    Style[
                    "27 total \:203a ", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Uranus"], 
                    Key["Moons"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Uranus"], 
                   Key["Moons"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Center, Baseline}, Background -> 
                GrayLevel[0.98]], SpanFromLeft, SpanFromLeft}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Neptune", 
                    Style[
                    "Neptune", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Neptune"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                   GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"1.0241`6.*^26", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Neptune"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"24552.5`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Neptune"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Despina", 
                    Style[
                    "Despina", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Neptune"], 
                    Key["Moons"], 
                    Key["Despina"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                   GeneralUtilities`Slice[
                    Key["Neptune"], 
                    Key["Moons"], 
                    Key["Despina"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "2.09762967846333643`1.9995659225206872*^18", "\"kg\""}], 
                   FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Neptune"], 
                   Key["Moons"], 
                   Key["Despina"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"75.`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Neptune"], 
                   Key["Moons"], 
                   Key["Despina"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Galatea", 
                    Style[
                    "Galatea", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Neptune"], 
                    Key["Moons"], 
                    Key["Galatea"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                   GeneralUtilities`Slice[
                    Key["Neptune"], 
                    Key["Moons"], 
                    Key["Galatea"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "3.745767282970243625`1.9995659225206872*^18", "\"kg\""}],
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Neptune"], 
                   Key["Moons"], 
                   Key["Galatea"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"88.`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Neptune"], 
                   Key["Moons"], 
                   Key["Galatea"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["14 total \:203a ", 
                    Style[
                    "14 total \:203a ", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][{
                    
                    Key["Neptune"], 
                    Key["Moons"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
                 
                  GeneralUtilities`Slice[
                   Key["Neptune"], 
                   Key["Moons"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Center, Baseline}, Background -> 
                GrayLevel[0.98]], SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 838284503]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[838284503][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1053., {468.75, 482.25}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[28]=",ExpressionUUID->"44ae734a-bf3f-4f73-811d-5734568ffdfb"]
}, Open  ]],

Cell["\:627e\:51fa\:6240\:6709\:884c\:661f\:7684\:534a\:5f84\:ff1a", \
"CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369879620056458`*^9, 3.8369879685677505`*^9}},
 CellTags->"p:276",ExpressionUUID->"21ce5bca-2c6b-431e-81fc-3288adffb794"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "[", 
  RowBox[{"All", ",", "\"\<Radius\>\""}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[29]:=",ExpressionUUID->"4b28712c-d1c2-470b-b961-7c8ac47ec7e6"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "DisplayedRowCount" -> 20, "RowCount" -> 8, "Length" -> 8, 
        "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Atom[
           Quantity[1, "Kilometers"]], 8], "DisplayedColumnCount" -> 20, 
        "DataRowCount" -> 0, "Shape" -> TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[67.20000000000002], 
            TypeSystem`PackageScope`AtomShape[75]]], 8, {}], 
        "DataColumnCount" -> 0, "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[326621149], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Atom[
           Quantity[1, "Kilometers"]], 8], "HandleQ" -> True, "Meta" -> {}, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[326621149]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Mercury", 
                    Style[
                    "Mercury", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1843539671][{
                    Key["Mercury"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1843539671][
                   GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2439.7`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1843539671][
                  GeneralUtilities`Slice[
                   Key["Mercury"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Venus", 
                    Style[
                    "Venus", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1843539671][{
                    Key["Venus"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1843539671][
                   GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"6051.85`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1843539671][
                  GeneralUtilities`Slice[
                   Key["Venus"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Earth", 
                    Style[
                    "Earth", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1843539671][{
                    Key["Earth"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1843539671][
                   GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"6371.0088`8", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1843539671][
                  GeneralUtilities`Slice[
                   Key["Earth"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Mars", 
                    Style[
                    "Mars", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1843539671][{
                    Key["Mars"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1843539671][
                   GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"3385.595`4.29804285290057", "\"km\""}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1843539671][
                  GeneralUtilities`Slice[
                   Key["Mars"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Jupiter", 
                    Style[
                    "Jupiter", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1843539671][{
                    Key["Jupiter"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1843539671][
                   GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"69911", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1843539671][
                  GeneralUtilities`Slice[
                   Key["Jupiter"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Saturn", 
                    Style[
                    "Saturn", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1843539671][{
                    Key["Saturn"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1843539671][
                   GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"57316.`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1843539671][
                  GeneralUtilities`Slice[
                   Key["Saturn"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Uranus", 
                    Style[
                    "Uranus", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1843539671][{
                    Key["Uranus"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1843539671][
                   GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"25266.`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1843539671][
                  GeneralUtilities`Slice[
                   Key["Uranus"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Neptune", 
                    Style[
                    "Neptune", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1843539671][{
                    Key["Neptune"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1843539671][
                   GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"24552.5`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1843539671][
                  GeneralUtilities`Slice[
                   Key["Neptune"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1843539671][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1843539671]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1843539671][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1843539671][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[
         TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {315., {204.25, 217.75}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[29]=",ExpressionUUID->"f989d4a6-2464-47de-ad99-ebec986c4b3b"]
}, Open  ]],

Cell["\:521b\:5efa\:884c\:661f\:534a\:5f84\:7684\:6761\:5f62\:56fe\:ff1a", \
"CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836987982767798*^9, 3.836987992676865*^9}},
 CellTags->"i:17",ExpressionUUID->"55da807e-9a64-47c6-a39c-24654c6d0bc2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"planets", "[", 
    RowBox[{"All", ",", "\"\<Radius\>\""}], "]"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[30]:=",ExpressionUUID->"820cd207-0446-4a41-a0e8-fdd0be129840"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.39075018208302986`, 0.}, {8.451201747997086, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
            2439.7}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{72.43753677941764, 118.04460161673776`}, {
           99.00863694386345, 108.50000000000001`}}],
         StatusArea[#, 2439.7`5.]& ,
         TagBoxNote->"2439.7`5."],
        StyleBox["2439.7`5.", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2439.7`5., {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
            6051.85}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{121.86893308421227`, 167.4759979215324}, {
           86.43656781109149, 108.50000000000001`}}],
         StatusArea[#, 6051.85`5.]& ,
         TagBoxNote->"6051.85`5."],
        StyleBox["6051.85`5.", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6051.85`5., {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
            6371.0088}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{171.3003293890069, 216.90739422632703`}, {
           85.32573728137028, 108.50000000000001`}}],
         StatusArea[#, 6371.0088`8.]& ,
         TagBoxNote->"6371.0088`8."],
        StyleBox["6371.0088`8.", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6371.0088`8., {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
            3385.595}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{220.7317256938015, 266.3387905311217}, {
           95.71645435666653, 108.50000000000001`}}],
         StatusArea[#, 3385.595`4.29804285290057]& ,
         TagBoxNote->"3385.595`4.29804285290057"],
        StyleBox["3385.595`4.29804285290057", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3385.595`4.29804285290057, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 69911.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{270.1631219985961, 
           315.7701868359163}, {-135.82486888452007`, 108.5}}],
         StatusArea[#, 69911]& ,
         TagBoxNote->"69911"],
        StyleBox["69911", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[69911, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 57316.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{319.59451830339077`, 
           365.2015831407109}, {-91.9880374330957, 108.50000000000001`}}],
         StatusArea[#, 57316.`5.]& ,
         TagBoxNote->"57316.`5."],
        StyleBox["57316.`5.", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[57316.`5., {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 25266.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{369.0259146081854, 414.63297944550555`}, {
           19.56181949569762, 108.50000000000001`}}],
         StatusArea[#, 25266.`5.]& ,
         TagBoxNote->"25266.`5."],
        StyleBox["25266.`5.", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[25266.`5., {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 24552.5},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{418.45731091298006`, 464.06437575030014`}, {
           22.0451525040812, 108.50000000000001`}}],
         StatusArea[#, 24552.5`5.]& ,
         TagBoxNote->"24552.5`5."],
        StyleBox["24552.5`5.", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[24552.5`5., {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0.39075018208302986`, 0.}, {8.612410779315367, 0.}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.5487982520029133, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}], 
        LineBox[{{8.451201747997086, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {8.451201747997086, 
           0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {
          LineBox[{{1.4512017479970867`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
             0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
             0.}]}], LineBox[{{2.4512017479970867`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
             0.}]}], LineBox[{{2.5487982520029133`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
             0.}]}], LineBox[{{3.4512017479970867`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {3.4512017479970867`, 
             0.}]}], LineBox[{{3.5487982520029133`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {3.5487982520029133`, 
             0.}]}], LineBox[{{4.451201747997087, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {4.451201747997087, 0.}]}],
           LineBox[{{4.548798252002913, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {4.548798252002913, 0.}]}],
           LineBox[{{5.451201747997087, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {5.451201747997087, 0.}]}],
           LineBox[{{5.548798252002913, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {5.548798252002913, 0.}]}],
           LineBox[{{6.451201747997087, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {6.451201747997087, 0.}]}],
           LineBox[{{6.548798252002913, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {6.548798252002913, 0.}]}],
           LineBox[{{7.451201747997087, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {7.451201747997087, 0.}]}],
           LineBox[{{7.548798252002913, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {7.548798252002913, 
             0.}]}]}, {}}}, 
       StyleBox[
        {Thickness[Tiny], 
         InsetBox["\<\"Mercury\"\>", Offset[{0., -2.}, {1., 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Venus\"\>", Offset[{0., -2.}, {2., 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Earth\"\>", Offset[{0., -2.}, {3., 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Mars\"\>", Offset[{0., -2.}, {4., 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Jupiter\"\>", Offset[{0., -2.}, {5., 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Saturn\"\>", Offset[{0., -2.}, {6., 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Uranus\"\>", Offset[{0., -2.}, {7., 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Neptune\"\>", 
          Offset[{0., -2.}, {7.999999999999999, 0.}], {0, 1}, Automatic, {1, 
          0}]}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.39075018208302986`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0], Selectable -> False], TraditionalForm], {0.004, 0}}, {
      1., 
       FormBox["\"Mercury\"", TraditionalForm], 0}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0], Selectable -> False], TraditionalForm], {0.004, 0}}, {
      2., 
       FormBox["\"Venus\"", TraditionalForm], 0}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0], Selectable -> False], TraditionalForm], {0.004, 0}}, {
      3., 
       FormBox["\"Earth\"", TraditionalForm], 0}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0], Selectable -> False], TraditionalForm], {0.004, 0}}, {
      4., 
       FormBox["\"Mars\"", TraditionalForm], 0}, {5., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0], Selectable -> False], TraditionalForm], {0.004, 0}}, {
      5., 
       FormBox["\"Jupiter\"", TraditionalForm], 0}, {6., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0], Selectable -> False], TraditionalForm], {0.004, 0}}, {
      6., 
       FormBox["\"Saturn\"", TraditionalForm], 0}, {7., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0], Selectable -> False], TraditionalForm], {0.004, 0}}, {
      7., 
       FormBox["\"Uranus\"", TraditionalForm], 0}, {8., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0], Selectable -> False], TraditionalForm], {0.004, 0}}, {
      8., 
       FormBox["\"Neptune\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0], Selectable -> False], TraditionalForm], {0.004, 0}}, {
      2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0], Selectable -> False], TraditionalForm], {0.004, 0}}, {
      3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0], Selectable -> False], TraditionalForm], {0.004, 0}}, {
      4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0], Selectable -> False], TraditionalForm], {0.004, 0}}, {
      5., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0], Selectable -> False], TraditionalForm], {0.004, 0}}, {
      6., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0], Selectable -> False], TraditionalForm], {0.004, 0}}, {
      7., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0], Selectable -> False], TraditionalForm], {0.004, 0}}, {
      8., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0], Selectable -> False], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[30]=",ExpressionUUID->"aa52bc47-ceb0-4b71-8aef-79d9fc49eb8b"]
}, Open  ]],

Cell["\:5982\:679c\:6211\:4eec\:8be2\:95ee\:706b\:661f\:7684\:536b\:661f\:ff0c\
\:6211\:4eec\:4f1a\:5f97\:5230\:4e00\:4e2a\:6570\:636e\:96c6\:ff0c\:7136\:540e\
\:6211\:4eec\:53ef\:4ee5\:8fdb\:4e00\:6b65\:67e5\:8be2\:3002", "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836988005392331*^9, 
  3.8369880172208843`*^9}},ExpressionUUID->"318512b2-c13e-4a6a-89b0-\
26cb81cfcf2c"],

Cell["\:83b7\:53d6\:5173\:4e8e\:706b\:661f\:536b\:661f\:7684\:6570\:636e\:96c6\
\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836988025130125*^9, 
  3.836988032437144*^9}},ExpressionUUID->"c7bbc911-39a7-4ad1-b7e3-\
b601e336f493"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "[", 
  RowBox[{"\"\<Mars\>\"", ",", "\"\<Moons\>\""}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[31]:=",ExpressionUUID->"b7e448f1-6ba3-4704-a109-233ed0b27f72"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "DisplayedRowCount" -> 20, "RowCount" -> 2, "Length" -> 2, 
        "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"]]}], 2], "DisplayedColumnCount" -> 20, 
        "DataRowCount" -> 0, "Shape" -> TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[6]} -> 1, {All, "Mass"} -> 
           1, {All, "Radius"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[57.60000000000001], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
               TypeSystem`PackageScope`AtomShape[75]]]]], 2, {}]], 
        "DataColumnCount" -> 0, "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1374581724], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"]]}], 2], "HandleQ" -> True, 
        "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1374581724]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1167970617][{All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1167970617][
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Mass\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Mass\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1167970617][{All, "Mass"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1167970617][
                  GeneralUtilities`Slice[All, "Mass"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Radius\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Radius\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1167970617][{All, "Radius"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1167970617][
                  GeneralUtilities`Slice[All, "Radius"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Deimos", 
                    Style[
                    "Deimos", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1167970617][{
                    Key["Deimos"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1167970617][
                   GeneralUtilities`Slice[
                    Key["Deimos"]]], "Mouse"], 
                 ImageSize -> {{57.60000000000001, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "1.468340774924336`1.9995659225206786*^15", "\"kg\""}], 
                   FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1167970617][
                  GeneralUtilities`Slice[
                   Key["Deimos"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"6.2`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1167970617][
                  GeneralUtilities`Slice[
                   Key["Deimos"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Phobos", 
                    Style[
                    "Phobos", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1167970617][{
                    Key["Phobos"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1167970617][
                   GeneralUtilities`Slice[
                    Key["Phobos"]]], "Mouse"], 
                 ImageSize -> {{57.60000000000001, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "1.0724880884600402`3.9586073148417724*^16", "\"kg\""}], 
                   FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1167970617][
                  GeneralUtilities`Slice[
                   Key["Phobos"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"11.1`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1167970617][
                  GeneralUtilities`Slice[
                   Key["Phobos"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1167970617][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1167970617]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1167970617][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1167970617][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {424., {83.25, 96.75}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[31]=",ExpressionUUID->"5753319e-0259-4ed8-897a-4a4ebd37583a"]
}, Open  ]],

Cell["\:8fdb\:4e00\:6b65\:6316\:6398\:ff0c\:521b\:5efa\:706b\:661f\:6240\:6709\
\:536b\:661f\:7684\:534a\:5f84\:8868\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369880441129756`*^9, 
  3.8369880635903106`*^9}},ExpressionUUID->"1e5ada54-2dca-4ef7-bcc3-\
f2bc3e95e043"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "[", 
  RowBox[{
  "\"\<Mars\>\"", ",", "\"\<Moons\>\"", ",", "All", ",", "\"\<Radius\>\""}], 
  "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[32]:=",ExpressionUUID->"07e068e6-1864-41e4-bd2c-81dce05a6975"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "DisplayedRowCount" -> 20, "RowCount" -> 2, "Length" -> 2, 
        "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Atom[
           Quantity[1, "Kilometers"]], 2], "DisplayedColumnCount" -> 20, 
        "DataRowCount" -> 0, "Shape" -> TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[57.60000000000001], 
            TypeSystem`PackageScope`AtomShape[75]]], 2, {}], 
        "DataColumnCount" -> 0, "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1093356506], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Atom[
           Quantity[1, "Kilometers"]], 2], "HandleQ" -> True, "Meta" -> {}, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1093356506]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Deimos", 
                    Style[
                    "Deimos", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112950143][{
                    
                    Key["Deimos"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112950143][
                   GeneralUtilities`Slice[
                    Key["Deimos"]]], "Mouse"], 
                 ImageSize -> {{57.60000000000001, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"6.2`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112950143][
                 
                  GeneralUtilities`Slice[
                   Key["Deimos"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Phobos", 
                    Style[
                    "Phobos", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112950143][{
                    
                    Key["Phobos"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112950143][
                   GeneralUtilities`Slice[
                    Key["Phobos"]]], "Mouse"], 
                 ImageSize -> {{57.60000000000001, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"11.1`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112950143][
                 
                  GeneralUtilities`Slice[
                   Key["Phobos"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112950143][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112950143]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112950143][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112950143][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {228., {58.75, 72.25}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[32]=",ExpressionUUID->"598e5c1f-9717-49eb-a795-bda59d9775d4"]
}, Open  ]],

Cell["\:6211\:4eec\:53ef\:4ee5\:5bf9\:6240\:6709\:884c\:661f\:7684\:536b\:661f\
\:8fdb\:884c\:8ba1\:7b97\:3002\:9996\:5148\:ff0c\:8ba9\:6211\:4eec\:627e\:51fa\
\:6bcf\:4e2a\:884c\:661f\:6709\:591a\:5c11\:4e2a\:536b\:661f\:3002", "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369880784484577`*^9, 3.8369880791875253`*^9}, {
  3.83698816871533*^9, 3.836988169125058*^9}},
 CellTags->"p:277",ExpressionUUID->"1cab299d-4cd7-4b9b-b6a1-f1bb4eaa9aca"],

Cell["\:4e3a\:6bcf\:9897\:884c\:661f\:7684\:536b\:661f\:6570\:91cf\:521b\:5efa\
\:4e00\:4e2a\:6570\:636e\:96c6\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836988177327856*^9, 
  3.8369882000366783`*^9}},ExpressionUUID->"554baa61-72f4-4152-ab13-\
6d0daa5c56f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "[", 
  RowBox[{"All", ",", "\"\<Moons\>\"", ",", "Length"}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[33]:=",ExpressionUUID->"d863535f-09f4-479d-ad7c-3b577afb15c4"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "DisplayedRowCount" -> 20, "RowCount" -> 8, "Length" -> 8, 
        "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Atom[Integer], 8], "DisplayedColumnCount" -> 20, 
        "DataRowCount" -> 0, "Shape" -> TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[67.20000000000002], 
            TypeSystem`PackageScope`AtomShape[34]]], 8, {}], 
        "DataColumnCount" -> 0, "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[2005366144], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Atom[Integer], 8], "HandleQ" -> True, "Meta" -> {}, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[2005366144]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Mercury", 
                    Style[
                    "Mercury", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 775140629][{
                    
                    Key["Mercury"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[775140629][
                   GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[775140629][
                 
                  GeneralUtilities`Slice[
                   Key["Mercury"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Venus", 
                    Style[
                    "Venus", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 775140629][{
                    
                    Key["Venus"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[775140629][
                   GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[775140629][
                 
                  GeneralUtilities`Slice[
                   Key["Venus"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Earth", 
                    Style[
                    "Earth", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 775140629][{
                    
                    Key["Earth"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[775140629][
                   GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[775140629][
                 
                  GeneralUtilities`Slice[
                   Key["Earth"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Mars", 
                    Style[
                    "Mars", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 775140629][{
                    
                    Key["Mars"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[775140629][
                   GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[775140629][
                 
                  GeneralUtilities`Slice[
                   Key["Mars"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Jupiter", 
                    Style[
                    "Jupiter", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 775140629][{
                    
                    Key["Jupiter"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[775140629][
                   GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["67"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[775140629][
                 
                  GeneralUtilities`Slice[
                   Key["Jupiter"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Saturn", 
                    Style[
                    "Saturn", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 775140629][{
                    
                    Key["Saturn"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[775140629][
                   GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["62"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[775140629][
                 
                  GeneralUtilities`Slice[
                   Key["Saturn"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Uranus", 
                    Style[
                    "Uranus", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 775140629][{
                    
                    Key["Uranus"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[775140629][
                   GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["27"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[775140629][
                 
                  GeneralUtilities`Slice[
                   Key["Uranus"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Neptune", 
                    Style[
                    "Neptune", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 775140629][{
                    
                    Key["Neptune"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[775140629][
                   GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[775140629][
                 
                  GeneralUtilities`Slice[
                   Key["Neptune"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 775140629][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 775140629]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[775140629][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[775140629][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {178., {204.25, 217.75}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[33]=",ExpressionUUID->"6a944d5f-ada2-4283-9810-ae0953daa44b"]
}, Open  ]],

Cell["\:627e\:51fa\:6bcf\:4e2a\:884c\:661f\:7684\:6240\:6709\:536b\:661f\:7684\
\:8d28\:91cf\:603b\:548c\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836988211837487*^9, 
  3.836988221130538*^9}},ExpressionUUID->"926e8ca0-2852-4b21-8c6f-\
047f04f2014c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "[", 
  RowBox[{"All", ",", "\"\<Moons\>\"", ",", "Total", ",", "\"\<Mass\>\""}], 
  "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[34]:=",ExpressionUUID->"e5307dc1-da71-4de3-98ec-a1f8f63b31ad"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "DisplayedRowCount" -> 20, "RowCount" -> 8, "Length" -> 8, 
        "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Atom[
           Quantity[1, "Kilograms"]], 8], "DisplayedColumnCount" -> 20, 
        "DataRowCount" -> 0, "Shape" -> TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[67.20000000000002], 
            TypeSystem`PackageScope`AtomShape[75]]], 8, {}], 
        "DataColumnCount" -> 0, "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[715867184], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Atom[
           Quantity[1, "Kilograms"]], 8], "HandleQ" -> True, "Meta" -> {}, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[715867184]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Mercury", 
                    Style[
                    "Mercury", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 595194551][{
                    
                    Key["Mercury"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[595194551][
                   GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[595194551][
                 
                  GeneralUtilities`Slice[
                   Key["Mercury"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Venus", 
                    Style[
                    "Venus", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 595194551][{
                    
                    Key["Venus"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[595194551][
                   GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[595194551][
                 
                  GeneralUtilities`Slice[
                   Key["Venus"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Earth", 
                    Style[
                    "Earth", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 595194551][{
                    
                    Key["Earth"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[595194551][
                   GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "7.3459006322855173653772`4.995678626217362*^22", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[595194551][
                 
                  GeneralUtilities`Slice[
                   Key["Earth"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Mars", 
                    Style[
                    "Mars", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 595194551][{
                    
                    Key["Mars"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[595194551][
                   GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "1.2193221659524738`2.8853273743447083*^16", "\"kg\""}], 
                   FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[595194551][
                 
                  GeneralUtilities`Slice[
                   Key["Mars"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Jupiter", 
                    Style[
                    "Jupiter", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 595194551][{
                    
                    Key["Jupiter"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[595194551][
                   GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "3.93014495684943813490738`4.983582838146157*^23", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[595194551][
                 
                  GeneralUtilities`Slice[
                   Key["Jupiter"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Saturn", 
                    Style[
                    "Saturn", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 595194551][{
                    
                    Key["Saturn"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[595194551][
                   GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "1.40510302468385873962401`4.924759393349542*^23", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[595194551][
                 
                  GeneralUtilities`Slice[
                   Key["Saturn"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Uranus", 
                    Style[
                    "Uranus", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 595194551][{
                    
                    Key["Uranus"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[595194551][
                   GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "9.141802013724491324794`3.3647579628804034*^21", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[595194551][
                 
                  GeneralUtilities`Slice[
                   Key["Uranus"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Neptune", 
                    Style[
                    "Neptune", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 595194551][{
                    
                    Key["Neptune"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[595194551][
                   GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "2.1486894814509604147309`4.537238273631205*^22", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[595194551][
                 
                  GeneralUtilities`Slice[
                   Key["Neptune"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 595194551][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 595194551]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[595194551][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[595194551][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {336., {204.25, 217.75}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[34]=",ExpressionUUID->"c2cd7f91-5935-42d6-a2c8-bc29d28d4108"]
}, Open  ]],

Cell["\<\
\:5f97\:5230\:76f8\:540c\:7684\:7ed3\:679c\:ff0c\:4f46\:53ea\:9488\:5bf9\:6709\
 10 \:4e2a\:4ee5\:4e0a\:536b\:661f\:7684\:884c\:661f\:ff1a\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369882311288757`*^9, 
  3.836988251914212*^9}},ExpressionUUID->"a7db02b8-3991-435f-872d-\
88f7bd18c4d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "#Moons", "]"}], ">", "10"}], "&"}], "]"}], ",", 
   "\"\<Moons\>\"", ",", "Total", ",", "\"\<Mass\>\""}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[35]:=",ExpressionUUID->"d7c6f89b-8003-481f-9c09-1a87297cdbf0"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "DisplayedRowCount" -> 20, "RowCount" -> 4, "Length" -> 4, 
        "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Atom[
           Quantity[1, "Kilograms"]], 4], "DisplayedColumnCount" -> 20, 
        "DataRowCount" -> 0, "Shape" -> TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[67.20000000000002], 
            TypeSystem`PackageScope`AtomShape[75]]], 4, {}], 
        "DataColumnCount" -> 0, "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1596386133], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Atom[
           Quantity[1, "Kilograms"]], 4], "HandleQ" -> True, "Meta" -> {}, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1596386133]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Jupiter", 
                    Style[
                    "Jupiter", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1842018076][{
                    Key["Jupiter"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1842018076][
                   GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "3.93014495684943813490738`4.983582838146157*^23", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1842018076][
                  GeneralUtilities`Slice[
                   Key["Jupiter"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Saturn", 
                    Style[
                    "Saturn", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1842018076][{
                    Key["Saturn"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1842018076][
                   GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "1.40510302468385873962401`4.924759393349542*^23", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1842018076][
                  GeneralUtilities`Slice[
                   Key["Saturn"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Uranus", 
                    Style[
                    "Uranus", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1842018076][{
                    Key["Uranus"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1842018076][
                   GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "9.141802013724491324794`3.3647579628804034*^21", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1842018076][
                  GeneralUtilities`Slice[
                   Key["Uranus"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Neptune", 
                    Style[
                    "Neptune", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1842018076][{
                    Key["Neptune"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1842018076][
                   GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "2.1486894814509604147309`4.537238273631205*^22", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1842018076][
                  GeneralUtilities`Slice[
                   Key["Neptune"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1842018076][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1842018076]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1842018076][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1842018076][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[
         TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {336., {107.25, 120.75}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[35]=",ExpressionUUID->"271379dc-4c77-4b15-9a02-8eceaca01c85"]
}, Open  ]],

Cell["\:5c06\:7ed3\:679c\:521b\:5efa\:4e3a\:997c\:56fe\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369882583840246`*^9, 3.8369882670312715`*^9}},
 CellTags->"p:278",ExpressionUUID->"acaea558-b7ba-49a1-b5fd-964a95147be2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PieChart", "[", 
  RowBox[{"%", ",", 
   RowBox[{"ChartLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[36]:=",ExpressionUUID->"c3e32510-612f-44e4-9c1e-a7254ce7da19"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$8831$8942 = False, DynamicChart`click$8835$8942 = 
       False, DynamicChart`click$8839$8942 = False, 
       DynamicChart`click$8843$8942 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.2355545709912255`, 
                    3.141592653589793}]}], 
                    StatusArea[#, 
                    3.93014495684943813490738`4.983582838146157*^23]& , 
                    TagBoxNote -> 
                    "3.93014495684943813490738`4.983582838146157*^23"], 
                   StyleBox[
                   "3.93014495684943813490738`4.983582838146157*^23", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[3.93014495684943813490738`4.983582838146157*^23, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$8831$8942, 
                    FEPrivate`Not[DynamicChart`click$8831$8942]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$8831$8942, {{{1., 0}, {0, 1.}}, {
                   0.11584494145732219`, 0.1630335840823896}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$8831$8942}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.928, 0.5210666666666667, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.8004695734331984`, -1.2355545709912255`}]}], 
                    StatusArea[#, 
                    1.40510302468385873962401`4.924759393349542*^23]& , 
                    TagBoxNote -> 
                    "1.40510302468385873962401`4.924759393349542*^23"], 
                   StyleBox[
                   "1.40510302468385873962401`4.924759393349542*^23", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1.40510302468385873962401`4.924759393349542*^23, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$8835$8942, 
                    FEPrivate`Not[DynamicChart`click$8835$8942]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$8835$8942, {{{1., 0}, {
                    0, 1.}}, {-0.08649135548757698, -0.1803309330811594}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$8835$8942}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.9022851902905504`, -2.8004695734331984`}]}], 
                    StatusArea[#, 
                    9.141802013724491324794`3.3647579628804034*^21]& , 
                    TagBoxNote -> 
                    "9.141802013724491324794`3.3647579628804034*^21"], 
                   StyleBox["9.141802013724491324794`3.3647579628804034*^21", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[9.141802013724491324794`3.3647579628804034*^21, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$8839$8942, 
                    FEPrivate`Not[DynamicChart`click$8839$8942]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$8839$8942, {{{1., 0}, {
                    0, 1.}}, {-0.19163645917602865`, \
-0.057231700258460895`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$8839$8942}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.9022851902905504`}]}], 
                    StatusArea[#, 
                    2.1486894814509604147309`4.537238273631205*^22]& , 
                    TagBoxNote -> 
                    "2.1486894814509604147309`4.537238273631205*^22"], 
                   StyleBox["2.1486894814509604147309`4.537238273631205*^22", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[2.1486894814509604147309`4.537238273631205*^22, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$8843$8942, 
                    FEPrivate`Not[DynamicChart`click$8843$8942]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$8843$8942, {{{1., 0}, {
                    0, 1.}}, {-0.198570005776364, -0.02387368438207158}}, {{1,
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$8843$8942}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               
               TagBox[{{}, {}}, 
                StatusArea[#, 
                 3.93014495684943813490738`4.983582838146157*^23]& , 
                TagBoxNote -> 
                "3.93014495684943813490738`4.983582838146157*^23"], 
               StyleBox["3.93014495684943813490738`4.983582838146157*^23", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[3.93014495684943813490738`4.983582838146157*^23, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8831$8942, 
                 FEPrivate`Not[DynamicChart`click$8831$8942]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$8831$8942, {{{1., 0}, {0, 1.}}, {
               0.11584494145732219`, 0.1630335840823896}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$8831$8942}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               
               TagBox[{{}, {}}, 
                StatusArea[#, 
                 1.40510302468385873962401`4.924759393349542*^23]& , 
                TagBoxNote -> 
                "1.40510302468385873962401`4.924759393349542*^23"], 
               StyleBox["1.40510302468385873962401`4.924759393349542*^23", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1.40510302468385873962401`4.924759393349542*^23, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8835$8942, 
                 FEPrivate`Not[DynamicChart`click$8835$8942]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$8835$8942, {{{1., 0}, {
                0, 1.}}, {-0.08649135548757698, -0.1803309330811594}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$8835$8942}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               
               TagBox[{{}, {}}, 
                StatusArea[#, 
                 9.141802013724491324794`3.3647579628804034*^21]& , 
                TagBoxNote -> 
                "9.141802013724491324794`3.3647579628804034*^21"], 
               StyleBox["9.141802013724491324794`3.3647579628804034*^21", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[9.141802013724491324794`3.3647579628804034*^21, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8839$8942, 
                 FEPrivate`Not[DynamicChart`click$8839$8942]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$8839$8942, {{{1., 0}, {
                0, 1.}}, {-0.19163645917602865`, -0.057231700258460895`}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$8839$8942}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               
               TagBox[{{}, {}}, 
                StatusArea[#, 
                 2.1486894814509604147309`4.537238273631205*^22]& , 
                TagBoxNote -> 
                "2.1486894814509604147309`4.537238273631205*^22"], 
               StyleBox["2.1486894814509604147309`4.537238273631205*^22", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[2.1486894814509604147309`4.537238273631205*^22, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8843$8942, 
                 FEPrivate`Not[DynamicChart`click$8843$8942]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$8843$8942, {{{1., 0}, {
                0, 1.}}, {-0.198570005776364, -0.02387368438207158}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$8843$8942}]]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, 
     PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
     Scaled[0.09166666666666669]}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Jupiter\"", "\"Saturn\"", "\"Uranus\"", "\"Neptune\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.928, 0.5210666666666667, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.928, 0.5210666666666667, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6186666666666667, 0.3473777777777778, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.928, 0.5210666666666667, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.928, 0.5210666666666667, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.928, 0.5210666666666667, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4744270222222222, 0.32106666666666667`, 
                    0.36554631111111113`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.7116405333333333, 0.4816, \
0.5483194666666666]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None", ",", "None", ",", "None"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[36]=",ExpressionUUID->"724a03a8-f3d8-4d7c-8e7c-e8003b6ee629"]
}, Open  ]],

Cell["\:83b7\:53d6\:4e00\:4e2a\:5305\:542b\:8d85\:8fc7\:5730\:7403\:8d28\:91cf\
 1% \:7684\:536b\:661f\:7684\:6570\:636e\:96c6\:3002", "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836988283345673*^9, 
  3.8369883297692013`*^9}},ExpressionUUID->"79ca5d76-5c52-403c-9a6e-\
0c8baa5844b9"],

Cell["\:5bf9\:4e8e\:6240\:6709\:7684\:536b\:661f\:ff0c\:9009\:62e9\:90a3\:4e9b\
\:8d28\:91cf\:5927\:4e8e\:5730\:7403\:8d28\:91cf 0.01 \
\:500d\:7684\:536b\:661f\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369883350853205`*^9, 
  3.8369883500558963`*^9}},ExpressionUUID->"97b4dd15-6d60-4c41-894e-\
4c301f3a0a4a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "[", 
  RowBox[{"All", ",", "\"\<Moons\>\"", ",", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#Mass", ">", 
      NamespaceBox["LinguisticAssistant",
       DynamicModuleBox[{Typeset`query$$ = "1/100 earth mass", 
        Typeset`boxes$$ = TemplateBox[{"0.01", 
          SubscriptBox[
           StyleBox["\"M\"", Italic, StripOnInput -> False], "\"\[Earth]\""], 
          "Earth masses", "\"EarthMass\""}, "Quantity", SyntaxForm -> Mod], 
        Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
        Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
        "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
         1.23332`6.542620767742447, "Messages" -> {}}}, 
        DynamicBox[ToBoxes[
          AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
           Dynamic[Typeset`query$$], 
           Dynamic[Typeset`boxes$$], 
           Dynamic[Typeset`allassumptions$$], 
           Dynamic[Typeset`assumptions$$], 
           Dynamic[Typeset`open$$], 
           Dynamic[Typeset`querystate$$]], StandardForm],
         ImageSizeCache->{189.5, {23., 33.5}},
         TrackedSymbols:>{
          Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
           Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
        DynamicModuleValues:>{},
        UndoTrackedVariables:>{Typeset`open$$}],
       BaseStyle->{"Deploy"},
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True]}], "&"}], "]"}]}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[37]:=",ExpressionUUID->"5a4beb23-0208-4255-908a-6cfee79a915c"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "DisplayedRowCount" -> 20, "RowCount" -> 8, "Length" -> 8, 
        "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Assoc[
           TypeSystem`Atom[String], 
           TypeSystem`Struct[{"Mass", "Radius"}, {
             TypeSystem`Atom[
              Quantity[1, "Kilograms"]], 
             TypeSystem`Atom[
              Quantity[1, "Kilometers"]]}], TypeSystem`AnyLength], 8], 
        "DisplayedColumnCount" -> 20, "DataRowCount" -> 0, "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, All, 
             TypeSystem`PackageScope`KeyDummy[8]} -> 1, {All, All, 
             TypeSystem`PackageScope`KeyDummy[7]} -> 1, {All, All, "Mass"} -> 
           1, {All, All, "Radius"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[67.20000000000002], 
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`KeyValueShape[
                TypeSystem`PackageScope`AtomShape[76.80000000000001], 
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                  TypeSystem`PackageScope`AtomShape[75]]]]], 1, {All}]]], 
           8, {}]], "DataColumnCount" -> 0, "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1883199230], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Assoc[
           TypeSystem`Atom[String], 
           TypeSystem`Struct[{"Mass", "Radius"}, {
             TypeSystem`Atom[
              Quantity[1, "Kilograms"]], 
             TypeSystem`Atom[
              Quantity[1, "Kilometers"]]}], TypeSystem`AnyLength], 8], 
        "HandleQ" -> True, "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1883199230]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2091137000][{All, All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2091137000][
                  GeneralUtilities`Slice[All, All, Keys]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2091137000][{All, All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2091137000][
                  GeneralUtilities`Slice[All, All, Keys]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Mass\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Mass\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2091137000][{All, All, "Mass"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2091137000][
                  GeneralUtilities`Slice[All, All, "Mass"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Radius\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Radius\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2091137000][{All, All, "Radius"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2091137000][
                  GeneralUtilities`Slice[All, All, "Radius"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Mercury", 
                    Style[
                    "Mercury", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000][{
                    Key["Mercury"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2091137000][
                   GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Spacer[10], 
                    Style[
                    Spacer[10], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000][{
                    Key["Mercury"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2091137000][
                  GeneralUtilities`Slice[
                   Key["Mercury"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Venus", 
                    Style[
                    "Venus", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000][{
                    Key["Venus"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2091137000][
                   GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Spacer[10], 
                    Style[
                    Spacer[10], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000][{
                    Key["Venus"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2091137000][
                  GeneralUtilities`Slice[
                   Key["Venus"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Earth", 
                    Style[
                    "Earth", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000][{
                    Key["Earth"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2091137000][
                   GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Moon", 
                    Style[
                    "Moon", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000][{
                    Key["Earth"], 
                    Key["Moon"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2091137000][
                   GeneralUtilities`Slice[
                    Key["Earth"], 
                    Key["Moon"]]], "Mouse"], 
                 ImageSize -> {{76.80000000000001, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "7.3459006322855173653772`4.995678626217362*^22", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2091137000][
                  GeneralUtilities`Slice[
                   Key["Earth"], 
                   Key["Moon"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"1737.5`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2091137000][
                  GeneralUtilities`Slice[
                   Key["Earth"], 
                   Key["Moon"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Mars", 
                    Style[
                    "Mars", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000][{
                    Key["Mars"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2091137000][
                   GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Spacer[10], 
                    Style[
                    Spacer[10], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000][{
                    Key["Mars"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2091137000][
                  GeneralUtilities`Slice[
                   Key["Mars"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Jupiter", 
                    Style[
                    "Jupiter", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000][{
                    Key["Jupiter"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2091137000][
                   GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Callisto", 
                    Style[
                    "Callisto", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000][{
                    Key["Jupiter"], 
                    Key["Callisto"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2091137000][
                   GeneralUtilities`Slice[
                    Key["Jupiter"], 
                    Key["Callisto"]]], "Mouse"], 
                 ImageSize -> {{76.80000000000001, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "1.07567783404752629528633`4.995678626217362*^23", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2091137000][
                  GeneralUtilities`Slice[
                   Key["Jupiter"], 
                   Key["Callisto"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2410.3`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2091137000][
                  GeneralUtilities`Slice[
                   Key["Jupiter"], 
                   Key["Callisto"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["3 total \:203a ", 
                    Style[
                    "3 total \:203a ", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000][{
                    Key["Jupiter"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2091137000][
                  GeneralUtilities`Slice[
                   Key["Jupiter"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-5]& , {All}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Center, Baseline}, Background -> 
                GrayLevel[0.98]], SpanFromLeft, SpanFromLeft}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Saturn", 
                    Style[
                    "Saturn", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000][{
                    Key["Saturn"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2091137000][
                   GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Titan", 
                    Style[
                    "Titan", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000][{
                    Key["Saturn"], 
                    Key["Titan"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2091137000][
                   GeneralUtilities`Slice[
                    Key["Saturn"], 
                    Key["Titan"]]], "Mouse"], 
                 ImageSize -> {{76.80000000000001, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "1.34520841449162446435527`4.958607314841778*^23", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2091137000][
                  GeneralUtilities`Slice[
                   Key["Saturn"], 
                   Key["Titan"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2575.5`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2091137000][
                  GeneralUtilities`Slice[
                   Key["Saturn"], 
                   Key["Titan"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Uranus", 
                    Style[
                    "Uranus", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000][{
                    Key["Uranus"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2091137000][
                   GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Spacer[10], 
                    Style[
                    Spacer[10], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000][{
                    Key["Uranus"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2091137000][
                  GeneralUtilities`Slice[
                   Key["Uranus"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Neptune", 
                    Style[
                    "Neptune", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000][{
                    Key["Neptune"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2091137000][
                   GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Spacer[10], 
                    Style[
                    Spacer[10], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000][{
                    Key["Neptune"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2091137000][
                  GeneralUtilities`Slice[
                   Key["Neptune"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2091137000]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2091137000][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2091137000][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {588., {252.75, 266.25}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[37]=",ExpressionUUID->"161b2112-3105-4270-8abd-62769d351d35"]
}, Open  ]],

Cell["\:83b7\:53d6\:6bcf\:4e2a\:884c\:661f\:7684\:7ed3\:679c\:5173\:8054\:4e2d\
\:7684\:952e\:503c(\:5373\:536b\:661f\:540d\:79f0)\:7684\:5217\:8868\:ff1a", \
"CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369883663524413`*^9, 
  3.8369884024473243`*^9}},ExpressionUUID->"fbe51bbb-0801-4247-b94f-\
9e180aad258d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"planets", "[", 
   RowBox[{"All", ",", "\"\<Moons\>\"", ",", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"#Mass", ">", 
       NamespaceBox["LinguisticAssistant",
        DynamicModuleBox[{Typeset`query$$ = "1/100 earth mass", 
         Typeset`boxes$$ = TemplateBox[{"0.01", 
           SubscriptBox[
            StyleBox["\"M\"", Italic, StripOnInput -> False], "\"\[Earth]\""],
            "Earth masses", "\"EarthMass\""}, "Quantity", SyntaxForm -> Mod], 
         Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
         Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          1.23332`6.542620767742447, "Messages" -> {}}}, 
         DynamicBox[ToBoxes[
           AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
            Dynamic[Typeset`query$$], 
            Dynamic[Typeset`boxes$$], 
            Dynamic[Typeset`allassumptions$$], 
            Dynamic[Typeset`assumptions$$], 
            Dynamic[Typeset`open$$], 
            Dynamic[Typeset`querystate$$]], StandardForm],
          ImageSizeCache->{189.5, {23., 33.5}},
          
          TrackedSymbols:>{
           Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
            Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
         DynamicModuleValues:>{},
         UndoTrackedVariables:>{Typeset`open$$}],
        BaseStyle->{"Deploy"},
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True]}], "&"}], "]"}]}], "]"}], "[", 
  RowBox[{"All", ",", "Keys"}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[38]:=",ExpressionUUID->"3e10e1e7-8111-440b-a0ec-ecb3cf31563f"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "DisplayedRowCount" -> 20, "RowCount" -> 8, "Length" -> 8, 
        "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Vector[
           TypeSystem`Atom[String], TypeSystem`AnyLength], 8], 
        "DisplayedColumnCount" -> 20, "DataRowCount" -> 0, "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[67.20000000000002], 
            TypeSystem`PackageScope`UnknownShape]], 8, {}], "DataColumnCount" -> 
        0, "InitialData" -> TypeSystem`PackageScope`CacheHandle[411953274], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Vector[
           TypeSystem`Atom[String], TypeSystem`AnyLength], 8], "HandleQ" -> 
        True, "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[411953274]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Mercury", 
                    Style[
                    "Mercury", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914453454][{
                    
                    Key["Mercury"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914453454][
                   GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], {}}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Venus", 
                    Style[
                    "Venus", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914453454][{
                    
                    Key["Venus"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914453454][
                   GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], {}}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Earth", 
                    Style[
                    "Earth", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914453454][{
                    
                    Key["Earth"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914453454][
                   GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{"Moon"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Moon"}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914453454][{
                    
                    Key["Earth"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914453454][
                 
                  GeneralUtilities`Slice[
                   Key["Earth"]]], "Mouse"]]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Mars", 
                    Style[
                    "Mars", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914453454][{
                    
                    Key["Mars"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914453454][
                   GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], {}}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Jupiter", 
                    Style[
                    "Jupiter", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914453454][{
                    
                    Key["Jupiter"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914453454][
                   GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{"Callisto", "Ganymede", "Io"}, 
                    ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"Callisto", "Ganymede", "Io"}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914453454][{
                    
                    Key["Jupiter"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914453454][
                 
                  GeneralUtilities`Slice[
                   Key["Jupiter"]]], "Mouse"]]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Saturn", 
                    Style[
                    "Saturn", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914453454][{
                    
                    Key["Saturn"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914453454][
                   GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{"Titan"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Titan"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914453454][{
                    
                    Key["Saturn"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914453454][
                 
                  GeneralUtilities`Slice[
                   Key["Saturn"]]], "Mouse"]]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Uranus", 
                    Style[
                    "Uranus", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914453454][{
                    
                    Key["Uranus"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914453454][
                   GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], {}}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Neptune", 
                    Style[
                    "Neptune", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914453454][{
                    
                    Key["Neptune"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914453454][
                   GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], {}}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914453454][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914453454]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914453454][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914453454][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {434., {204.25, 217.75}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[38]=",ExpressionUUID->"eded0ae1-eeac-4276-8c7a-b096f7ee4d4e"]
}, Open  ]],

Cell["\:83b7\:53d6\:5e95\:5c42\:7684\:5173\:8054\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.83698843653238*^9, 3.8369884396700697`*^9}},
 CellTags->"p:279",ExpressionUUID->"6fbb5cea-c499-462d-a954-7974a791a168"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "%", "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[39]:=",ExpressionUUID->"d5a7d98b-197d-401d-9fd0-a97dc17aea93"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Mercury\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"Venus\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"Earth\"\>", "\[Rule]", 
    RowBox[{"{", "\<\"Moon\"\>", "}"}]}], ",", 
   RowBox[{"\<\"Mars\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"Jupiter\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"Callisto\"\>", ",", "\<\"Ganymede\"\>", ",", "\<\"Io\"\>"}],
      "}"}]}], ",", 
   RowBox[{"\<\"Saturn\"\>", "\[Rule]", 
    RowBox[{"{", "\<\"Titan\"\>", "}"}]}], ",", 
   RowBox[{"\<\"Uranus\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"Neptune\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[39]=",ExpressionUUID->"2e0f5d16-dea8-44c0-82c9-9c855b374066"]
}, Open  ]],

Cell["\:5c06\:6240\:6709\:952e\:503c\:5217\:8868\:8fde\:63a5\:5728\:4e00\:8d77\
\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836988451748909*^9, 3.8369884743249617`*^9}, {
  3.836988507585667*^9, 3.8369885154611397`*^9}},
 CellTags->"i:18",ExpressionUUID->"9d17b0cf-b393-45f0-a370-0ad3efda80ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Catenate", "[", "%", "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[40]:=",ExpressionUUID->"87ae0360-016b-42cb-bd2a-d79550c3154e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Moon\"\>", ",", "\<\"Callisto\"\>", ",", "\<\"Ganymede\"\>", 
   ",", "\<\"Io\"\>", ",", "\<\"Titan\"\>"}], "}"}]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[40]=",ExpressionUUID->"cc392e61-b528-4c9d-80a0-80d0405cb51f"]
}, Open  ]],

Cell["\:4e0b\:9762\:662f\:5c06\:6574\:4e2a\:8ba1\:7b97\:653e\:5728\:4e00\:884c\
\:4e2d\:8fdb\:884c\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836988524890082*^9, 
  3.836988539529*^9}},ExpressionUUID->"0358a742-1aad-4231-ba3c-22ce1925aa5b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"planets", "[", 
    RowBox[{"All", ",", "\"\<Moons\>\"", ",", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#Mass", ">", 
        NamespaceBox["LinguisticAssistant",
         DynamicModuleBox[{Typeset`query$$ = "1/100 earth mass", 
          Typeset`boxes$$ = TemplateBox[{"0.01", 
            SubscriptBox[
             StyleBox["\"M\"", Italic, StripOnInput -> False], 
             "\"\[Earth]\""], "Earth masses", "\"EarthMass\""}, "Quantity", 
           SyntaxForm -> Mod], Typeset`allassumptions$$ = {}, 
          Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
          Typeset`querystate$$ = {
          "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
           1.23332`6.542620767742447, "Messages" -> {}}}, 
          DynamicBox[ToBoxes[
            AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
             Dynamic[Typeset`query$$], 
             Dynamic[Typeset`boxes$$], 
             Dynamic[Typeset`allassumptions$$], 
             Dynamic[Typeset`assumptions$$], 
             Dynamic[Typeset`open$$], 
             Dynamic[Typeset`querystate$$]], StandardForm],
           ImageSizeCache->{189.5, {23., 33.5}},
           
           TrackedSymbols:>{
            Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
             Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
          DynamicModuleValues:>{},
          UndoTrackedVariables:>{Typeset`open$$}],
         BaseStyle->{"Deploy"},
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True]}], "&"}], "]"}]}], "]"}], "[", 
   RowBox[{"Catenate", ",", "Keys"}], "]"}], "//", "Normal"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[41]:=",ExpressionUUID->"6cfea72d-6911-4514-aea3-dfd3e19b62af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Moon\"\>", ",", "\<\"Callisto\"\>", ",", "\<\"Ganymede\"\>", 
   ",", "\<\"Io\"\>", ",", "\<\"Titan\"\>"}], "}"}]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[41]=",ExpressionUUID->"222b1774-a55b-4b38-9b8c-ed7aced78b91"]
}, Open  ]],

Cell["\:8fd9\:91cc\:8fd8\:6709\:4e00\:4e2a\:4f8b\:5b50\:ff0c\:6211\:4eec\:627e\
\:5230\:6bcf\:4e2a\:884c\:661f\:8d28\:91cf\:7684\:5bf9\:6570\:ff0c\:7136\:540e\
\:628a\:6bcf\:4e2a\:884c\:661f\:7684\:8fd9\:4e9b\:6570\:503c\:505a\:6210\:4e00\
\:4e2a\:6570\:8f74\:56fe\:3002", "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369885485502295`*^9, 3.8369885773271027`*^9}},
 CellTags->"i:19",ExpressionUUID->"620ac347-68b4-4654-900a-1cd588aaca74"],

Cell["\:4e3a\:6bcf\:4e2a\:884c\:661f\:7684\:536b\:661f\:7ed8\:5236\:8d28\:91cf\
\:5bf9\:6570\:7684\:6570\:8f74\:56fe\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369885861628313`*^9, 
  3.836988608822053*^9}},ExpressionUUID->"0a06c242-931d-4abb-a535-\
d51083a6a3c4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "[", 
  RowBox[{"All", ",", "\"\<Moons\>\"", ",", 
   RowBox[{
    RowBox[{"NumberLinePlot", "[", 
     RowBox[{"Values", "[", "#", "]"}], "]"}], "&"}], ",", 
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"#Mass", "/", 
      NamespaceBox["LinguisticAssistant",
       DynamicModuleBox[{Typeset`query$$ = "1 earth mass", Typeset`boxes$$ = 
        TemplateBox[{"1", 
          SubscriptBox[
           StyleBox["\"M\"", Italic, StripOnInput -> False], "\"\[Earth]\""], 
          "Earth masses", "\"EarthMass\""}, "Quantity", SyntaxForm -> Mod], 
        Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
        Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
        "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
         1.21194`6.535026113067228, "Messages" -> {}}}, 
        DynamicBox[ToBoxes[
          AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
           Dynamic[Typeset`query$$], 
           Dynamic[Typeset`boxes$$], 
           Dynamic[Typeset`allassumptions$$], 
           Dynamic[Typeset`assumptions$$], 
           Dynamic[Typeset`open$$], 
           Dynamic[Typeset`querystate$$]], StandardForm],
         ImageSizeCache->{149.5, {23., 33.5}},
         TrackedSymbols:>{
          Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
           Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
        DynamicModuleValues:>{},
        UndoTrackedVariables:>{Typeset`open$$}],
       BaseStyle->{"Deploy"},
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True]}], "]"}], "&"}]}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[42]:=",ExpressionUUID->"b5ebbfae-82fb-4d96-a7b8-0e6eb1b5c696"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "DisplayedRowCount" -> 20, "RowCount" -> 8, "Length" -> 8, 
        "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration[
           "Earth", "Jupiter", "Mars", "Mercury", "Neptune", "Saturn", 
            "Uranus", "Venus"]], 
          TypeSystem`Atom[Graphics], 8], "DisplayedColumnCount" -> 20, 
        "DataRowCount" -> 0, "Shape" -> TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[63.], 
            TypeSystem`PackageScope`AtomShape[60]]], 8, {}], 
        "DataColumnCount" -> 0, "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1159106545], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration[
           "Earth", "Jupiter", "Mars", "Mercury", "Neptune", "Saturn", 
            "Uranus", "Venus"]], 
          TypeSystem`Atom[Graphics], 8], "HandleQ" -> True, "Meta" -> {}, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1159106545]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Mercury", 
                    Style[
                    "Mercury", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1231202866][{
                    Key["Mercury"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1231202866][
                   GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                 ImageSize -> {{63., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  
                  GraphicsBox[{}, {
                   PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                    GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                    None, ImageSize -> 96, AxesLabel -> {None}, 
                    Ticks -> {Automatic, Automatic}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, PlotRange -> {{-3., 3.}, {0, 1}}, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {0, 0}}, AspectRatio -> 
                    NCache[Rational[1, 10]/GoldenRatio, 0.06180339887498948], 
                    AxesOrigin -> {Automatic, Automatic}, 
                    Axes -> {True, False}, ImagePadding -> All}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1231202866][
                  GeneralUtilities`Slice[
                   Key["Mercury"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Venus", 
                    Style[
                    "Venus", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1231202866][{
                    Key["Venus"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1231202866][
                   GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                 ImageSize -> {{63., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  
                  GraphicsBox[{}, {
                   PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                    GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                    None, ImageSize -> 96, AxesLabel -> {None}, 
                    Ticks -> {Automatic, Automatic}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, PlotRange -> {{-3., 3.}, {0, 1}}, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {0, 0}}, AspectRatio -> 
                    NCache[Rational[1, 10]/GoldenRatio, 0.06180339887498948], 
                    AxesOrigin -> {Automatic, Automatic}, 
                    Axes -> {True, False}, ImagePadding -> All}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1231202866][
                  GeneralUtilities`Slice[
                   Key["Venus"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Earth", 
                    Style[
                    "Earth", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1231202866][{
                    Key["Earth"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1231202866][
                   GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                 ImageSize -> {{63., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[{{
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-4.398142899775445, 1}]}}}, {
                   PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                    GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                    None, ImageSize -> 96, AxesLabel -> {None}, 
                    Ticks -> {Automatic, Automatic}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, 
                    PlotRange -> {{-4.398142899775445, 8.79628579955089}, {0, 
                    1}}, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {0, 1}}, AspectRatio -> 
                    NCache[Rational[1, 10]/GoldenRatio, 0.06180339887498948], 
                    AxesOrigin -> {Automatic, Automatic}, 
                    Axes -> {True, False}, ImagePadding -> All}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1231202866][
                  GeneralUtilities`Slice[
                   Key["Earth"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Mars", 
                    Style[
                    "Mars", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1231202866][{
                    Key["Mars"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1231202866][
                   GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                 ImageSize -> {{63., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[{{
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-22.12624793250122, 1}]}}, {
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-20.137814612839865`, 1}]}}}, {
                   PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                    GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                    None, ImageSize -> 96, AxesLabel -> {None}, 
                    Ticks -> {Automatic, Automatic}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, 
                    PlotRange -> {{-22.12624793250122, -20.137814612839865`}, \
{0, 1}}, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {0, 1}}, AspectRatio -> 
                    NCache[Rational[1, 10]/GoldenRatio, 0.06180339887498948], 
                    AxesOrigin -> {Automatic, Automatic}, 
                    Axes -> {True, False}, ImagePadding -> All}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1231202866][
                  GeneralUtilities`Slice[
                   Key["Mars"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Jupiter", 
                    Style[
                    "Jupiter", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1231202866][{
                    Key["Jupiter"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1231202866][
                   GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                 ImageSize -> {{63., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[{{
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-20.4966073127496, 1}]}}, {
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-25.61260312250368, 1}]}}, {
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-14.876206447032377`, 1}]}}, {
                    RGBColor[0.24, 0.6, 0.33692049419863584`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-19.11031295162971, 1}]}}, {
                    RGBColor[0.24, 0.3531726744018182, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.24, 0.5632658430022722], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.42664098839727194`, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-24.91945594194372, 1}]}}, {
                    RGBColor[0.2634521802031821, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-22.65077240062537, 1}]}}, {
                    RGBColor[0.24, 0.47354534880363613`, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-4.016749221138189, 1}]}}, {
                    RGBColor[0.5163614825959097, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-17.628708410705492`, 1}]}}, {
                    RGBColor[0.6, 0.3062683139954558, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.3838248546049982, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-25.101777498737807`, 1}]}}, {
                    RGBColor[0.24, 0.5939180232054561, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.39598880819409377`, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-15.7430171216432, 1}]}}, {
                    RGBColor[0.6, 0.24, 0.2941043604063603], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-25.61260312250368, 1}]}}, {
                    RGBColor[0.5041975290068142, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-25.61260312250368, 1}]}}, {
                    RGBColor[0.24, 0.6, 0.48570930239273163`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.2756161337922776, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-26.71121541117179, 1}]}}, {
                    RGBColor[0.6, 0.24, 0.4144770348081764], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-4.823943193025306, 1}]}}, {
                    RGBColor[0.6, 0.5754297965913696, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-25.61260312250368, 1}]}}, {
                    RGBColor[0.24, 0.6, 0.36533662799091565`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-3.696644461676854, 1}]}}, {
                    RGBColor[0.24, 0.32475654060953846`, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-24.631773869491962`, 1}]}}, {
                    RGBColor[0.6, 0.24, 0.5348497092099924], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.45505712218955346`, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.24, 0.6, 0.24496395358909184`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-24.91945594194372, 1}]}}, {
                    RGBColor[0.24, 0.4451292150113622, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.5447776163881838, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-13.694212549425279`, 1}]}}, {
                    RGBColor[0.6, 0.3346844477877375, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-4.202893187207173, 1}]}}, {
                    RGBColor[0.35540872081272423`, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-24.146266053710253`, 1}]}}, {
                    RGBColor[0.24, 0.5655018894131706, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-25.101777498737807`, 1}]}}, {
                    RGBColor[0.42440494198636775`, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-26.71121541117179, 1}]}}, {
                    RGBColor[0.6, 0.24, 0.26568822661407865`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.4757813952145403, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-24.146266053710253`, 1}]}}, {
                    RGBColor[0.24, 0.6, 0.514125436184998], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.3040322675845516, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-20.118170877029353`, 1}]}}, {
                    RGBColor[0.6, 0.24, 0.3860609010159101], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-18.36837560690033, 1}]}}, {
                    RGBColor[0.5961540696163564, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-24.07215808155653, 1}]}}, {
                    RGBColor[0.24, 0.6, 0.39375276178318186`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-17.72401859051053, 1}]}}, {
                    RGBColor[0.24, 0.2963404068172645, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.24, 0.5064335754177262], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-26.71121541117179, 1}]}}, {
                    RGBColor[0.6, 0.48347325598182744`, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-16.807727858635293`, 1}]}}, {
                    RGBColor[0.24, 0.6, 0.2733800873813658], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-26.71121541117179, 1}]}}, {
                    RGBColor[0.24, 0.4167130812190805, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-23.343919581185315`, 1}]}}, {
                    RGBColor[0.5731937501804577, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.36310058158001146`, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.32699258702045025`, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.24, 0.5370857556208966, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.4528210757786416, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.24272790717818, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.4473652614222664, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.24, 0.6, 0.5425415699772719], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.3324484013768256, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.24, 0.35764476722363614`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.5677379358240978, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.24, 0.6, 0.42216889557547116`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.24, 0.2679242730249905, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.24, 0.4780174416254521], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-26.710086049141232`, 1}]}}, {
                    RGBColor[0.6, 0.511889389774086, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-26.710086049141232`, 1}]}}, {
                    RGBColor[0.24, 0.6, 0.3017962211736552], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-26.710086049141232`, 1}]}}, {
                    RGBColor[0.24, 0.3882969474268066, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-26.710086049141232`, 1}]}}, {
                    RGBColor[0.6, 0.24, 0.5983901160272683], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-18.194022219755553`, 1}]}}, {
                    RGBColor[0.6, 0.39151671537227, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-26.71121541117179, 1}]}}, {
                    RGBColor[0.298576453228161, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-24.313320138373424`, 1}]}}, {
                    RGBColor[0.24, 0.5086696218286226, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-15.198289946201626`, 1}]}}, {
                    RGBColor[0.4812372095709156, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.27114404097045397`, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-22.882574014682692`, 1}]}}, {
                    RGBColor[0.41894912763000774`, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-24.91945594194372, 1}]}}}, {
                   PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                    GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                    None, ImageSize -> 96, AxesLabel -> {None}, 
                    Ticks -> {Automatic, Automatic}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, 
                    PlotRange -> {{-26.71121541117179, -3.696644461676854}, {
                    0, 1}}, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {0, 1}}, AspectRatio -> 
                    NCache[Rational[1, 10]/GoldenRatio, 0.06180339887498948], 
                    AxesOrigin -> {Automatic, Automatic}, 
                    Axes -> {True, False}, ImagePadding -> All}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1231202866][
                  GeneralUtilities`Slice[
                   Key["Jupiter"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Saturn", 
                    Style[
                    "Saturn", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1231202866][{
                    Key["Saturn"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1231202866][
                   GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                 ImageSize -> {{63., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[{{
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-19.46698789556844, 1}]}}, {
                    RGBColor[0.24, 0.6, 0.33692049419863584`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-27.80869833780934, 1}]}}, {
                    RGBColor[0.24, 0.3531726744018182, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-21.769572988562484`, 1}]}}, {
                    RGBColor[0.6, 0.24, 0.5632658430022722], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.42664098839727194`, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.2634521802031821, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.24, 0.47354534880363613`, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-21.230576487829797`, 1}]}}, {
                    RGBColor[0.5163614825959097, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.3062683139954558, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-8.603698663685897, 1}]}}, {
                    RGBColor[0.3838248546049982, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-10.920235901910658`, 1}]}}, {
                    RGBColor[0.24, 0.5939180232054561, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-16.245259001717834`, 1}]}}, {
                    RGBColor[0.39598880819409377`, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-22.779389778447467`, 1}]}}, {
                    RGBColor[0.6, 0.24, 0.2941043604063603], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.5041975290068142, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.24, 0.6, 0.48570930239273163`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.2756161337922776, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.24, 0.4144770348081764], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.5754297965913696, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-19.272831881127484`, 1}]}}, {
                    RGBColor[0.24, 0.6, 0.36533662799091565`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-13.889957126551394`, 1}]}}, {
                    RGBColor[0.24, 0.32475654060953846`, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.24, 0.5348497092099924], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-8.104055100276806, 1}]}}, {
                    RGBColor[0.6, 0.45505712218955346`, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-22.329188776497908`, 1}]}}, {
                    RGBColor[0.24, 0.6, 0.24496395358909184`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-14.962427622479577`, 1}]}}, {
                    RGBColor[0.24, 0.4451292150113622, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.5447776163881838, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.3346844477877375, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-21.317587864819426`, 1}]}}, {
                    RGBColor[0.35540872081272423`, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.24, 0.5655018894131706, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.42440494198636775`, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-11.96748555046809, 1}]}}, {
                    RGBColor[0.6, 0.24, 0.26568822661407865`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-24.07215808155653, 1}]}}, {
                    RGBColor[0.4757813952145403, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-23.57572119524264, 1}]}}, {
                    RGBColor[0.24, 0.6, 0.514125436184998], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-20.401297132945274`, 1}]}}, {
                    RGBColor[0.3040322675845516, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.24, 0.3860609010159101], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-20.912122756711263`, 1}]}}, {
                    RGBColor[0.5961540696163564, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-17.505887581019152`, 1}]}}, {
                    RGBColor[0.24, 0.6, 0.39375276178318186`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-13.48792131518902, 1}]}}, {
                    RGBColor[0.24, 0.2963404068172645, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.24, 0.5064335754177262], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-17.280936618830346`, 1}]}}, {
                    RGBColor[0.6, 0.48347325598182744`, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-7.858297808613832, 1}]}}, {
                    RGBColor[0.24, 0.6, 0.2733800873813658], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.24, 0.4167130812190805, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.5731937501804577, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.36310058158001146`, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.32699258702045025`, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.24, 0.5370857556208966, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.4528210757786416, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-24.407500956147185`, 1}]}}, {
                    RGBColor[0.6, 0.24272790717818, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.4473652614222664, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.24, 0.6, 0.5425415699772719], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-18.847948687162216`, 1}]}}, {
                    RGBColor[0.3324484013768256, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-23.666692973448367`, 1}]}}, {
                    RGBColor[0.6, 0.24, 0.35764476722363614`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.5677379358240978, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.24, 0.6, 0.42216889557547116`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-24.07215808155653, 1}]}}, {
                    RGBColor[0.24, 0.2679242730249905, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.24, 0.4780174416254521], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-21.51825856028158, 1}]}}, {
                    RGBColor[0.6, 0.511889389774086, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-20.537429307269853`, 1}]}}, {
                    RGBColor[0.24, 0.6, 0.3017962211736552], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-9.177023907856789, 1}]}}, {
                    RGBColor[0.24, 0.3882969474268066, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-24.07215808155653, 1}]}}, {
                    RGBColor[0.6, 0.24, 0.5983901160272683], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-3.7931512712470643`, 1}]}}, {
                    RGBColor[0.6, 0.39151671537227, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-20.912122756711263`, 1}]}}}, {
                   PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                    GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                    None, ImageSize -> 96, AxesLabel -> {None}, 
                    Ticks -> {Automatic, Automatic}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, 
                    PlotRange -> {{-27.80869833780934, -3.7931512712470643`}, \
{0, 1}}, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {0, 1}}, AspectRatio -> 
                    NCache[Rational[1, 10]/GoldenRatio, 0.06180339887498948], 
                    AxesOrigin -> {Automatic, Automatic}, 
                    Axes -> {True, False}, ImagePadding -> All}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1231202866][
                  GeneralUtilities`Slice[
                   Key["Saturn"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Uranus", 
                    Style[
                    "Uranus", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1231202866][{
                    Key["Uranus"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1231202866][
                   GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                 ImageSize -> {{63., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[{{
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-8.392567392784576, 1}]}}, {
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-16.633774551512225`, 1}]}}, {
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-17.978910840138607`, 1}]}}, {
                    RGBColor[0.24, 0.6, 0.33692049419863584`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-15.911639834078857`, 1}]}}, {
                    RGBColor[0.24, 0.3531726744018182, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-18.70484784352154, 1}]}}, {
                    RGBColor[0.6, 0.24, 0.5632658430022722], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-16.67232322162946, 1}]}}, {
                    RGBColor[0.6, 0.42664098839727194`, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.2634521802031821, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-17.32692173207217, 1}]}}, {
                    RGBColor[0.24, 0.47354534880363613`, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.5163614825959097, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.3062683139954558, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-16.187151370910552`, 1}]}}, {
                    RGBColor[0.3838248546049982, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.24, 0.5939180232054561, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.39598880819409377`, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-11.414100312283301`, 1}]}}, {
                    RGBColor[0.6, 0.24, 0.2941043604063603], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-7.591902556428909, 1}]}}, {
                    RGBColor[0.5041975290068142, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-18.522526286727587`, 1}]}}, {
                    RGBColor[0.24, 0.6, 0.48570930239273163`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.2756161337922776, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-15.083177139101057`, 1}]}}, {
                    RGBColor[0.6, 0.24, 0.4144770348081764], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-19.46698789556844, 1}]}}, {
                    RGBColor[0.6, 0.5754297965913696, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-14.540251942755184`, 1}]}}, {
                    RGBColor[0.24, 0.6, 0.36533662799091565`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-16.970246788133437`, 1}]}}, {
                    RGBColor[0.24, 0.32475654060953846`, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-19.46698789556844, 1}]}}, {
                    RGBColor[0.6, 0.24, 0.5348497092099924], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-20.71975086406381, 1}]}}, {
                    RGBColor[0.6, 0.45505712218955346`, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-13.920137743701364`, 1}]}}, {
                    RGBColor[0.24, 0.6, 0.24496395358909184`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-7.434843557474199, 1}]}}, {
                    RGBColor[0.24, 0.4451292150113622, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-22.799192405743646`, 1}]}}, {
                    RGBColor[0.5447776163881838, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-8.53643520565625, 1}]}}}, {
                   PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                    GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                    None, ImageSize -> 96, AxesLabel -> {None}, 
                    Ticks -> {Automatic, Automatic}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, 
                    PlotRange -> {{-22.799192405743646`, -7.434843557474199}, \
{0, 1}}, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {0, 1}}, AspectRatio -> 
                    NCache[Rational[1, 10]/GoldenRatio, 0.06180339887498948], 
                    AxesOrigin -> {Automatic, Automatic}, 
                    Axes -> {True, False}, ImagePadding -> All}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1231202866][
                  GeneralUtilities`Slice[
                   Key["Uranus"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Neptune", 
                    Style[
                    "Neptune", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1231202866][{
                    Key["Neptune"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1231202866][
                   GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                 ImageSize -> {{63., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[{{
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-14.86181770958029, 1}]}}, {
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-14.281999214327428`, 1}]}}, {
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.24, 0.6, 0.33692049419863584`], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.24, 0.3531726744018182, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-14.004367477729119`, 1}]}}, {
                    RGBColor[0.6, 0.24, 0.5632658430022722], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-17.23851077472883, 1}]}}, {
                    RGBColor[0.6, 0.42664098839727194`, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-12.172998870406026`, 1}]}}, {
                    RGBColor[0.2634521802031821, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.24, 0.47354534880363613`, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-11.683763879232401`, 1}]}}, {
                    RGBColor[0.5163614825959097, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.6, 0.3062683139954558, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-20.900943058827202`, 1}]}}, {
                    RGBColor[0.3838248546049982, 0.6, 0.24], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{}}}, {
                    RGBColor[0.24, 0.5939180232054561, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-16.5845843073213, 1}]}}, {
                    RGBColor[0.39598880819409377`, 0.24, 0.6], 
                    PointSize[Medium], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    PointBox[{-5.631744740771266, 1}]}}}, {
                   PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                    GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                    None, ImageSize -> 96, AxesLabel -> {None}, 
                    Ticks -> {Automatic, Automatic}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, 
                    PlotRange -> {{-20.900943058827202`, -5.631744740771266}, \
{0, 1}}, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {0, 1}}, AspectRatio -> 
                    NCache[Rational[1, 10]/GoldenRatio, 0.06180339887498948], 
                    AxesOrigin -> {Automatic, Automatic}, 
                    Axes -> {True, False}, ImagePadding -> All}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1231202866][
                  GeneralUtilities`Slice[
                   Key["Neptune"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1231202866][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1231202866]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1231202866][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1231202866][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {336., {204.25, 217.75}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[42]=",ExpressionUUID->"cbfbee66-5911-49c6-a329-95558633485f"]
}, Open  ]],

Cell["\<\
\:4e3e\:6700\:540e\:4e00\:4e2a\:4f8b\:5b50\:ff0c\:8ba9\:6211\:4eec\:521b\:5efa\
\:4e00\:4e2a\:536b\:661f\:540d\:79f0\:7684\:8bcd\:4e91\:ff0c\:6839\:636e\:536b\
\:661f\:7684\:8d28\:91cf\:6765\:786e\:5b9a\:5927\:5c0f\:3002\:8981\:505a\:5230\
\:8fd9\:4e00\:70b9\:ff0c\:6211\:4eec\:9700\:8981\:4e00\:4e2a\:5355\:4e00\:7684\
\:5173\:8054\:ff0c\:628a\:6bcf\:4e2a\:536b\:661f\:7684\:540d\:5b57\:4e0e\:5b83\
\:7684\:8d28\:91cf\:5173\:8054\:8d77\:6765\:3002\
\>", "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369886173006883`*^9, 
  3.836988661293793*^9}},ExpressionUUID->"ad9a6d20-b14c-4dce-bb00-\
e9f26bca89cd"],

Cell[TextData[{
 "\:5f53\:7ed9\:5b9a\:4e00\:4e2a\:5173\:8054\:65f6\:ff0c",
 ButtonBox["WordCloud",
  BaseStyle->"Link"],
 " \:4f1a\:6839\:636e\:5173\:8054\:4e2d\:7684\:503c\:6765\:786e\:5b9a\:5927\
\:5c0f\:ff1a"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836988669039318*^9, 3.8369886876740007`*^9}},
 CellTags->"i:20",ExpressionUUID->"b3d153c1-76e1-4855-8ebb-aeff31392eb5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\"\<A\>\"", "\[Rule]", "5"}], ",", 
    RowBox[{"\"\<B\>\"", "\[Rule]", "4"}], ",", 
    RowBox[{"\"\<C\>\"", "\[Rule]", "3"}], ",", 
    RowBox[{"\"\<D\>\"", "\[Rule]", "2"}], ",", 
    RowBox[{"\"\<E\>\"", "\[Rule]", "1"}]}], "\[RightAssociation]"}], 
  "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[43]:=",ExpressionUUID->"6299e7ad-4f62-42e3-8c5f-421b1eb5b7ce"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"A\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.7291666666666666],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"B\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.5729166666666666],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-33., 18.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"C\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.41666666666666663`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {30., 13.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"D\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.26041666666666663`],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {0., -25.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"E\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.10416666666666666`],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-28., -5.5}, Center,
     Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-50.5, 45.5}, {-35., 45.}}]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[43]=",ExpressionUUID->"b37e519c-b5ac-4b49-840e-e4f2e6cc9d09"]
}, Open  ]],

Cell[TextData[{
 "\:51fd\:6570 ",
 ButtonBox["Association",
  BaseStyle->"Link"],
 " \:7528\:4e8e\:5c06\:5173\:8054\:7ec4\:5408\:8d77\:6765\:ff1a"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836988700377223*^9, 3.8369887115114098`*^9}},
 CellTags->"i:21",ExpressionUUID->"853fad81-205e-4f3e-a232-2454dac38075"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Association", "[", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<a\>\"", "\[Rule]", "1"}], ",", 
     RowBox[{"\"\<b\>\"", "\[Rule]", "2"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\"\<c\>\"", "\[Rule]", "3"}], "\[RightAssociation]"}]}], 
  "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[44]:=",ExpressionUUID->"15757db8-8371-4cc1-845f-889383ceabdb"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"a\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "3"}]}], "\[RightAssociation]"}]], "Output",\

 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[44]=",ExpressionUUID->"40742866-5db5-4486-9070-f51101dd9e2c"]
}, Open  ]],

Cell["\:751f\:6210\:536b\:661f\:8d28\:91cf\:7684\:8bcd\:4e91\:ff1a", \
"CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836988716658889*^9, 3.8369887277415113`*^9}},
 CellTags->{
  "p:280", "i:22"},ExpressionUUID->"8f055eb0-13f2-49d5-8d97-a16a33c8c025"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"WordCloud", "[", 
     RowBox[{"Association", "[", 
      RowBox[{"Values", "[", "#", "]"}], "]"}], "]"}], "&"}], ",", 
   "\"\<Moons\>\"", ",", "All", ",", "\"\<Mass\>\""}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[45]:=",ExpressionUUID->"7bedef8d-7082-4144-b31f-cae334ec7cb9"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"Ganymede\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.20408163265306123`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Titan\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.20408163265306123`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0., 43.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Callisto\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1561643679384994],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {0., -51.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Moon\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11589068663893688`],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {43., 77.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Europa\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08581464179376451],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {0., -84.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Io\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.13459226231470894`],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-82., 36.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Triton\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.054415706133205725`],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-30., 84.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Desdemona\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154729457362142`],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {98., -28.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Prometheus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154739364403832`],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {-14., -101.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Epimetheus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915513989194653],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {0., 103.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"S/2004 N1\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915452483643847],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {-70., -75.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"S/2007 S2\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915451910983755],
     FontColor->RGBColor[
      0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {73., -75.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Enceladus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02928207209451304],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {99., 39.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"S/2010 J2\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154518950437316`],
     FontColor->RGBColor[
      0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {53., 95.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"S/2010 J1\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154518950437316`],
     FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {-50., 99.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Eurydome\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915451898579962],
     FontColor->RGBColor[
      0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {99., 52.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Hermippe\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154519038873058`],
     FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {44., -102.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Harpalyke\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915451907425535],
     FontColor->RGBColor[
      0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {-71., -87.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Amalthea\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029156960310857467`],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-77., 82.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Chaldene\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915451902118191],
     FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {72., -87.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Mundilfari\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915451918040222],
     FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {0., -113.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Megaclite\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915451918040222],
     FontColor->RGBColor[
      0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {-109., -28.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Themisto\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154519746518892`],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {107., -40.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Callirrhoe\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154519958812644`],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {0., 115.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Stephano\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154526009184535`],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {-112., -42.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Thalassa\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915496121137315],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {48., 107.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Adrastea\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915452777829912],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {-64., -100.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Pasiphae\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915487275564376],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {-102., 64.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Praxidike\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154519445769408`],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {109., -52.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Prospero\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915454370033041],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {-45., -112.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Cressida\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154924059966808`],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-50., 111.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Hyperion\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029161064656701374`],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-110., -54.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Iapetus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031286302011133485`],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {42., -116.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Oberon\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03271220836897272],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-8., -125.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Autonoe\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154519038873058`],
     FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {95., 26.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Cordelia\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154572006163816`],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {43., 119.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Lysithea\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154593235538873`],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {-121., 42.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Rosalind\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154819682206123`],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {114., 64.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Titania\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03331724555803106],
     FontColor->RGBColor[1, 0.75, 0]], {-42., 123.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"Taygete\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154519127328787`],
     FontColor->RGBColor[
      0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {116., -64.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Suttungr\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915451918040222],
     FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {-115., -67.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Trinculo\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154519817283474`],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {-47., -124.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Pandora\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154694959627674`],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {89., -99.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Miranda\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029232359974593336`],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-95., 94.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Euanthe\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915451898579962],
     FontColor->RGBColor[
      0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {97., 95.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Erinome\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915451898579962],
     FontColor->RGBColor[
      0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {113., 76.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Setebos\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915454370033041],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {90., 107.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Despina\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029156995693149227`],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-116., -79.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Calypso\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915452317860119],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {-86., -110.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Ananke\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915455431501794],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {85., -111.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Ophelia\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154582620851348`],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {117., -78.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Sycorax\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029160870054096708`],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-120., 76.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Phoebe\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029164303905511797`],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-94., 106.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Thyone\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154519038873058`],
     FontColor->RGBColor[
      0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {-106., -96.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Telesto\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154527424476204`],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {82., 119.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Albiorix\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915454370033041],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {-80., 122.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Belinda\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0291549399819981],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {144., -28.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Galatea\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915894171919591],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {81., -123.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Himalia\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02916247994837168],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {142., 38.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Proteus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029213961182879278`],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {142., 50.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Thrymr\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915451918040222],
     FontColor->RGBColor[
      0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {-85., -122.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Deimos\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915452066645848],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {-142., 54.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Phobos\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0291545315960484],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-150., -28.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Siarnaq\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154564929705466`],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {148., -40.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Caliban\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029155385798874247`],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {128., -90.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Larissa\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029160357010866216`],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {149., -52.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Umbriel\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030537966540456065`],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-151., -54.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Tarvos\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915452211713244],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {-152., -39.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Paaliaq\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154528662856415`],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {-133., 88.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Tethys\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029883571054395597`],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {135., 86.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Iocaste\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154519162711078`],
     FontColor->RGBColor[
      0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {127., -102.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Erriapo\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915451983497462],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {-123., -108.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Helene\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154549007674172`],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {153., 61.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Sinope\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154607388455576`],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {127., 105.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Bianca\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915462861783063],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {152., -64.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Mimas\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029199277531799794`],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {4., 126.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Rhea\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031880193778288116`],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {-130., 100.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Isonoe\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915451902118191],
     FontColor->RGBColor[
      0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {-115., 118.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Kalyke\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154519162711078`],
     FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {120., -114.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Carme\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154674614809913`],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {117., 117.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Thebe\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029156288047314072`],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-152., -67.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Janus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915675863179445],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {-140., -89.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Nereid\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029190962693236712`],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {152., -76.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Skathi\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154519304240244`],
     FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {-155., 66.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Portia\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029156503879293794`],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-118., -121.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Kiviuq\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154522824778276`],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {130., 126.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Naiad\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154748917622608`],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-146., 112.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Aitne\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915451898579962],
     FontColor->RGBColor[
      0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {28., -26.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Juliet\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029155177043352874`],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {155., 96.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Elara\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029155545019187157`],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-155., 41.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Dione\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030447971681370107`],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {115., -126.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Atlas\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154521409486607`],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {-153., -101.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Leda\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154531847262674`],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {157., -101.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Metis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915466046189321],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-146., -119.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Puck\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029157935092995396`],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {149., -114.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Narvi\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915451933962254],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {158., 72.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Ijiraq\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02915452034801785],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {143., -126.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Ariel\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030752029405590738`],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-144., 124.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Ymir\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154524770804317`],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {-159., 77.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Pan\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029154524770804317`],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {-155., 99.5},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-171.5, 171.5}, {-134., 134.}}]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[45]=",ExpressionUUID->"e03e0afa-99f6-420c-a304-e9eb96eaf1ca"]
}, Open  ]],

Cell[TextData[{
 "\:5c31\:5176\:4f5c\:7528\:800c\:8a00\:ff0c\:8fd9\:91cc\:7684\:4ee3\:7801\
\:51fa\:5947\:5730\:7b80\:5355\:3002\:4f46\:6211\:4eec\:53ef\:4ee5\:901a\:8fc7\
\:4f7f\:7528 ",
 Cell[BoxData[
  ButtonBox["@*",
   BaseStyle->"Link",
   ButtonData->"Composition"]], "InlineCodeText",ExpressionUUID->
  "b710b4af-ebb1-4453-85a9-fc82e36dd014"],
 " \:6216\:8005 ",
 Cell[BoxData[
  ButtonBox["/*",
   BaseStyle->"Link",
   ButtonData->"RightComposition"]], "InlineCodeText",ExpressionUUID->
  "65ba23ca-6d04-4903-8fce-c087c128dc6f"],
 "\:6765\:4f7f\:5b83\:7a0d\:5fae\:7cbe\:7b80\:4e00\:4e9b\:3002"
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369887381078825`*^9, 
  3.8369887587546873`*^9}},ExpressionUUID->"38ae046e-58bb-4b69-9aa4-\
e5a54bb4377b"],

Cell[TextData[{
 "\:6211\:4eec\:4e4b\:524d\:5df2\:7ecf\:770b\:5230\:ff0c\:6211\:4eec\:53ef\
\:4ee5\:628a ",
 Cell[BoxData[
  RowBox[{"f", "[", 
   RowBox[{"g", "[", "x", "]"}], "]"}]], "InlineCodeText",ExpressionUUID->
  "406f9eaf-ce83-496b-9198-fb7de0d87033"],
 " \:8fd9\:6837\:7684\:4e1c\:897f\:5199\:6210 ",
 Cell[BoxData[
  RowBox[{"f", 
   ButtonBox["@",
    BaseStyle->"Link",
    ButtonData->"Prefix"], "g", 
   ButtonBox["@",
    BaseStyle->"Link",
    ButtonData->"Prefix"], "x"}]], "InlineCodeText",ExpressionUUID->
  "da3bbdee-23dd-4c04-8cc7-cf9cdf7fe99d"],
 " \:6216\:8005 ",
 Cell[BoxData[
  RowBox[{"x", 
   ButtonBox["//",
    BaseStyle->"Link",
    ButtonData->"Postfix"], "g", 
   ButtonBox["//",
    BaseStyle->"Link",
    ButtonData->"Postfix"], "f"}]], "InlineCodeText",ExpressionUUID->
  "ad8d82af-1cad-4fee-9009-07b0cd6ea5d7"],
 "\:3002\:6211\:4eec\:4e5f\:53ef\:4ee5\:628a\:5b83\:5199\:6210 ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"g", "[", 
     ButtonBox["#",
      BaseStyle->"Link",
      ButtonData->"Slot"], "]"}], "]"}], 
   RowBox[{
    ButtonBox["&",
     BaseStyle->"Link",
     ButtonData->"Function"], "[", "x", "]"}]}]], "InlineCodeText",
  ExpressionUUID->"0c36d3a7-0027-450b-95aa-4400b0584615"],
 "\:3002\:4f46\:662f ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"g", "[", 
     ButtonBox["#",
      BaseStyle->"Link",
      ButtonData->"Slot"], "]"}], "]"}], 
   ButtonBox["&",
    BaseStyle->"Link",
    ButtonData->"Function"]}]], "InlineCodeText",ExpressionUUID->
  "08d771b8-c960-44ef-8190-a06f762f0a78"],
 " \:5462\:ff1f\:6709\:6ca1\:6709\:4e00\:79cd\:7b80\:77ed\:7684\:5199\:6cd5\
\:5462\:ff1f\:7b54\:6848\:662f\:6709\:7684\:ff0c\:4f7f\:7528",
 StyleBox["\:51fd\:6570\:590d\:5408\:8fd0\:7b97\:7b26",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  ButtonBox["@*",
   BaseStyle->"Link",
   ButtonData->"Composition"]], "InlineCodeText",
  FontWeight->"Plain",ExpressionUUID->
  "1fdfbcfe-41cf-4697-92b6-647bccdd428a"],
 " \:548c ",
 Cell[BoxData[
  ButtonBox["/*",
   BaseStyle->"Link",
   ButtonData->"RightComposition"]], "InlineCodeText",
  FontWeight->"Plain",ExpressionUUID->
  "717634f2-a0c0-4eb2-a615-bd5034186596"],
 "\:3002"
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369887675189915`*^9, 3.8369888081628532`*^9}, {
   3.8369888386826687`*^9, 3.8369888862291393`*^9}, 3.8369889771505127`*^9},
 CellTags->"i:23",ExpressionUUID->"288f8536-7358-4568-8fb4-f95e21169494"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"f", 
   ButtonBox["@*",
    BaseStyle->"Link",
    ButtonData->"Composition"], "g", 
   ButtonBox["@*",
    BaseStyle->"Link",
    ButtonData->"Composition"], "h"}]], "InlineCode",ExpressionUUID->
  "43d824a5-3a4b-496b-9e7c-7e1724fa62f6"],
 " \:8868\:793a\:4ece\:53f3\:5411\:5de6\:5e94\:7528\:51fd\:6570\:7684\:7ec4\
\:5408\:ff1a"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836988900037754*^9, 3.8369889177546234`*^9}},
 CellTags->"i:24",ExpressionUUID->"b4cb821e-1a4b-4750-a627-6850dfc4fe8d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"f", "@*", "g", "@*", "h"}], ")"}], "[", "x", "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[46]:=",ExpressionUUID->"edfc5a42-83bb-423b-bad7-bacc7ff18bff"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"g", "[", 
   RowBox[{"h", "[", "x", "]"}], "]"}], "]"}]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[46]=",ExpressionUUID->"80079c24-2584-4bff-906f-19dadbeab20a"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"h", 
   ButtonBox["/*",
    BaseStyle->"Link",
    ButtonData->"RightComposition"], "g", 
   ButtonBox["/*",
    BaseStyle->"Link",
    ButtonData->"RightComposition"], "f"}]], "InlineCode",ExpressionUUID->
  "ee53128b-1fcb-4942-abc6-2684b47b055b"],
 " \:8868\:793a\:4ece\:5de6\:5411\:53f3\:5e94\:7528\:51fd\:6570\:7684\:7ec4\
\:5408\:ff1a"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836988938349497*^9, 3.8369889444959173`*^9}},
 CellTags->"i:25",ExpressionUUID->"74081cda-5de2-4dcc-9dbb-bb3422ee6b30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"h", "/*", "g", "/*", "f"}], ")"}], "[", "x", "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[47]:=",ExpressionUUID->"bc5b47dc-e519-4fd8-9686-7eb602e25e67"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"g", "[", 
   RowBox[{"h", "[", "x", "]"}], "]"}], "]"}]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[47]=",ExpressionUUID->"34758873-4631-46bf-aea5-8787411c5c7e"]
}, Open  ]],

Cell[TextData[{
 "\:4e0b\:9762\:662f\:4f7f\:7528 ",
 Cell[BoxData[
  ButtonBox["@*",
   BaseStyle->"Link",
   ButtonData->"Composition"]], "InlineCode",ExpressionUUID->
  "1fcd5491-4444-413a-9003-b3824753c4a1"],
 " \:6765\:91cd\:5199\:7684\:524d\:9762\:7684\:4ee3\:7801\:ff1a"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836988967907076*^9, 
  3.8369890016905622`*^9}},ExpressionUUID->"dde5874c-c7b9-4644-894a-\
d1cecb717ad8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "[", 
  RowBox[{
   RowBox[{"WordCloud", "@*", "Association", "@*", "Values"}], ",", 
   "\"\<Moons\>\"", ",", "All", ",", "\"\<Mass\>\""}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[48]:=",ExpressionUUID->"139a0aa5-709d-4ec2-8adc-c2992015f5dc"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     StyleBox["\<\"Ganymede\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.2046783625730994],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}], InsetBox[
     StyleBox["\<\"Titan\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.2046783625730994],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0., 43.}], InsetBox[
     StyleBox["\<\"Callisto\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.15662098889738937`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {0., -52.}], 
    InsetBox[
     StyleBox["\<\"Moon\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.116229548295786],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {43., 77.}], 
    InsetBox[
     StyleBox["\<\"Europa\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.086065561799023],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {0., -85.}], 
    InsetBox[
     StyleBox["\<\"Io\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.13498580694136814`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-82., 36.}], 
    InsetBox[
     StyleBox["\<\"Triton\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.05457481638507435],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-30., 84.}], 
    InsetBox[
     StyleBox["\<\"Desdemona\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923997720433354],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.6361597700445392, 0.7170733077827265, 0.]], {98., -29.}], InsetBox[
     StyleBox["\<\"Prometheus\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923998714034319],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.6536293927965667, 0.37163285420200276`, 
        0.6534265180085832]], {-14., -102.}], InsetBox[
     StyleBox["\<\"Epimetheus\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02924038883901905],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.37977756485605163`, 0.715, 0.3025558265468435]], {0., 103.}], 
    InsetBox[
     StyleBox["\<\"S/2007 S2\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766241757705`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8774935098648088, 0.34000129802703827`, 
        0.2750108168919853]], {-73., -76.}], InsetBox[
     StyleBox["\<\"Enceladus\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02936769218837668],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.838355547812947, 0.44746667828057946`, 
        0.0208888695323676]], {73., -76.}], InsetBox[
     StyleBox["\<\"Eurydome\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766117357093`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8949268664259606, 0.5032845776173072, 
        0.05843417978336459]], {99., 39.}], InsetBox[
     StyleBox["\<\"Hermippe\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766170585716`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.7042770479220728, 0.358, 0.5530353108891188]], {51., 97.}], 
    InsetBox[
     StyleBox["\<\"Harpalyke\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766206071466`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.3383114092015346, 0.5643508726387724, 
        0.8209736910418415]], {98., 51.}], InsetBox[
     StyleBox["\<\"Amalthea\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029242214580792302`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8613800418100862, 0.48092002787339083`, 
        0.02824203762907758]], {-51., 99.}], InsetBox[
     StyleBox["\<\"Chaldene\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923976615284284],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8633598745697435, 0.40996018814538476`, 
        0.08339968642435877]], {44., -103.}], InsetBox[
     StyleBox["\<\"Mundilfari\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766312528708`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9840111653093676, 0.677555826546838, 
        0.04316985366470745]], {-71., -88.}], InsetBox[
     StyleBox["\<\"Megaclite\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766312528708`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.4567336004533182, 0.4884598397280091, 0.85]], {-109., -29.}], 
    InsetBox[
     StyleBox["\<\"Themisto\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923976688030069],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.922066817647527, 0.5213778784316846, 
        0.08286013588277422]], {71., -88.}], InsetBox[
     StyleBox["\<\"Callirrhoe\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239767093215185`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9307395679624266, 0.7498043964402695, 0.]], {-78., 82.}], InsetBox[
     StyleBox["\<\"Stephano\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923977316127822],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.6319174318193065, 0.38429816477207124`, 
        0.7077064204517338]], {0., -114.}], InsetBox[
     StyleBox["\<\"Thalassa\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029240209635987863`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8564488486273256, 0.42032672705901153`, 
        0.06612212156831418]], {107., -41.}], InsetBox[
     StyleBox["\<\"Adrastea\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239774935565656`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.19193353076984873`, 0.681453175384121, 
        0.6453202369238185]], {0., 115.}], InsetBox[
     StyleBox["\<\"Pasiphae\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029240120921615983`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8168067340273636, 0.3521386531945273, 
        0.3761554432877274]], {-111., -43.}], InsetBox[
     StyleBox["\<\"Praxidike\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923976657867183],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.6670481226429111, 0.3638052617916352, 
        0.6198796933927223]], {-65., -100.}], InsetBox[
     StyleBox["\<\"Prospero\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923979090415259],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.47929071933511125`, 0.715, 0.1759027208462221]], {43., 112.}], 
    InsetBox[
     StyleBox["\<\"Cressida\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02924017237595167],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9810598048862722, 0.7553955338762525, 0.]], {-101., 64.}], InsetBox[
     StyleBox["\<\"Hyperion\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02924633092764745],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.5407932311309059, 0.715, 0.09762679674248334]], {109., -53.}], 
    InsetBox[
     StyleBox["\<\"Iapetus\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.03137778242639052],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-43., -113.}], InsetBox[
     StyleBox["\<\"Oberon\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.03280785810106538],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-48., 111.}], 
    InsetBox[
     StyleBox["\<\"Autonoe\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766170585716`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9603267270590103, 0.5591336352950514, 
        0.10711783694067224`]], {-109., -55.}], InsetBox[
     StyleBox["\<\"Cordelia\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239819292751594`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8493197142977551, 0.7407577460330839, 0.]], {43., -115.}], InsetBox[
     StyleBox["\<\"Lysithea\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239840584200847`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8342400905885153, 0.4628267270590103, 
        0.0038160815296638794`]], {2., -126.}], InsetBox[
     StyleBox["\<\"Rosalind\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029240067692992856`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.23716678280579248`, 0.645266573755366, 
        0.699600139366951]], {6., 126.}], InsetBox[
     StyleBox["\<\"Titania\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.03341466440471154],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[1, 0.75, 0]], {-119., 39.}], InsetBox[
     StyleBox["\<\"Orthosie\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766081871343`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9107287510704583, 0.33890687339431275`, 
        0.20182187767614543`]], {-40., 123.}], InsetBox[
     StyleBox["\<\"Taygete\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766259300085`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.7989994773739094, 0.735166608597101, 0.]], {114., 65.}], InsetBox[
     StyleBox["\<\"Suttungr\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766312528708`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.7658565873730018, 0.358, 0.4582975578876895]], {88., -99.}], InsetBox[
     StyleBox["\<\"Trinculo\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766951272186`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.26512246998569167`, 0.6229020240114467, 
        0.73314696398283]], {48., 122.}], InsetBox[
     StyleBox["\<\"Calypso\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923977032241832],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.38354466123747527`, 0.5323732032575149, 0.85]], {95., 95.}], InsetBox[
     StyleBox["\<\"Pandora\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239942605728503`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9038177251280404, 0.3492734123079395, 
        0.18454431282010084`]], {-42., -126.}], InsetBox[
     StyleBox["\<\"Sycorax\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02924613575602932],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8857244243136628, 0.3764133635295058, 
        0.1393110607841571]], {-95., 94.}], InsetBox[
     StyleBox["\<\"Miranda\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02931783471138119],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.5833680111493557, 0.4126186601628758, 
        0.8290799721266107]], {-118., -67.}], InsetBox[
     StyleBox["\<\"Euanthe\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766117357093`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.2198892179497479, 0.6590886256402017, 
        0.6788670615396974]], {118., -67.}], InsetBox[
     StyleBox["\<\"Erinome\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766117357093`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8064401951137368, 0.3542119609772526, 
        0.39343300814377197`]], {-120., 51.}], InsetBox[
     StyleBox["\<\"Setebos\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923979090415259],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8745421494417032, 0.39318677583744527`, 
        0.11135537360425793`]], {85., 107.}], InsetBox[
     StyleBox["\<\"Despina\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029242250066541055`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.16397784358994957`, 0.7038177251280403, 
        0.6117734123079395]], {113., 77.}], InsetBox[
     StyleBox["\<\"Euporie\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766081871343`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.6453361616656581, 0.37647057236169945`, 
        0.6741595958358548]], {-81., -112.}], InsetBox[
     StyleBox["\<\"Ananke\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239801549877223`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.3103557220216354, 0.5867154223826917, 
        0.7874268664259625]], {-92., 105.}], InsetBox[
     StyleBox["\<\"Siarnaq\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239812195601848`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8607200975568693, 0.34335598048862614`, 
        0.30296650407188447`]], {86., -111.}], InsetBox[
     StyleBox["\<\"Ophelia\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239829938476222`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.596786740995709, 0.404791067752503, 
        0.7955331475107271]], {-116., -80.}], InsetBox[
     StyleBox["\<\"Phoebe\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029249579647945622`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9324333565611593, 0.5282889043741062, 
        0.0921900209050434]], {117., -79.}], InsetBox[
     StyleBox["\<\"Thyone\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766170585716`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.4177882075393331, 0.715, 0.25417864494993975`]], {-120., 77.}], 
    InsetBox[
     StyleBox["\<\"Telesto\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923977458070817],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8781534541180211, 0.4921023027453475, 
        0.04333810870621905]], {-105., -98.}], InsetBox[
     StyleBox["\<\"Paaliaq\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239775822709375`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.7896667828057927, 0.3575666434388414, 
        0.4213886953236787]], {-87., 117.}], InsetBox[
     StyleBox["\<\"Albiorix\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923979090415259],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.6897400905885174, 0.358, 0.5753998606330502]], {86., 119.}], InsetBox[
     StyleBox["\<\"Belinda\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02924018834453861],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.5472001045252132, 0.43417993728487203`, 0.85]], {141., 38.}], 
    InsetBox[
     StyleBox["\<\"Galatea\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029244201782722377`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9874666782805795, 0.6948333914028977, 
        0.033839968642435214`]], {145., -29.}], InsetBox[
     StyleBox["\<\"Himalia\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029247750357597496`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.6753413537738198, 0.3589675436319385, 
        0.5991466155654507]], {82., -123.}], InsetBox[
     StyleBox["\<\"Proteus\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029299382122030548`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8996399512215667, 0.7463488834690629, 0.]], {-82., -124.}], 
    InsetBox[
     StyleBox["\<\"Thrymr\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766312528708`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.15725938678540247`, 0.715, 0.5857607804549424]], {93., 25.}], 
    InsetBox[
     StyleBox["\<\"Erriapo\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923976696901506],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8335801463353031, 0.3487839707329394, 
        0.3481997561078282]], {140., 51.}], InsetBox[
     StyleBox["\<\"Deimos\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923976780293016],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.845266573755366, 0.437100139366951, 
        0.03816643438841502]], {-150., -29.}], InsetBox[
     StyleBox["\<\"Phobos\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923977876447795],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9930578157165594, 0.7227890785827968, 
        0.01874389756528967]], {-140., 63.}], InsetBox[
     StyleBox["\<\"Caliban\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029240635464972874`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9637822400302223, 0.5764112001511111, 
        0.0977879519184]], {148., -41.}], InsetBox[
     StyleBox["\<\"Larissa\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02924562121267242],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.47401116530937026`, 0.47809330081437784`, 0.85]], {126., -91.}], 
    InsetBox[
     StyleBox["\<\"Umbriel\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.030627258840301846`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9728288904374106, 0.621644452187053, 
        0.07336199581899142]], {150., -53.}], InsetBox[
     StyleBox["\<\"Tarvos\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239769257845858`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.7277983389807635, 0.358, 0.5168487092603637]], {-147., -52.}], 
    InsetBox[
     StyleBox["\<\"Tethys\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029970949917147712`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.28026441037696703`, 0.715, 0.4292089322474965]], {133., 88.}], 
    InsetBox[
     StyleBox["\<\"Iocaste\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923976629478584],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8510135028964549, 0.47400900193096995`, 
        0.018912152606809424`]], {-132., 89.}], InsetBox[
     StyleBox["\<\"Helene\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923979622701491],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9492067688690977, 0.5394711792460651, 
        0.10728609198218791`]], {-117., -109.}], InsetBox[
     StyleBox["\<\"Sinope\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239854778500347`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.2187618985811806, 0.715, 0.5074848563512248]], {122., 105.}], 
    InsetBox[
     StyleBox["\<\"Bianca\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239876069949596`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.7513196300394465, 0.358, 0.48066210763162087`]], {125., -103.}], 
    InsetBox[
     StyleBox["\<\"Nereid\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02927631638534224],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.28240003484173815`, 0.6090799721266095, 
        0.7538800418100857]], {149., 62.}], InsetBox[
     StyleBox["\<\"Mimas\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029284655536298783`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8439466852489265, 0.3467106629502147, 
        0.3309221912517893]], {-132., 100.}], InsetBox[
     StyleBox["\<\"Rhea\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.031973410719180036`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[0.571589, 0.586483, 0.]], {-154., 41.}], InsetBox[
     StyleBox["\<\"Isonoe\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923976615284284],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.529922539669161, 0.44454647619850335`, 0.85]], {-154., -62.}], 
    InsetBox[
     StyleBox["\<\"Kalyke\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923976629478584],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.6102054708420535, 0.39696347534213544`, 
        0.7619863228948663]], {-140., -92.}], InsetBox[
     StyleBox["\<\"Carme\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239922201422974`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.428777913273419, 0.5052332520359486, 0.85]], {122., -114.}], InsetBox[
     StyleBox["\<\"Thebe\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029241540351566033`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8878600487784333, 0.33792799024431336`, 
        0.2577332520359445]], {121., 116.}], InsetBox[
     StyleBox["\<\"Janus\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02924201231202442],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.6184987019729621, 0.39212575718243875`, 
        0.7412532450675947]], {154., -66.}], InsetBox[
     StyleBox["\<\"Skathi\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923976643672883],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8926354502560807, 0.366046824615879, 
        0.15658862564020168`]], {-120., 116.}], InsetBox[
     StyleBox["\<\"Portia\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029241756814633414`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.7678998606330495, 0.7317110956258943, 0.]], {-116., -121.}], InsetBox[
     StyleBox["\<\"Kiviuq\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239769967560832`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.969373377466199, 0.6043668873309952, 
        0.08269188084126262]], {-150., -76.}], InsetBox[
     StyleBox["\<\"Naiad\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239996721495354`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9052934053395919, 0.510195603559728, 
        0.06776406480563275]], {-153., 75.}], InsetBox[
     StyleBox["\<\"Aitne\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766117357093`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9986489531525362, 0.7507447657626809, 
        0.0036478264881522893`]], {28., -27.}], InsetBox[
     StyleBox["\<\"Juliet\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029240426099055243`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.7132613816472081, 0.358, 0.5392132590042952]], {150., -78.}], 
    InsetBox[
     StyleBox["\<\"Elara\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029240795150842255`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.35558897405758294`, 0.5505288207539337, 
        0.8417067688690995]], {114., -126.}], InsetBox[
     StyleBox["\<\"Dione\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.030537000838353076`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.736782672705901, 0.358, 0.5030266573755369]], {154., 97.}], 
    InsetBox[
     StyleBox["\<\"Atlas\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239768548130884`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.31827505306025683`, 0.715, 0.3808317506505822]], {154., 74.}], 
    InsetBox[
     StyleBox["\<\"Leda\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239779016426763`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.5019668524892619, 0.46131988850644284`, 0.85]], {157., -90.}], 
    InsetBox[
     StyleBox["\<\"Metis\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239908007123474`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9784200278733908, 0.649600139366954, 
        0.058265924741844846`]], {-148., -106.}], InsetBox[
     StyleBox["\<\"Puck\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.0292431922131704],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.7748409210981391, 0.358, 0.4444755060028629]], {155., -103.}], 
    InsetBox[
     StyleBox["\<\"Narvi\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923976647221458],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.5788038738141875, 0.715, 0.049249615145579635`]], {-149., 112.}], 
    InsetBox[
     StyleBox["\<\"Ijiraq\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239767483558415`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.5750747800184488, 0.4174563783225715, 
        0.8498130499538777]], {-143., -118.}], InsetBox[
     StyleBox["\<\"Ariel\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.030841947620246835`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.40082222609352647`, 0.5220066643438841, 0.85]], {152., 107.}], 
    InsetBox[
     StyleBox["\<\"Ymir\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923977191927701],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9046334610863751, 0.334573307782725, 
        0.22977756485604156`]], {137., 125.}], InsetBox[
     StyleBox["\<\"Kale\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766081871343`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.6672593867853922, 0.7205288207539324, 0.]], {140., -126.}], 
    InsetBox[
     StyleBox["\<\"Pan\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923977191927701],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.7175796237092107, 0.7261199581899123, 0.]], {-160., 87.}]}},
  Background->GrayLevel[0, 0],
  ImageSize->{199.73828125, 151.},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-171.5, 170.5}, {-133.5, 133.5}}]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[48]=",ExpressionUUID->"cb99eff0-73a7-44dd-821f-df4c178567be"]
}, Open  ]],

Cell[TextData[{
 "\:4f7f\:7528\:53f3\:590d\:5408 ",
 Cell[BoxData[
  ButtonBox["/*",
   BaseStyle->"Link",
   ButtonData->"RightComposition"]], "InlineCode",ExpressionUUID->
  "50d9e482-3899-4948-85dc-2a49cd10269c"],
 "\:ff1a"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836989018649762*^9, 3.836989024354743*^9}},
 CellTags->"p:281",ExpressionUUID->"1baa224e-4c7a-4cc5-b373-e05a790fda85"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "[", 
  RowBox[{
   RowBox[{"Values", "/*", "Association", "/*", "WordCloud"}], ",", 
   "\"\<Moons\>\"", ",", "All", ",", "\"\<Mass\>\""}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[49]:=",ExpressionUUID->"b91f9cd3-713b-49b4-b780-894513fbeea5"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     StyleBox["\<\"Ganymede\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.2046783625730994],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}], InsetBox[
     StyleBox["\<\"Titan\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.2046783625730994],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0., 43.}], InsetBox[
     StyleBox["\<\"Callisto\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.15662098889738937`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {0., -52.}], 
    InsetBox[
     StyleBox["\<\"Moon\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.116229548295786],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {43., 77.}], 
    InsetBox[
     StyleBox["\<\"Europa\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.086065561799023],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {0., -85.}], 
    InsetBox[
     StyleBox["\<\"Io\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.13498580694136814`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-82., 36.}], 
    InsetBox[
     StyleBox["\<\"Triton\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.05457481638507435],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-30., 84.}], 
    InsetBox[
     StyleBox["\<\"Desdemona\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923997720433354],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.6361597700445392, 0.7170733077827265, 0.]], {98., -29.}], InsetBox[
     StyleBox["\<\"Prometheus\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923998714034319],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.6536293927965667, 0.37163285420200276`, 
        0.6534265180085832]], {-14., -102.}], InsetBox[
     StyleBox["\<\"Epimetheus\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02924038883901905],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.37977756485605163`, 0.715, 0.3025558265468435]], {0., 103.}], 
    InsetBox[
     StyleBox["\<\"S/2007 S2\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766241757705`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8774935098648088, 0.34000129802703827`, 
        0.2750108168919853]], {-73., -76.}], InsetBox[
     StyleBox["\<\"Enceladus\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02936769218837668],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.838355547812947, 0.44746667828057946`, 
        0.0208888695323676]], {73., -76.}], InsetBox[
     StyleBox["\<\"Eurydome\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766117357093`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8949268664259606, 0.5032845776173072, 
        0.05843417978336459]], {99., 39.}], InsetBox[
     StyleBox["\<\"Hermippe\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766170585716`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.7042770479220728, 0.358, 0.5530353108891188]], {51., 97.}], 
    InsetBox[
     StyleBox["\<\"Harpalyke\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766206071466`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.3383114092015346, 0.5643508726387724, 
        0.8209736910418415]], {98., 51.}], InsetBox[
     StyleBox["\<\"Amalthea\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029242214580792302`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8613800418100862, 0.48092002787339083`, 
        0.02824203762907758]], {-51., 99.}], InsetBox[
     StyleBox["\<\"Chaldene\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923976615284284],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8633598745697435, 0.40996018814538476`, 
        0.08339968642435877]], {44., -103.}], InsetBox[
     StyleBox["\<\"Mundilfari\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766312528708`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9840111653093676, 0.677555826546838, 
        0.04316985366470745]], {-71., -88.}], InsetBox[
     StyleBox["\<\"Megaclite\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766312528708`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.4567336004533182, 0.4884598397280091, 0.85]], {-109., -29.}], 
    InsetBox[
     StyleBox["\<\"Themisto\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923976688030069],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.922066817647527, 0.5213778784316846, 
        0.08286013588277422]], {71., -88.}], InsetBox[
     StyleBox["\<\"Callirrhoe\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239767093215185`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9307395679624266, 0.7498043964402695, 0.]], {-78., 82.}], InsetBox[
     StyleBox["\<\"Stephano\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923977316127822],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.6319174318193065, 0.38429816477207124`, 
        0.7077064204517338]], {0., -114.}], InsetBox[
     StyleBox["\<\"Thalassa\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029240209635987863`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8564488486273256, 0.42032672705901153`, 
        0.06612212156831418]], {107., -41.}], InsetBox[
     StyleBox["\<\"Adrastea\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239774935565656`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.19193353076984873`, 0.681453175384121, 
        0.6453202369238185]], {0., 115.}], InsetBox[
     StyleBox["\<\"Pasiphae\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029240120921615983`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8168067340273636, 0.3521386531945273, 
        0.3761554432877274]], {-111., -43.}], InsetBox[
     StyleBox["\<\"Praxidike\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923976657867183],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.6670481226429111, 0.3638052617916352, 
        0.6198796933927223]], {-65., -100.}], InsetBox[
     StyleBox["\<\"Prospero\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923979090415259],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.47929071933511125`, 0.715, 0.1759027208462221]], {43., 112.}], 
    InsetBox[
     StyleBox["\<\"Cressida\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02924017237595167],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9810598048862722, 0.7553955338762525, 0.]], {-101., 64.}], InsetBox[
     StyleBox["\<\"Hyperion\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02924633092764745],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.5407932311309059, 0.715, 0.09762679674248334]], {109., -53.}], 
    InsetBox[
     StyleBox["\<\"Iapetus\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.03137778242639052],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-43., -113.}], InsetBox[
     StyleBox["\<\"Oberon\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.03280785810106538],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-48., 111.}], 
    InsetBox[
     StyleBox["\<\"Autonoe\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766170585716`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9603267270590103, 0.5591336352950514, 
        0.10711783694067224`]], {-109., -55.}], InsetBox[
     StyleBox["\<\"Cordelia\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239819292751594`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8493197142977551, 0.7407577460330839, 0.]], {43., -115.}], InsetBox[
     StyleBox["\<\"Lysithea\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239840584200847`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8342400905885153, 0.4628267270590103, 
        0.0038160815296638794`]], {2., -126.}], InsetBox[
     StyleBox["\<\"Rosalind\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029240067692992856`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.23716678280579248`, 0.645266573755366, 
        0.699600139366951]], {6., 126.}], InsetBox[
     StyleBox["\<\"Titania\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.03341466440471154],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[1, 0.75, 0]], {-119., 39.}], InsetBox[
     StyleBox["\<\"Orthosie\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766081871343`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9107287510704583, 0.33890687339431275`, 
        0.20182187767614543`]], {-40., 123.}], InsetBox[
     StyleBox["\<\"Taygete\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766259300085`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.7989994773739094, 0.735166608597101, 0.]], {114., 65.}], InsetBox[
     StyleBox["\<\"Suttungr\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766312528708`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.7658565873730018, 0.358, 0.4582975578876895]], {88., -99.}], InsetBox[
     StyleBox["\<\"Trinculo\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766951272186`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.26512246998569167`, 0.6229020240114467, 
        0.73314696398283]], {48., 122.}], InsetBox[
     StyleBox["\<\"Calypso\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923977032241832],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.38354466123747527`, 0.5323732032575149, 0.85]], {95., 95.}], InsetBox[
     StyleBox["\<\"Pandora\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239942605728503`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9038177251280404, 0.3492734123079395, 
        0.18454431282010084`]], {-42., -126.}], InsetBox[
     StyleBox["\<\"Sycorax\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02924613575602932],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8857244243136628, 0.3764133635295058, 
        0.1393110607841571]], {-95., 94.}], InsetBox[
     StyleBox["\<\"Miranda\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02931783471138119],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.5833680111493557, 0.4126186601628758, 
        0.8290799721266107]], {-118., -67.}], InsetBox[
     StyleBox["\<\"Euanthe\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766117357093`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.2198892179497479, 0.6590886256402017, 
        0.6788670615396974]], {118., -67.}], InsetBox[
     StyleBox["\<\"Erinome\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766117357093`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8064401951137368, 0.3542119609772526, 
        0.39343300814377197`]], {-120., 51.}], InsetBox[
     StyleBox["\<\"Setebos\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923979090415259],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8745421494417032, 0.39318677583744527`, 
        0.11135537360425793`]], {85., 107.}], InsetBox[
     StyleBox["\<\"Despina\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029242250066541055`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.16397784358994957`, 0.7038177251280403, 
        0.6117734123079395]], {113., 77.}], InsetBox[
     StyleBox["\<\"Euporie\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766081871343`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.6453361616656581, 0.37647057236169945`, 
        0.6741595958358548]], {-81., -112.}], InsetBox[
     StyleBox["\<\"Ananke\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239801549877223`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.3103557220216354, 0.5867154223826917, 
        0.7874268664259625]], {-92., 105.}], InsetBox[
     StyleBox["\<\"Siarnaq\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239812195601848`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8607200975568693, 0.34335598048862614`, 
        0.30296650407188447`]], {86., -111.}], InsetBox[
     StyleBox["\<\"Ophelia\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239829938476222`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.596786740995709, 0.404791067752503, 
        0.7955331475107271]], {-116., -80.}], InsetBox[
     StyleBox["\<\"Phoebe\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029249579647945622`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9324333565611593, 0.5282889043741062, 
        0.0921900209050434]], {117., -79.}], InsetBox[
     StyleBox["\<\"Thyone\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766170585716`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.4177882075393331, 0.715, 0.25417864494993975`]], {-120., 77.}], 
    InsetBox[
     StyleBox["\<\"Telesto\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923977458070817],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8781534541180211, 0.4921023027453475, 
        0.04333810870621905]], {-105., -98.}], InsetBox[
     StyleBox["\<\"Paaliaq\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239775822709375`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.7896667828057927, 0.3575666434388414, 
        0.4213886953236787]], {-87., 117.}], InsetBox[
     StyleBox["\<\"Albiorix\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923979090415259],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.6897400905885174, 0.358, 0.5753998606330502]], {86., 119.}], InsetBox[
     StyleBox["\<\"Belinda\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02924018834453861],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.5472001045252132, 0.43417993728487203`, 0.85]], {141., 38.}], 
    InsetBox[
     StyleBox["\<\"Galatea\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029244201782722377`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9874666782805795, 0.6948333914028977, 
        0.033839968642435214`]], {145., -29.}], InsetBox[
     StyleBox["\<\"Himalia\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029247750357597496`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.6753413537738198, 0.3589675436319385, 
        0.5991466155654507]], {82., -123.}], InsetBox[
     StyleBox["\<\"Proteus\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029299382122030548`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8996399512215667, 0.7463488834690629, 0.]], {-82., -124.}], 
    InsetBox[
     StyleBox["\<\"Thrymr\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766312528708`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.15725938678540247`, 0.715, 0.5857607804549424]], {93., 25.}], 
    InsetBox[
     StyleBox["\<\"Erriapo\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923976696901506],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8335801463353031, 0.3487839707329394, 
        0.3481997561078282]], {140., 51.}], InsetBox[
     StyleBox["\<\"Deimos\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923976780293016],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.845266573755366, 0.437100139366951, 
        0.03816643438841502]], {-150., -29.}], InsetBox[
     StyleBox["\<\"Phobos\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923977876447795],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9930578157165594, 0.7227890785827968, 
        0.01874389756528967]], {-140., 63.}], InsetBox[
     StyleBox["\<\"Caliban\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029240635464972874`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9637822400302223, 0.5764112001511111, 
        0.0977879519184]], {148., -41.}], InsetBox[
     StyleBox["\<\"Larissa\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02924562121267242],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.47401116530937026`, 0.47809330081437784`, 0.85]], {126., -91.}], 
    InsetBox[
     StyleBox["\<\"Umbriel\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.030627258840301846`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9728288904374106, 0.621644452187053, 
        0.07336199581899142]], {150., -53.}], InsetBox[
     StyleBox["\<\"Tarvos\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239769257845858`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.7277983389807635, 0.358, 0.5168487092603637]], {-147., -52.}], 
    InsetBox[
     StyleBox["\<\"Tethys\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029970949917147712`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.28026441037696703`, 0.715, 0.4292089322474965]], {133., 88.}], 
    InsetBox[
     StyleBox["\<\"Iocaste\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923976629478584],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8510135028964549, 0.47400900193096995`, 
        0.018912152606809424`]], {-132., 89.}], InsetBox[
     StyleBox["\<\"Helene\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923979622701491],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9492067688690977, 0.5394711792460651, 
        0.10728609198218791`]], {-117., -109.}], InsetBox[
     StyleBox["\<\"Sinope\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239854778500347`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.2187618985811806, 0.715, 0.5074848563512248]], {122., 105.}], 
    InsetBox[
     StyleBox["\<\"Bianca\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239876069949596`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.7513196300394465, 0.358, 0.48066210763162087`]], {125., -103.}], 
    InsetBox[
     StyleBox["\<\"Nereid\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02927631638534224],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.28240003484173815`, 0.6090799721266095, 
        0.7538800418100857]], {149., 62.}], InsetBox[
     StyleBox["\<\"Mimas\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029284655536298783`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8439466852489265, 0.3467106629502147, 
        0.3309221912517893]], {-132., 100.}], InsetBox[
     StyleBox["\<\"Rhea\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.031973410719180036`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[0.571589, 0.586483, 0.]], {-154., 41.}], InsetBox[
     StyleBox["\<\"Isonoe\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923976615284284],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.529922539669161, 0.44454647619850335`, 0.85]], {-154., -62.}], 
    InsetBox[
     StyleBox["\<\"Kalyke\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923976629478584],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.6102054708420535, 0.39696347534213544`, 
        0.7619863228948663]], {-140., -92.}], InsetBox[
     StyleBox["\<\"Carme\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239922201422974`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.428777913273419, 0.5052332520359486, 0.85]], {122., -114.}], InsetBox[
     StyleBox["\<\"Thebe\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029241540351566033`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8878600487784333, 0.33792799024431336`, 
        0.2577332520359445]], {121., 116.}], InsetBox[
     StyleBox["\<\"Janus\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02924201231202442],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.6184987019729621, 0.39212575718243875`, 
        0.7412532450675947]], {154., -66.}], InsetBox[
     StyleBox["\<\"Skathi\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923976643672883],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.8926354502560807, 0.366046824615879, 
        0.15658862564020168`]], {-120., 116.}], InsetBox[
     StyleBox["\<\"Portia\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029241756814633414`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.7678998606330495, 0.7317110956258943, 0.]], {-116., -121.}], InsetBox[
     StyleBox["\<\"Kiviuq\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239769967560832`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.969373377466199, 0.6043668873309952, 
        0.08269188084126262]], {-150., -76.}], InsetBox[
     StyleBox["\<\"Naiad\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239996721495354`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9052934053395919, 0.510195603559728, 
        0.06776406480563275]], {-153., 75.}], InsetBox[
     StyleBox["\<\"Aitne\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766117357093`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9986489531525362, 0.7507447657626809, 
        0.0036478264881522893`]], {28., -27.}], InsetBox[
     StyleBox["\<\"Juliet\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029240426099055243`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.7132613816472081, 0.358, 0.5392132590042952]], {150., -78.}], 
    InsetBox[
     StyleBox["\<\"Elara\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029240795150842255`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.35558897405758294`, 0.5505288207539337, 
        0.8417067688690995]], {114., -126.}], InsetBox[
     StyleBox["\<\"Dione\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.030537000838353076`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.736782672705901, 0.358, 0.5030266573755369]], {154., 97.}], 
    InsetBox[
     StyleBox["\<\"Atlas\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239768548130884`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.31827505306025683`, 0.715, 0.3808317506505822]], {154., 74.}], 
    InsetBox[
     StyleBox["\<\"Leda\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239779016426763`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.5019668524892619, 0.46131988850644284`, 0.85]], {157., -90.}], 
    InsetBox[
     StyleBox["\<\"Metis\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239908007123474`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9784200278733908, 0.649600139366954, 
        0.058265924741844846`]], {-148., -106.}], InsetBox[
     StyleBox["\<\"Puck\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.0292431922131704],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.7748409210981391, 0.358, 0.4444755060028629]], {155., -103.}], 
    InsetBox[
     StyleBox["\<\"Narvi\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923976647221458],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.5788038738141875, 0.715, 0.049249615145579635`]], {-149., 112.}], 
    InsetBox[
     StyleBox["\<\"Ijiraq\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239767483558415`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.5750747800184488, 0.4174563783225715, 
        0.8498130499538777]], {-143., -118.}], InsetBox[
     StyleBox["\<\"Ariel\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.030841947620246835`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.40082222609352647`, 0.5220066643438841, 0.85]], {152., 107.}], 
    InsetBox[
     StyleBox["\<\"Ymir\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923977191927701],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.9046334610863751, 0.334573307782725, 
        0.22977756485604156`]], {137., 125.}], InsetBox[
     StyleBox["\<\"Kale\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.029239766081871343`],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.6672593867853922, 0.7205288207539324, 0.]], {140., -126.}], 
    InsetBox[
     StyleBox["\<\"Pan\"\>",
      StripOnInput->False,
      FontFamily->"Helvetica",
      FontSize->Scaled[0.02923977191927701],
      FontWeight->Plain,
      FontSlant->Plain,
      FontTracking->"Plain",
      FontColor->RGBColor[
       0.7175796237092107, 0.7261199581899123, 0.]], {-160., 87.}]}},
  Background->GrayLevel[0, 0],
  ImageSize->{200.1953125, 154.},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-171.5, 170.5}, {-133.5, 133.5}}]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[49]=",ExpressionUUID->"da0a011c-c987-48b3-8a90-9d342c69e8ee"]
}, Open  ]],

Cell[TextData[{
 "\:4e3e\:6700\:540e\:4e00\:4e2a\:4f8b\:5b50\:ff0c\:8ba9\:6211\:4eec\:770b\
\:770b\:53e6\:4e00\:4e2a\:6570\:636e\:96c6\:ff0c\:8fd9\:6b21\:662f\:76f4\:63a5\
\:6765\:81ea ",
 ButtonBox["Wolfram \:6570\:636e\:5b58\:50a8\:5e93",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://datarepository.wolfram.com"], None},
  ButtonNote->"http://datarepository.wolfram.com"],
 "\:3002\:8fd9\:91cc\:6709\:4e00\:4e2a\:6765\:81ea\:5b58\:50a8\:5e93\:7684\
\:7f51\:9875(\:5173\:4e8e\:5927\:6d41\:661f)\:3002"
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836989035733954*^9, 
  3.836989082779491*^9}},ExpressionUUID->"7cc486ec-3457-4059-86b8-\
a0054ddce34e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvVl0XclxIKhZPuZzzpk5c+acPtPdcsuyVqsk2bKtxZYtWSIJktXqttu2
LLttj2W53d2lsexpH48sVXGpKiwsS7VIJvFAElxAEDvADVwAkAS4s1jcSQAE
sQOsvSwVq0otFd6byIx78+XN7ea9bwPACAbfebgvb2ZkRGRkRK7v/bNv/ru/
+B/f8573/M3/Ah//7k//7je/9a0//ft//7/CH7/7yN/8p2888vU/X/nI3379
G1//1q/+2f8EDz8GH93/83vew77nCAgICAgICAgICAgICAgICAgICAgICAgI
CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI
CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI
CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI
CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI
CAgICAgICAgICAgICAgICAgICJYgZLNZ5QsBAQEBAQEBAQEBAcGyB4yAlDho
eYdFxtplOcCX+/fvv/jii1NTU+Pj4xMTE+MEBAQEBAQEBAQEBATLAkSAMz09
DVEPxD62KOlBCAnlOv74xz8eHh4+ceLEkSNHjnI4duwYfIfPowQEBAQEBAQE
BAQEBMsLMNiBCAjioDfffLNywVm5QQl133777atXryJPzp07d/369Tt37kxN
Tc3MTM3NzczOTsMnISEhISEhISEhISHh8kCIdKamJsbGRq9du3Lu3JljHCAm
euedd4wR0zKGe/fu9ff39/X1vfDCC9PT07Ozs3NzcyIGpGCQkJCQkJCQkJCQ
kHB54Pw8hDvTeowDweGlS5cgJhoYGHjllVcwUFreISHWbmJi4ujRo0NDQ/AF
w0BgkcIcCgkJCQkJCQkJCQkJCZcBYmijhDz4ED4nJu6ePHkSosLJyclKh2ul
BQwGoZpHjhw5f/78zMyUI+ijeJCQkJCQkJCQkJCQcNmgLcCB59PTk2fOnDp6
9Ch8q3TQVlp47bXXoJpnz57FTYIyillU/KLPGBISEhISEhISEhISEi4/xAjo
7NnTx44de+ONNyodtJUK3n333cHBwRMnToiZQZoEJCQkJCQkJCQkJCQkBJye
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
giVUNUJCwtS4tOwYIaERV9Z0PPx4y7fru55pOsA2SszdY4HMHM0Ppj1PJrpz
BCJriAf/8gcHvrxp/4qnDgDil5UhrrDgShOuCDPxecvnuYJftuSv0OyTVeGo
EONfovwifLdVylZQTHr4lePKaBFG2hIR7C7XqA8rNc7Ecgm1aGX0y8ooJUWR
nSMrneAUqqUkcxSn/5S0mjo95WkCDlJtbVwXrq6rPo2iiKQWF5VaJ2q8KeSl
89lfIv75682hiFJIZt/86Ewko6TskvtKI7XioTETY30V86J0x7E8TIcro999
zKyRz3L6EpkdvQiZUYolKbC/M74iy9rWKayU+kr5i1HnS2Tlkgq0zOhgXQrn
rXQun/CafPK3idL4VuG1TsEHHwWwkmSyRT7aa+vxgzwtjTQuz31Vm/Z9e+uh
Z5oPi/smUmyHp3jQsnyUxYN/8ey+VbWdRqyqMaMtvTWf2g4jrrKgrdzVtV2J
6HHTX6x8RIJYPtjot6KFb3Z+FkcuyYi0Y7H0Suab+A5f8hnWdQHq+SfVB8xc
FFG4XhnfkikvCn+MzQQ/3endfM7/mVBPEuuhsVBXPpKtSKK3WvWT2R9/PnjK
MZZ7njXywmqVTpsg5GZlSFPXtbrOwAp4mFSfbTUqnP+2OjpSilbpL8d4+ZoY
6N8e05WbgH5OHjY6RB8u2bROL9fW34GqMJTKVZ4kUnK5R8Aa6W+58/FUHi9R
1nUJHZY/U+qPSobNZbLUxdJeFA7nee7Xvowy0pVEf5iCkxb+aBYbLJLd/liL
SOhH2YRVpRPj4Y/pxsHKUqvnbHk9mrP4s1h6njQfo2I4VMhW1qrabnjyDw0H
n93TK0KYFIEPxYPGiUIxP5jUXpVar+wxo8VueNixpLSVwp7YMZlfamopTn4W
SV4p7INOXor8bfFg6nop6pGiXiXlm7/cZUw62hBLT2xcLOIC/IJdoSueslIS
7+cUyGfPhxH1SNCuY9qvZ/qkfHD4ewanujr5eJGkCYnHsiyapsvdbu3T64Nn
IFZcNTPWMV1LdGPSiElmbIp+ymFkcJAhVj+Vot1FJOAktzwKusYHiuH/+0hz
TTQMLLqCJRKcoUaWeMGOCcfNksqxSBjPEBEZOatsC4QdippIf5LyObHc7Xou
aiF/JuWwsQrudmqhJ2F/x3P7h/p9GA+Ki/MoHizietFvPLc/jamxDB0bv3ja
JZ+matMT40MxYGgsRSYyaaEpiFSKLiSHZYxGi51YOjWB9OXRbAfPk/baRs0J
xjO1rlYmQB9dNwwSuirrsp/+XPKehkvGjRSScrzln1VsRfQeShGE9np+zDkc
eU7QL/vTE0ttOu45LEyljE/QEdioila2kHE2H+8rkUvp6WcWqy9LIW7lV7l1
u9Mb+0fjPI6em7Iew/zKEu/mbHY+5q2azpV1wafMvRTxS6mqU1R61MU5BUu8
dGrjL0T36wqRblczUbaxZBvXRyUrTgsJHclsPxn9eaP4iqAP0V77Hxr2i/nB
dEjxoHu9qGMcz2g0rPNxCVGZgMgL3TbBV9MeOw8Y8frq8lMYkXGtImGsAuv0
JKLfg4BodSw5GKuchg/WfsQ61KPTKfvVNkfdxgdNP12FxlY5P71lXd9iyTCp
vOz+J7eWkcguov8mfXPlFkcPliK3i4LQ4lQUjT9F0s+k+djsXrpxcun1GPuQ
FK32x9I6FLVPzTebPTG2emd7NHPDXS8jmvU5SdOostjn1XXJ9dnCfLelClpl
mLnDDljr68fnvEtZ16mbgtV1nTYKDWNQydu1bFcdnYVPT626DTVW/ZfTO/TK
sx9xCF3/9OwcS+Gf+PDT5iP52LfY3jYR//1VOkG/n9aeRMsy65XMQ4c+2B4W
bofl9Tny99h+Qfl01N3zoSJfX3ueuL9jpUM8+PSeXrF/kOLBXFHXi37juf32
JmaRY7TLiE1fPDSXaFS5KnucYjcvMQSosz9RhXfo/8qaDkB712AtzjDflHi8
JXG5SdHRfmUO6wbWP5+I+EL1S9pf4LtRBupP4oSefP7OPS9p6r+85JXe3taZ
m3Bxh/ViOVmA6qYvt8Ah4nS1LsoUqj5bYRzwV6aH5AS2VhNfulPNFHl5eW6B
+kVq511KoXoS8k3rRxLP8VlqZ9kiauuAjM4n5i+3U1uzLbo9t/LN5LU64ruI
cL3U3mW6Fdah32vqLFL6mbGFxiczLcbT25F/uSWSb9n8t3Ry1+OatPoTT56e
f1Vdl23tcXIOlLqdWvXQoue8ggb9NDexCK8iHLDWy7b8w7YvOEV3DPHgM02H
xJQW3TeRK+r8oGO9aGTHt7br3NrKDC1I7QTd7SK5PS9OPknzd/PN3pqscWU8
oqkU++65HfOUiz9/ipXemg93bPStH4nK9dkPlUK+qcx+MoYXIBdf+18IeTat
M2CYQNngWVx2xdbOU28Nr2huXsw4bUKjUaz2Zc+nG7CqrieSib1jTdQKUtCZ
ul6eC5jdOcSqh1suheyv9OSDZybW4z7ieJj/Im3TwPaYgs4C65VCn5WCUpdb
ETkqGRbOGUP6ODuslKIsGy5kC3BS8RWFmUnlEsO9VEqo81PP1lxKWjtsokSN
1IzjeJ78EfqZWjQ2DgffizDQao5PccxQXi9K+wcRihsPylPPil9kVgbLkjNH
q7Q1N2czNDQBMXZk6CU95lncQ6w+liEy1O/0Jw1NNTrYq3wp1jiSSr9rONqV
g+6WJLVvq/IFdUS/u143jSPlc1gdSnBlTbuVHqMxMRbNDyOSKYn0oYl7NNe4
h1w7oUjBQ2koUreHnvrJJ6AjWprU2leZnE+X3E3tKxgnNBFp7fLMk5Ve+8h8
BFQV3d8hpqIctsiYiYMPHnM9qp5ECrU3Ukc7VfJ0pA/Hi0xKpfmTVjHF88es
/3JPYVEYqXX72WEH/xX7qeejHpyLmYfxYJIdOjF2WyPebJfy/Zpaoi1/lYcK
35TS9ULDF9VQMYWhEHplEUGgAPIyVHtxlgpa20VEwZT8bVbC6E7ILlBwKJbH
8kXFC5INhfxpZGCV0T8xVdCzv/aXYJBbdPcN+zNpu4srUUkgt6zI8EVCu2cN
bOXXCwnno604tiEYdMzZv6SkypBt0vZira+y4tRth43rzKss+26EXEzxQoz9
1HW7SjpPhtaLCihWPHhiEOLBHl3ZbO3dqNKedsPhj1VpUYBPc4gv19X1eDVP
97tGjXWQqthDIzfMZEQXhgVvuVchRulJzc9Io7YQGZuP+S3L9vZY/sfmb35F
s4dJy02kFf564lC/EmHSdmR7Sxelmw+2oypspaSrl/JELtSds9sEJRjv1Vqr
Xi99uL7o8vLhjxttlwsoy0XEgkCHSZEx9tzadPXSiyhWzsL5KZA88aen6B2m
z2YY/YXuI6lVUkezskbd7x8rCzcfXJlo9kT51XCGkqYAig4A/cpPblXJyysa
NRsWY2tLnZVXbHX3b9fKc93xlmLzSJVtnDfLWquj/pZreFASimVQV60UBoNJ
1dJXizx4Hvt6bCmOlCkoF4JQPn2qhuL2pLlAOt30yN+FZur5G7c2iHZqq/i3
MxQPqlD0eNCoY7bWtCra9mP1x3CsYk3eqXDoRoHoJqwQm6Arv+2Jov82M5ui
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
T+HwFFAKxXO0Yn/74N/6zNpo318ma6ws9NQydS/Jc2elMzyvb/Z24cjHXZDx
16R+VOwQSjq5J0WHZM2J/cZJdIYoCpNH5256o5K4269bYWyv+Odm0x835Tq3
HUUbC/XJX0dZjjZJKdXxZJpRf2LXD7ip1U1KUikbabP3qhHjoL4e+m9Jl2fE
NtUU7bdY+diItDZ5vw2SDrm4LaqtOsr6cFovGguljgf9FckHZYmLz/gWHTf9
4Wp0cfGgo8fxsW8p2FXEdV/+VMUysJB40JjeJn3br7pdWlHbsbKuc/Wm7pXc
I10T3rIqe+PgrNroL9v6uliGOKpv44lP5onanZGe2HZqbLk6McZ6ed5LHlvT
wlufg3tJXwn+lDTQX0w29bC+Xqeu/Ikd+PWsqY8sbK3SplopmKm/klTQ/vqf
Ih93AvlX4762EmlsCu0tVv5J11EbFcaoTm6qjM/TxYPp+GldAmoZ3/MvXTzR
Oaxk4p+/sUR3XRzpfYpzGIcUWKXFgwV25W4HstRtqnDi5Vo4hFVVo34motPf
TsY+t9lPR7lG4ikeTArliQcdonQYedtPqZW28EaqoG04N2l/kagWZYgHDZ2X
R1xsEHHSo56l9Pq6MmM/6FIhbgDXhJTwT3irY03wenCU8Vo/+1MKdOiJXs1V
fKnMyjCq1XOLXYkXW64/PcF8pT2O9lm9LMSdXw9cp04VxbYjdylViyMeVBno
Fw8a37U9KQX68NzQKqNLGvSjGm0Nufx8cOhVotc96UzHz0T0+FQzdf6lQ4Ue
QaFP1KYz080QBweC7QCS/2/cDpyUnz4Ml5tPjBwFkfadCw6WOvQkljY3ecai
bfYhlp9eGwGMw1wW81J0hY9ty0XJvBC7VOU9viQrRlIl8afTU1fT8cdNvK4k
FA/qUNx40CFumyiTYiKlzetAeI9JcXedOCh09xf+zUf+s3SebermKdttlQke
VzM4+Onzq43PAaNqIXpqZ3sQNiEZTAdW1nWsrG3FGJDtRKjrNHrmbg4kTb9K
0Uan/sgqpGZebQ4i0tGfqNHZ8nE89MkhHYWOlIk0ysaustXLk9qq2g5DrWut
h8IllaNPPkn1xzO9kf+eYop90S3HWHH486co/PQ5j8XBz9hVdun0oRD++Oeg
K0OAqcYhC0+fotax5foO1tmrbNxV4blG2pHSU4I6nT6scyiq/MSxMDgpl2zm
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
yT8pVYmk7CluR/7uQr12ySW536FKM33+eu7DN1tkkYJjirXMB852TbCpbizf
Eu318xFTUt7Kdcxj3P13CSj00AQ9vT9Pyrnf0CbxWBalSB9LTKJ2pCdL+qJN
fLbExqwoHiwiVDwelKeT/OdWkiaL3bmfruG783E/sZVrfG4kz5jSOCtksxW2
PN1VVj59qPLkjw1xcpAl29S1si6YFlxb215V28amC+t6fnVD6/sebf+33+t+
rmfoyvXht16ZWnhj+rX5yb7z1/5u+5FPPd7+8+v2fn1zb2v/xdmpMYgKf/Kj
qfG7w81Hz//5Dw59aH3rQ+tbV9R2rOYnjuKRXHh5/cqadjZ7WNMDRVTxcsNZ
wjjFqMtrdTp9kxP4DNbZApAUpRelaXiSkZTOwokphOCkL+rPHSvHPJXBhw+p
6Revu7NdFdfMPRXJX8rGgvzrqz/XZRHLn3Sc9KHTzRm9OLffm0hPEpEdSSPt
tvDlRlw8qB/t4j4KqcpiYP1FY1NXMx/87iX3HG2ObTj++pAU3Rpo3Jvp4Jst
/8KjKuNbjhaUKB6MPQazcD6nkEipS4mloaCRBG89T2cJk1bKkX8VxYMmWDzx
YCLTkTqZzXqka4wxdtXyRF8qH6v/NvJsDTBdvTzTiwZlbIwO+mP540CMc3Ex
J3BsRW3rw+zF7l/b2PkvH2353af2/WDfqdsjN955bSr3o/mX5u8eOH3pb7ce
+bUnO37hsb1frO6AKPJj69s/tK796z88tOfI2fG7IwtvzP/kjcmpqZGWvgtf
/+EBiAo/vqFtRXU7jwrZiTSrxanLdTwgDfab+G4acqiZT611RhnPwRMJHFrk
WbpRLoW0Dp0em+b705moIfjLyBMTZegoRZedz0ZOt8Qjv9aalgr7jGP4aaat
sj7ySsdtI0tTy1cwUMkzhXB9XvGsu39Zjrcc8vJHm4oaU+rPUy8WDSqV5Jzq
RP6DvmhT1gejksTqs00uPlK2ve6zj8OfKn86k75rI0Be4FGQJhTVeqg0m+YI
lCep6S9WfctPQOp40EcziyW7FFzVmzbFgzqUJx5M2q49BZ0imbG4RHu+PPUt
tSbLVCWtL6J/nJviFALRmsSnT009W72rXnU97OwXHpo9zK+V/+WNXe9d1/Lv
/7H7h/uHbg3ffue1mZ/+8/xLc6MHz7zwrUzvJza2fmBd25ee7FhT01a1qR1i
uofZ4tLOh9bvfd/6PX/07MHGo2cnx0Z+8vr0wo9mZibvtPWf/fMf9nx4QxsE
hiufbF9T3b0Sw0Akj91VwbnqHQ8a91H667nOH3diPR5MWq5RmkkbpptIW4bG
RQKJ9KS47bdAu6QkdueDVfYJCf3ru1TiQR/dWFVrmJdJIQ4l56pixIM2pU1H
ZyyXYn+1JY4lwIc8Wzyo519gPKg8cYQVSfd9yOTp+mBQEuetK265+LTi2Bz8
5e6paW46k75rE1zhWhFb01j6Y9MkjQcLb0cp6lseTKEGjkz0h7ZSCm8vieql
FE3xoA4PTjzoXlEcYMKOzE1/Cq1W1hkmra+c2CcqNAzt+vVZyqd8e12e1ZZF
Jin0AddwrmLnunSure381Iaun1vf/tXv79u8/8zNW8M/eWNy4Udz8zNjB068
8K3th35pQ+sH1jd/sTpY/4kLTXlxHbivH74/tL71/etb/uNzh3YcOjs6Ovyz
12bffX1mcmas9ej5v9p85KGNLR9b17Kiur2qphtKXF3NXlzNj6xhC0f9BFFg
PCgPyMtGrBAF8NRGR/qi22cf6SfSz8jmRL9799yyk78nqqDxfADdzuiN3Zat
Px/SyT1WykZ9UCZZYnPzsQD6yi69XL2sGBtiCjQS6ban3qYYx/OXr6ttFukG
iirnUoRYyg1pkm/4DbKtFqsyzJguHvSRZmzKpPQIY2KbaTWWGMOfhGpmyyeR
LulrMo380euYaLrQIUr/Bq43TKNV8VGhpBxOiolUt0RFRySYypi4+WZsFLHo
zt9WEbeqrKJ40ALLKR70z8FYqGv9VUK7ZKuv8qKtLH2+0vinP/cSPffkv/xp
pNlRU1tKY38qHzDyycc7fm793j94et+2g0Njd0Z+9sYMRIJz03c6By79ly2H
PrKu9aPr21ZUt62q2cfeDSK4rpX8BNHgbFL+55pNXRDl/fKG1vdu2PP739+/
9cCZ4dHbP319MvfmzEuz4z3Hn38kc/TjG9o+ur75t2va/+2mzvAQG3BRuvB0
01h9iOWhD0MiOTt3r3jqpE2R3HoSK9AU6D8+oz9JxNUU1Pq3LMfrtsGW1PP+
CiVeB9Sn1Um3wZGfx+4SstkEx3N3c4glL8+iOJOoZJKI/ynYmDr/WM4UrVXq
ZsfJZwfr8r+mjQdFe7Hpc4HxoHq8mzeHY5XKSI8+spRI5RyZF0X0nmTYtEV5
YhsTtmWeaLOhm8+6fOUijPmo2VqOm0jNN8+UxUrmn95fsilq5+aeTwNPRJWt
ndqaDMWDOiyeeNA2Du950YxDt3VM2o/40K/rtp7evXPQUQvjnz4tyN2O1OYT
d+qO8q78mSIe1DsLEfeJPwOs6/ylDa3vW7/nq9/flzl45s6dkZ++OvHTf56f
mGSR4H+uP/SLG1o/sm5vGPfh0riOkMNs8yAvJZhkZOVW82sj+PNPbWx777rm
rz5zEKLCW8M33351+qc/mp6fGe86eRFizI9vaPnwoxBjdq6ua1/JjzldVdfm
1ocUK/BV+UZDP5FhrKIm3YmmKoBRWJKYVhd2cp2erSJuWe4yVUbPzZanrlSJ
adNmBt21tjV2W31X8f2w4ugnf14Z5eWPKRTSmI+YP/LMPyk9yq86o3z5ph31
L1DVqFT3Tfiz0T+xbgpWSe3O4dMW3ipt2qUzzZDSdChlITTk0T6PozTSRHyQ
37LJS2l3+n7neOIt9lY0rsTcSNSOjL5TqnsTDGPUpvFJIwPlxDbtLUU8qOTs
Hw+uEldXR5UttTIrD3VxGPVQ50PSzjeaiXZYk5N77vkRhjjAzn0tHxn5SND9
lntjl3vmWm96FA/qUNL76G0HFzs0x0+xE7ZK50FSxrKMHqBOp2I0lP5Ccc4L
XL+nr3ZI2gPGMyohYQrH5JravBd3QVCpNcFlgu1sZSa3M59c3/L+9W1/+tz+
hkNnx8bG/jubE5yZmh5rOXrhz//p0C+ua/kwOwembS2WKG36M2qCfu8qcpKd
ULp+9+98r+fZrlO3bo+8/cYErkHtOv7CI5nDn3ycxZsranrW1HWvwngzevGE
MDLG+kJ1Vm0KTCiEk5jDGu7lArU4jynuUoQqrK3lV2xsChas8mNOhRPejTUN
z1ntWFm7L1gKG0a+kCf8yXIWilrXgVsgIfGK2o611Z35GU9+qyNjOCeGIT9L
Z0VtK3+lh9v8Niyaf3ZgQVgWygiCZT73CvTz3Gq7g91qfLnXwzVYXOeX68Lb
7Xnt+PWOPZjJypoudsdHeDfc6ie7+DE+nVwfOsKadmPFsaDVdTLn4U/G5DWB
CDrESEIVZyDyh7OlEz+rQqoCja1D9WMn2a5+sgeykjpEkFpPID6hwOHdlPk0
m9jrnC1sXALk9WWujXiPCQ5NsDpWdwS8yvenjLd4/WUV2yfLdIPpTCgjqDgb
hajjItjE1AMvysS6r6ztDjUqKK6K/8pKrGurCgZGerAU9kp1x5fq2gMCOBNY
zkxFu5CNnAkoTfy1h3OsDdm1tqZHrOJbXR1QiHeyiOa8si6QaSCIurCZcP3n
14m2VdXsY00Pr3HBKoTF8Qtfupju1XBZM+zhGXZwXWV5ssrW7hPSD+4nZUR2
r+bnR4kmiQmQqpV1QohMq7GNQI0Co1HXhkJfG4i+A/VnVTWrPnI48GyRaQkN
bGJ3rjZmxMDTXBsTOF60JU5a31jj70+t8uvqWnWExJatuff0jiYMP2mjpvqY
g41+PVtjKQ7+63WxjXjoRStLu6tCl173W5T6OrhqG9MuUHPi1ClyD51R1kUs
d5VTJ31KcYxp6DLShziUssSTWL31tA8ROk0hvIrRsdzYSNmWTJeXm06fZmVU
DCMnKR7UoaTxYFKBpnjRqy1b4sHVofPp1q7Y5zp5xkbkPy0uMlFyUw11ASfh
OJicyIDoL/q0bltBa2rw2BYe4NS1/srGzvc91vwfnzuw58i5mYmxN1+aeHlu
4urNW1sPnPm97x14z3ea/sV3935mQ9tnn2j73OPs8sHPbmz/9Ma2X9/Avz/B
PmWEJ5AS8DOPt3IUDzs+/XjHZx/v/NUnWt//aMv/8A97Pl/dXdMycO7S1Rdn
Jn786uQrs+O9Zy79t61HP/FE24cfa2EXT9R1y5UNZnzq8rWzVDnw2zE04JrZ
g7HY6tr9OI+JoYpID2Wt4IESTpHgnKaISoKwEZ1GHsvgWyxeqA7iqdVh8FgV
vNsC31dIsQwP7jrCaxyZJwzEsCrwCAhDj7Xc5cAzdviC2y4eNTDnOSCsmjnw
K/MeMtv4wx2VTu6id6DjzYI+xq792O5wS+ZaFkrw+x8xtOShB7rfGI0GpbAr
P7rYDSM1+Q2hOFeLIRgPmbtYUMPrspaFtO0YCLNoq6YdI9mHg26um7O3KxRH
NzIQQ+kqziLBH/guJM7zYYHtwzU8UmaZ9GCcJbgBT3gA2w1sEYIOAmFRR4zu
N3VhpI+UYPi2CiP6uvZAYdBtE99RuyCYCgMxLHpFsBa6SwxW8CArIGBNbcuq
4GDedq45XTyq2o8iWBHk382rv599l3YEYwVXBVdwBpEXo5kXFNSLBaFtgejD
G0I5u5gQMYyCKHs1U8gergbdqBsSW/igBJcOqMTqQATda8PGIrWLTgxawwCf
RXZrRcPhbAz4wCW+go+9iAgxtKIdODbCcuYnTa2tYbFkGHV2onSgHXFF5bIQ
QwQQNtZ1hkwuIXp2i55+VGy35XierpdxG//CeeLTmRqf+7wV27cW2FE6CHD4
A466+BQtIrjgrfx4lFXKsVw1vuKjOY6lX/6aKefmlmkh6CYp9nXPuQB3GjSn
shHzzyFGky3jCbH0CKVyj0jYCLCxxZ1PIunYElRRPGiCRRIPlu5FWz5yMFgV
3UHv01oLKT3SjsSf9vU2tpa4ShrPSUSVnBvmoDfJREPZidq1w25jXXCu6rce
7/qjZ/ZBJDg5MfqjVybG746MjY0eGLz4yNbe36zp+WJ1xx8+0/O1Z3v+8Jnu
P/z+vq89c+CrT3fDJzz8w6f3s88k+DV45en9X32254+f3f+1Z/et2dT2G092
/ckPDjb2nh0eHp24M/zG/MTL9yYPnbr0SMOBz1fzGE0w0D74rPKcz4UJd3R1
ELDwCRcWEOF0TzfOhmAgw+KswM3m/jCfW4RPjL9EnFUV5hYGZUyZgUg2gcK9
Ypx8XMnvUgxdaDbBwZ1z5rpLQw0QFbah87wC51DA+cd4h4cDX67uxOknyPzL
m9icHUadq2paxdIXcK3zaslDgyDkDOdfwM2GrDDOwnKDmTUWCXZg2IhVXh1E
sny2CIipCWbN1nI3ni/9ZYHqWh6SiBlDHgVwbjzZiTFRmCGf4snP+3QEETcL
bVD9Ongg2YHxThWLwYN4h0+QdVeFd1CGYRQG1J3B97oelGkQ39XyeTcetKLs
VocLmKtqgkmoNYGe8NgKvm/CevEQrDoQCovaaluBBmA4Vp/PnTFZrGKbW1lU
iHHTippgn+xKnEdmgXkX5rMimLDjfAinFFfW4fcOMavORyd6cJTgSwGFHaEg
unkQ1BHIKJxWhkK5Auxj86E1XUAkmzfk039Bo8a61/E5xGD6Owzba3owFA3b
COMYLvxeUd325brALOBMMW8OLSvrOsM4t5vbbT7pWdOKk4ZSA4RfmaqLvcMs
PIeWVYttig1EcCUHebUFq8eB7bz6K8I5cVSJqpqgkTLm1AUBuG7Pk/YOsdM6
EatiOp7Ls4ik5Nn6Ps96GelPnVWsaXXX11FBuaezjrX67dL1r0shCmPkgG+3
K9XXtjjTODYuHsovrjL14w6RyQLymdfTJeKjPOlbYlzidPrvoyf6r8bTnGR/
VTE+xaJTCEgu1Kaxicr1qbues34unDsfxxM5Z5EVxYM6LMJ40DZqJNuH1Gov
v7g6GCRXF/45rFwKA66XHjtYZPtTeeLgTywNtvyVlQCJ6hXLOkf64Hmwugwc
wvZPrWvrP3s9+869mYmx0dHR8bvDI3eGz75w4/zzV2+OwPfRG3du3By9NTp8
d3h05NboCDwZBhi9OTx8a3j0toK3R24Bas9HEG+O3Ry5PTwC/+HdkTu3x4Zv
jwxfuHZz8NLlkdujd+/egaLZlYU/mpuZufO7T3V/9omWwAtlZAczPmss4sM0
uLwQIxFch7ambt+nNnR8ZF3rh9ftBtc33MHEJrB+q7r1Q4/u+eC6ls8+vvcr
T/UAQ8Ad5RNb3Q+tb4bnv7yhGecWWbl1+yDq+chjTR9+rOUT6/Z+bEPTQ+tb
IQ18X13dHqzhrO4BT56P4/VADpD4l9bvhTzB1X849MzDBYedazZ1/fqT7IzW
D65r+oXH9n7o0b0feGzPL6zbzUlqhuefXN/ycF03hHK/tr7tQ+v3wPNfeJQ9
//B398Ln+x6DL3t+q5r51XweJ3CzceISSgECPrShCfKEkH/tU904+YilP1zX
ATHOBx7bDfR/9LG9/OSfDgxIV/Fllqs3dUNWH9/QAlR9aF3n5x9vX/tUZzAD
yGK9DhaMQMTxjz1feLIdigirsBu+v2/93p/7btNnnugM5rY4MV8Gwp4K5v7g
dcjt159oh2p+dF0Tr2ZXOFPZBWR/+LGm9z/WxJjw2O4PP9b8fqj1Y3s555s/
uIFxidFc3YOn2j5c2/7bT7RD6R95FDjZDIV+BRfH1nSK9U5VweJbRvlXNh34
4sbuD35310fWMYI/+F3IFspq+tfrdv+bR/d85vF23jw5kWw3a+cnmICaIeX7
17cwEazbI8QEUvgNrlHAzy/UtH3wsTYgEkiFX4EYyBb48L7vNH12Yztfe8xi
sWDkeVPXw7zz/SSvzkPr935yw56Pbtjzi+ubf/67e774eAcuZl6D85JQzU0s
poZXPs7S7/3Yuj2fWNf68ceaf3E9sKJ9RTVIpzs4xKmuE/KEoj+2YS8oxlc2
dX5q416oHQiak9SC/ATiQbLwEPjAv+/5YnUbKFu4yrQTioCUoOEf3tAMWYGY
Pvpo8xeru1ia6mC6EGNkIP4D63ZBLXjFGX/gxfd+txHIA8LYstunun9jY9tH
Hm2BTD73ZCcfmujAuT/ePLt/ZT1QxaTwRTZf2Z5vy2JKtzD33ueEKLe9jbXD
woy7yXOba+MTH/tvKytpTT3JcPRxboKD2XB5sZxHQfpwbmx94zvKOsPQolv0
1s7UcpmUv7oKFbJxNbXm2wpSVDdWH2L1MJ2apUjgSZI7gSMT9FSDoVfTXrlC
6BQM18cKjKg7hwWW61bg2FZZVRNJpqc0thqKB3WobDyY9OSxpOrnsA9yMKgP
9hrbRUn130iqrdxC6HFbdVvipDtf3OJzJGDj+dVszuJTG9sOn7n809dmxydG
p8fvjI3fmRgfm5u++9L81IuzdwBfmp28Nzvx4tzkizN3X5wbvzcLn2Pw/SX8
nB1nzyXEJ/ApfpK/vzxzh2UyM/nKLLw+Ac9fmR2FDCcmR6fujk2Mj0yMsz8B
vvq9njTxoLTbjv1ay9apbmw51Xn6Zv3Ry+Ca/vaTrbgSD3zU3//+/l0DV5sH
r//fm49+ZkMbn4Xp/lJd+2890bap+0Lb6Rvf23/pizWtK2q6Hq7p/OXHWz/y
ePNfN/a1nb515urcqatTp29Od5y69Z8bjkIw8umNzWs39QTLAqvbIEyr6zrf
cWb0qa5zX3iy80t8zohNuATrSxl5n3ui+S+3HNl94ubu4zd2H78GuHPg+u4B
+PParr5rLadu1nSe+9yTrZ/d2PrtPWdaBod39d/YxVLewGSQ//+7re8LmzrA
z+c3P3axOTJcEFjX8emNbU+0nW4futl0/Mof/eDwZzd0hDsQWelQwd/73r6d
Azcg2x8eef4LNR1fqg62LiIDgcm/trFtQ9spqOzewetQx09vbEG+8aWt3Tjx
97nH2/7kBwd4Fa4x2k7cahm68dy+F769+wTk/77HmiAYeZgbH7YQNL9Es/OX
N7T+2T/1wot7h4b/Ye8QlAWqCOEG4NP7n28avNE0AAy5seMEVJbVuhFqffwq
K2XgevPQ8LYjL/zO93ognIfKAquBsduPXdk7dGNz7/Nfqu350hNBWLE62FeY
X/oLUR6U9Y363t0nrzdxshGbTt56tufid3Ye/71n9v3cd1kgA5oGUoOA/fHW
082nbnFKrgMlIBqgAclrGbz1rcbDv7ZhLyT76ve6tg9cazpxfdfA5V3HbzYN
MMpru85/e+fJ33m6GwJDCFpx7S6yDv78V482fe253vqjV89cmzx7c/r09cm+
y5Mb209/7sl2iCjF+k82c7qpa8UTbf/q0eY/evYglHvmxhS8curGTOe5kb/Z
dRSiuU+v37v6qf0rqjtB2Wq6znSdGX6q5yKI9Vc2NK9vOdM8eJMRdoIpGBAP
nAy+H7/RdPwWVL/lxLU//eEhiIVBTJ9ny7mb/1P9sdaT109fnYJS4LPnzO2/
aex/aGMLxK0PByt+mar/9hOdtZ2nIH/IkOln/409x29uH7jyeOvZv8oc+5XH
2z61rgUa4P+3Y6D51I3mwdtfe3bfr25oDWcq2eLkT6zb+/fNx0EN2s/c/PMf
HPzsk818NhlnPA3HTfig0e55juMZzbIxN0dX4iDDYfxjLX/SKqfuOFL0+0b+
2N7y3H8RZG6aSfEnxvaWo776T0bnIUhgP2EgqVhtFZF9A38PJFbKRUmZQmGK
WK5R+knVQ0bhqa6odU1hFML/QqxZOjuWjk7j81UUDxYDFuH8YOyLhfRTsv7o
84PCvhmHSgqviEKMcZerYxpUHZH2OMzZky2xxqrAeNBbvsE+MvC4vrCp/S//
6eDfbj32SH3vX289/Ff/dPg/PN3z1ae7f+e5bra28/v7fv/7PX/w9IFv/HDf
3zQc/q/1vY9k+r6ZOfTN+qOPZI7+1/oj8GnCw0b8Zubw/9PQ+1+2HP695/b/
wTPdv//s/j98+uDvP8vWkf7uMz1/9lzvX2cOQIJvNhyBnJlNTrxeVL5FC4+I
6fg3j+4+cX0ql1vI5nJ/ueXoQ4+yCbuVta3/13d21bSfy2ZZ89x78ub/9p0m
NitU3Q3eeNVTXQu5LPy7MDz3gcf2QKjySxtbPv94e9+lu/wx/PhT+PhZLjBQ
By/c/cxGNh/3cB2LpyBO+dyTnfOv/wjyHpt94xMQSdW0B+TVBTRDePhz32n5
4aHLvPwFzId9z76L33+Wy/3o7f/+0Ia29z6668ytmSx7sMBqgRRnc+/yGt2Y
eumb2/o+8NjeoJXxWdHPbGgBxz4bGp8dfVf/9+82AQFr2ckkbP7rF9e1fDMz
kOXFQn6PNPR/+Lt7H67Nn6zyq+tav/LUviz79V343NJ79f/47g6cj1sdHDzC
Jrw+9Oje9a2nBPHvBnVgdL784/udp0ag0A8AW9hRPKEQ61g48H9+p7nn3C1M
/tqP7v/Gkx2fr2n//Mbm36zpQm6wambznOFszwU1WgAeLfzpPx355Lq9UCMI
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
5PZ5gQog3gZkUk+AGUrsg+fbkFtmZWMPMBPE1ZGBBcfaRXjQ4S86R6AmnESe
n2L9mYZeLGY3gqJNK8W6MHkiksAolICeGCLnRWorGzrHcEjYVxQJC4WaRRJ9
NfYXLaltDfgx/l+2nPhNuPpRbvwykTGlvMGKzkFaj2aee4SLYoo+HqGNiM8j
8vDZ0VNHs6ptyDh4a41EB+U3epjRTC+3GdEQwyLJ3mfPvVoGtys2h++86lTM
+xfzBsr8T6899Xsfca7BJz/PiX3n5wICXk3DbPjvdbyYu0NMqyGs7YNs2mLP
QI+TwsMpSPYtuisqzHzzaQr4MV/useTQcYyB1Hsu1X5ErvjpOOC+6NEusCH3
8SDd5+eJL+q+wvi0RHiVxqnMR4byfs/uEBndK9+fHg+yr5xNPQyrq/t9X1dR
n8Ydu3QmLJAY3tuVVN94qampobWt8fODqYAHKT7jVNSgFv5lb/LNsVGSHOHH
2Pzn+Gp8OAtnupdSvnkrRaalQt1SkQbQEImcHyxHmdnhV4BL8M+Sququ9qbB
7jZRXNY0nLfdATQI2gqZAh4MdlqWF0SqP9ibSmIzHkk/E/DD8U+wNQf0UkBP
gLxIxH+AigHfHsMQAyneXxzKeISjDItOwMjRln++db7IsF6KIAm2d1OxT0GX
XiwynLmErCTkmBvoyavFxuoWFGeDFg+S05TP8uIVlnJC1eCtO4M3hweHhuC6
MnQbhTAtvQCIb61UP5sPeLABCLx5e+RQckW0oVRhKjt6srKxe9Ce38H2x51J
L0civf1xzgmAUDaMGj4+kA44/XmhCpkLrSPNPVeXSQwrZTpQvAH0EX9RAB0w
lPvTKuGRkovtL/A0v9uqPJ6J/pl1tiV0m+W2FZEXbS59KiIOES+l8suTIQY8
iOLJ4A/gwekRymAFNV5QACCq1FA88StPvUKIMt1fu3UbyNPlXvx9uBKwDzB8
DAca/TE2+ym+hkofLzOtl6B0D5Psg2JTqHxi0AFgnqxqhE40dF0FaDmbr/3D
Nsut2ygRh6Gg5hFOHI5+Q2V+tCdYMeN4MoWk7wnFdVJd0TZjGWDn0toubPJG
mE5qLAWwGSjTLxBpi5C/qJXgR0dyijE8aluP5yCYLDPNjtQAOiNlTmRVgTy8
okDpWjbHZOVUt5IhBoA2g6d8kqtB6H58HEYT4D8gXMwu++l7/P0oV7U7oYLw
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
wmvrbOq3yyr9q1daYtjEk2FTm+O+y3xhw3+WfPB1RDzJlX/jxXA+i6Ee56fc
7Ti+SpHLHQay/egj82RxlLmPB90/99Y+6CI/XmTDLS4Hm8uPeeH1EZayR/8T
3dF1T6LrdV54naEeKfSc5oC5X7QveP1c9xhPH9NWMokJVCYyiz0uPRWuhERZ
CVP8/+y9B1QcV5YwjLz7feffb3e/3Z3dmZ3ZmfHk4HEOkhUQoGRbIMue8QSH
mXEYr+2RgxI554wQiEyTM91NFiBAEiAJCUkoIYRyApRQzpnvVVV3dfVLdasa
efb8hz7v9Kl+/eq++256975Y+/aKut+tbHhrRd1vUEqu+W2y+bfJ9Sjn7VWr
301vkf5COX9IRTmN6PsPyXW/X1H79sr691Y1vZPW9PuU+t8m16L0u5V1UgHp
J0rvrWp+N3X12ysb0V9iDipZ/xZKK2vfSa7/dVKDdHXCwljx/MYEZhtV6EMQ
YWGseUqYcdWmc6UbDzwbU9t6+l7z3mN/zFjXNnx/09CFd7Pbqg/fMPbunRq5
Gjnw1VsH38nr3nL2bsfBkffS29pGbme39bkltfSeexBS1jZnxWoULfqXbcrY
dmH9odO/S2xM3nR2/bHzcyJNeTsuVmwZnBxp9K/f+W76av/Vg7su3Psgu2Xl
lrOr94+ilvo2DCIf/o/xpkVlfSh2e39lPYorPZI7uk/f8S5ofyGkStjeFV39
UoQpv//a5hMXEZ2TN57qO39l/opaw8DVzSdH/5jRUb3vysCFO3/JWZPZe7Hj
6JkXwkvy9l7bcvLSOytro9ed6Dt3+93M5tXDtxNru7/hX5Sz66p5x+C8pNWN
R24YugffTKz7rLTHq6Lz1yvXbDh1N3tt38z4pq7TdzNbdr2Z0tIxcqd8w8Cc
Vc1tZ25/sqrJc/WhzUOXXo2qDmg5sPH03bdihf1oU0KKfRoO1+46NielFVHv
s7RaFD/uufAwY83293LWLineENZyZODS/WW57V+UdP21oMuw82Jz/4mpYdWZ
uy6UdB/N3Dy6bXh0YbL549y297K7915+mGTe+FZ6y6KCdfOijG4xFe/n96KI
JqFpq9uKJsPuK9uOnXsroS55w5ntF66/m1zrHFo2Z0Vrx/CDCFP304ElCxJq
XomufjbSXLXvhqnv6Le9Db4NB1EQPTO6ImnLmcOXHizLb3/b0OVn3P5GUkNK
7/me4Ut/zFtbd/xWwYYD86JNiZ2nN5w4Oz+yPKL9cNP+M+9kr9914UFy7cbX
09vXnbyd1SHMD84MK/3MtHvjmZvvrKiZESXESvMiK5wTmpqG767eeRipUuXg
jfYDw3OTalpH7rcOjPw+tbl15G5hx55XkhA972Ws3z0nqvLLmu3DN+6vqOud
HluTP3C9sncXCmPrj9ws7z38ZmJ9xZ7rTXuPvZPTjSLfRVkNT4TVdpy+m1y/
3T27e8OZuysatrjGNhbuuVa/88D0iHIkGEUb939ZuWvf5bGvcts+Ldu+8/x9
n5KOKWFVCDGP9DYU3/mVr30psPjFhPq6k/cSaze8k7nOu7LrzbQ1m87cy1y3
8/e53V1n7sTW9bontSyr7luUu+bj4t59V+76l66dElZpuW2EbUCAXo2K3WNc
HQi3eOOyFJNlfrWu4lBNkLM4mAnWUuxMQlWYypaq4iP/y6ekKo9IOvD3jao6
FSw8tVLPDjhtXYpMLq2TNfRaLIdNUaa8lXXBCU79yXcG+GRXeguseoFwOHi6
E3cHkyymQB6PgwXgE76UfPvhKcj8hVaB4dOZBYo1GAXUIwgHgc2RC6DvQEPj
RDyIfR5dPMjno6qhoCa43PLFg1W7VjisBvIzqXqku436KCD/yw9gOZZKKw6w
0WnLZdwLxJvBF1puP699KaLaO7/1xJGDAwOD23bv3r57sG/XwJ7+gb37D+zY
M9C7ffeWbbv6du/tH9y/e2D/tp17tvTtQt+79g72Dx7c2b+vt28XStt29e/Z
dwAV2L6rv1csgP5COeh7647dKCEIQoF9B/r2DKDC2xHAPYNnRg5nNG56Ntxk
vW2BPuYM4R3J5fkJRnF+8Hzx5gMvRtc1j9wJr1zvtLywqP88crydlubFdJ01
9R12jWlZM3RvSVa9U2BZ1aGb8bXdTktzU7Zdzlrb99eyrT3nb6V1DKxYe6Dj
1MOcLcdaR24vK+h4bHHGJ8a9Haeuo7gpbdOFwk37n/Yp/13GuuwtJ0sGLvee
u/NhWq1382Hj9iP/6F2MQpLuk1eSmvfm9A71nru3KLP12ZDiN1eu6zx1z7u0
/YXQ0gUJptmhZbNS16IXQ8vWO3llzo5vW3vmzpf569J2Xkpv3TZpSW7y5jP5
Gw85Lcla1nig9dDF6VGmvP4b6Ws2/7t3xivJHR3Hby8q6izffyXc3Pm4fxGq
sWLHwBP+ZRV7r8SaN//YJ39qfF1QU3/hjlObTl5Pa921ILGt7fTDj1bWO3nl
ebccaRoY/nV2V8vIjS9y1qVtvdgyOBzTsqNo18Wec7c/Sm+YFlGJYtWsnRdQ
MLuy+8jey/dDStZ+bt7ZO3rLPbLqOf+Cb4dU1g7dK96w9wcBhc8FFk6LaUGh
TdWOo7Gr99YeumneO7KotHfNqQcN/ac+WNXwdLgxbfPw1vO3Uxp3eERXusYa
3aMrX4ltbR66+8Wqup9GG3vO3g+v6P6H5TnOKW2bz9zzL+96JrhkbsIaFPJE
mjY9FVz+ekLdvKiqZ0ONBbsuF/Yc+L5f8TLzYNuJy65RFWl9o0U9+57yL3w6
pOyTog1F24ar919de+ScR0pj4b6riXWd/8uv0rj/RvP+4eimHUV7L9XtO5va
daTxyIV5YeV/71uRs/NSUc8BFB/NDCn+1DTQe/bhOyvMLhHCDsppQcW/z+/Z
NXr/88wGp6XZbxl6t5y9+1Fee/XBK8GlLY8tNSRuPl25Y/D5CGP90XtBFZ1I
hDybBteevPpaVOn3/Iozdl4o2LBzRlzdmlN3vEo7nRanv1+1q+PU1cUlW5qO
3voss/GJ8BrToRsJNV2/imlYM/Lwy0zzLyMb1565Z9o+FNu0u+bo9dI9J437
LxRsHPyhV87LyaubTt4JqeqaEl4qxIMZ6zpO3Q+o6JwcVDI5vrZx6G5Kfc+P
wowh9fsKd51eP3I7t2PbK8m1LcN3/pph/Klf4fxVrSmdB4v2XEZNiDF3Tg0v
Ew+lAd1DDdE7lrcP7IYeha1W3lAzXv2RfmTGr9WsJbiayMsvQIoEi+9wenJe
BFKA0xCtpOP0v+MrCR7cM5RY9ISMA7P4qFIevI+PVQunmRC6QdSQJSS6Bdvd
ag1IBFTg2MeDEM11RH5Y/IXXolu/PGh3mUGaY6PwRDxI+zzS/YMcawBfmw23
6prkkGPu4AIGVDelfVNmciy8I3oK1y+4YXQQAczW8fBJqLFeiidcZPZqovm1
uNqnQyv9StpvnB86O3x0ZOTQ8NDRUyePnRo6OnLyyMjJQ6eGDp8ePoJ+iunw
qaGD1mfhp1jg6OnhY1KO/CClM0PHTp88KqbDchKBHJYKjF0/k9ey8efhVa8I
B1EKp6xIF6iRFNZ0k441s256sDGj51x5z6EXo2vqh+8k1m35blBxzp4Lqc27
/sMnP3njxaptAy4xTc3Hb3oXt/8goLps79XU1m3fCSzJ3Hk5o73vk9LeHaMP
/I3bPi3ufi+j6feFm7acv+9btH7S4rRPavZ2nb76WjSKN8+lt/V5pK7bef5h
RFXnbzKRc/5wUfbqkPVD5r7DTr55iT3nNw1d+Gtp919LN76fu35hUs0r0VXT
45qaT96r2TqAgpdfhZS7xFQvTO/aePZ+dO0GFG7MT96AfPVFhvVZWy/lrNv+
I7+ChM1DhZuOfd87P7D5cOv+09MijfmD19PX9DotTX8ze+Omcw8+L1xfffx2
SFkrCifTtp2r2L5nSkh17ZEbkeYNTstzDP1XNx05/euEOhQqFnT2u69oRyHb
hyvMKB6M6jrVsmfo9YyuNcM3PspYm7n9fMO+4U+LelCA+W5265vJNW6hpa+n
tKJ/y7YeiW4aMO87X9JzYFnjbhQtLkyo/qlf8ffCjJVH71ZvPfCzAMMTQcXT
Elu7Tt8t7Dn0l+Kuz4o6fp/e9GJ4ybSkhti1RwYv3l9e2OIUWPpu1vrmw9da
D59bGGecHlH+RvL69WfuLspo/LdQY8/og0REhCU589LW7kTULm5/PqRsalRt
xYHra/qPvxRc9mRA/qx4s2t8Q2n/lYLugUlfpS82HVh38jIKLVduGy3Z2P9z
//wlVft2XHzwlaH544LeNceu/y6zzXTsbnxt12PeZaYDN1Fk+nHhxs9Lel5N
qAluO9YzdO2V8PK/8y1BAWbRxv0vh1XOjax8I7tzz8X7kbXd3/XJfymkYm50
1TvFG7afv7e0oBlF5e+X7Np87sEHue0VBy5Hm7q+71+SvPVM2dY902Nr15y6
hyI1p8WZng2D7SfO/yau4vlQFGleyduwa0osigcf+BW1T/oqe3HjwfUnRr8o
2bru5O13EiucAoz1x+7Emza9mNzUee7uFxm13wyp7TpzJ7/78EdF3f9d2Dk3
uaXi4C3TtiPf8cqZktC05szd8PLOKWHGueEV87PXdZ2+vzy3yWmJ4b9Ltu6/
NPZ5/tqk3tENx88gNY/fdBrR5K301etO3/tgRdn3Yho3nLtXuH7vvKRG8/F7
K+o3ovZ6CDct1pHGCu4rai2JdVXys/LB9qJj04Jauzl47wAMMCF0GMduAls/
r1oRHx9SJGTuKP1q4Lk3WikMIaNuOkuyBzxX1vHEcUvcNXomQOHB/qIyYiHp
KxKTg3w8ydodjwfJ3U8QzmLlVbUMqID2ZR55PMjHk1qeBQdeWB9irAIeE+tF
aZ9xnh/UeB4aVH0IOJrAOpLPrxeoblp1B043B9PXUAuLfdSS0rJMYWFMrOVi
AtcY8wuR1c9FGF3jTH9e1fDeqqY/pTb8Ka3xj+g5tV5+QN/ys/Aztem9FOGn
LaU2CUmZY32RlQT4qfXvpzW+nlj7fITxxYhKZ/FIz4VE64AzpyQpXo8zPh9c
WbT3WmP/8aejzFvPPshs3vb3/sXGE3cK1vU7eRXl9l1sGxyZEdvUd/5haGnH
t4LKW0/fy163+3/7l5Qfu2vq2zcl1tw2fLdq44EPszvCm3e8mVif1Xehd+iy
Z2Vf/dDd7Rcvzw6vKd1zLX9D/9tZGweu3vUq3hC+bmjo+sOPshq+qj+058Jt
79JNXrV7UewQbdz0RenmiLq+BTFlwikx4WUfV+06ePVh6cYDntU7us/cCzJu
8m06sOvibZ/KLebDN9cfOj0txlg7dNvUe+DffPLyBi6ad536D8/8qPbT20Zv
TomsTNl6pvP4qG/1NhRXrh8cco6pqT50p23geFDj4MGr96u37f1ZSGnBvuvr
9535pGyjMNPUO/h+Qfeei3eL1g++mtCGHkp6Dvo07Nl34UF0efuMVS17L90N
KGz7uGL3rgsP/IrXeVZtCazqcYs0Tg6tiOwc2Xv54asRZZOW5byRu/3Q1buh
NbvqDt+o6zsW0LA7Ze3+oKZ+FD0lNfQldR6JrN8Rse7olpFri3LX+NfuXFS4
MaZ7OHX1lg+KerecvZ+15XDG1uOfZK5O6bm47eyVNxKNM5D4JTWtPXW3oe/o
n7PbE7qG9ly6hYhgOnyt8/DphfGmOTE1zuHl7xb07L1837j92NKqrSjijmrc
FtZ6Yvu5q4HmHevOPNw2entaRHnR4J2G/oP/5Z0XvGYE4fNx9prcPVf2Xbz7
+oqmvL3Xuo+e+0t2e9CaQ73nx/wK1y439S4rWjs/dS2KHAs37POq7z9+/V7e
hv0vhFYsiDW9HF4Vs/74oev34pv6gpsPbDp766OM9uTN53qHL3lVbO08daeq
d/+0ONOGc3eSmjb9k09RwcCtlv0nngqpqDlyZ82BU++nNUe0H906evV3CWU/
Dy0rOXyrYefgyyjaP3dn9d5TXsa+becfZLVsnxnf3HvuQcH6fZFth8/fehBf
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
u6yw+uGj5zGZO3aevLI0eUvkxkM37j/atvOg3YqSlmvXHcPT/hRIlp26ZpR3
3Oq0D8v4W1D2v7on5Nc01TSeGzJz+fCIjfm7T+5uuHTrXtdvPOJTys9tLq2E
nmiwMGb8iqINVSf3HrvW1XbJISz1bwGZgrGIP1jxX21cmF5VgZ77MPeZwkj6
j4WS1ccwDtz75nleeR00cmY5koKq7tD+f+CdeLK589iF5v/1SSE2O7I0KWtk
sOKnnvFfRqzN2tH4/IVqR2X112H5d54827r3eNT6ipz9Z6FVf+m5+meBOfl7
anceb7l9646pZ8qK4nP79x8dMn2p79a6a1ev/9Yt7g8BGf/jkWTgmXzw7GXF
upIhs1cYx+5obXvsHK74KJA1wg6nm9jwit/b953+OsArMkRuJZc+OZHPf6/2
5dZ56RmD/FCvk18IOJ3W+AW8RuBWyvUp/s1etWe+NsLPrbyeKQ4jHmn5zLpn
mBXNoAryrHP+hwuvPx3W8qwmWxfMIEmVUZ86lZGwjFewTJ6lfnpFPqjtzSXp
d2esjUjymx/yQTH6nQ/KtHCp+tKnhUjN0mjtKfL9S2c7FI/SvSqUOC15Pqhz
iwDaJcX50TkPxgXog1nQUHNdhv41pY/ctL4HBf2a/94xDMp+3y/91JXO9IJS
YDoGs6IdEisedbVMWlFQ23LTJSLl15FbOq4/XRCm+EFApsGi2LwjTfsqjw1b
UXq04VLlsQsr1+1VlNVVn2qpbmibGZr2vYVrZqXuPHHpVnNza2DenrZbt4EP
rtt3pnDv8aW5JaYhWZ8HKoAPltZdzSjc/Z5HosGipK31V3buP2oQtK61rT06
b9+Fq10zIjI+8s/8jWeCe8GxZ3e6Rnut+WWQApjgz90S3nOPiy8/0XG3K77g
QMT6yhPnz3zmnbDj+MWs/GKI6uy1u/UNTfFltSVVjYlFB4xDMwpqmzuarm07
1tzedmVMWN6xpgdJKZsNPJJ/Pj/Gb1P1mZbWcRFbjp1onxyaTlb9+GSebr2X
Vli5t7EzLacEghmze0IyEiMnZeQCS/04OGv/iQugsOXvqQMt9+vADHrwH21I
/KbV27Yt09T5jdlQkw/+wzd15LJCoHXTIzMN5sYYzFqes+9yw9HDs9PKT1y4
9IsFq9031LVduDZ0UdzHwZkGXuknOx+EJW/w23D0WGNLeUVtqGLX9oOnjjZe
qq4//+sFKw28kiI2Hmm9/nhnRfWK4uqOzluJxYdLDp/N3VHjl7T1a780sqZs
1ZZzVzpclqb/yCvlN0FrO+/en780zXdzw4GDJ5JKGxobzvzYPZ49wDEo+/u+
yZWXbhaVHzLwTPn+orjIbfXHT5xeubXm7JlLBnOXb6q5XLL3iIFHgsGC+LTy
01WNjVuPNzWeu5hYfHTboTPJxQdmrMj/S0Aa2cWR2VMF+ODIkIy/+GX+h2ey
YudRqIVj51qBav0jKINp6gqpl6nW7skeu6DtnS5Yiqu1RqSe5XdzejId3Q/E
MCyPHLbim/qfHok/8EwasjA2ZueZK5cveCWVVx65aOyVDPRt38WbuVv2/GvA
uroT12aGpb/vlfh++MZLN554ROVsOHh63dbyIfNivQuqG5uah/km/GvA2iNn
bnqtyXOK39dw/NIvF6wpqLlctqfawD0JBAXs4z3vrJK61rziXcAUNh+70tV5
Z+++k5MXZx240NFwuiVh+7HiypOpmw8Z+qXGl508fLZ1R1VDWPaOrYcuHDnR
WlV36g/uZLHwH72S56Tt7urqsglL/4N3qsHCxNq2u0Vl+xxiyh7eeVxYdsA7
fX/NmaufB6Vn7r9YsP3ge3PjFhfV3br3MK3wQNjafY2XLk5enPhn9qgRBWNq
J7I1kXa9M5ReT9SrcU9qnNSpZGrNktT1dUjOj7wTmztuNFzsMHCPHx6aTs99
MGY2SvqtX8bjZy837q2jlUI78tfB6T/1Sv6FR7LBosRPwgqu33qQtbnmbNP1
oj21a/efKtxT65dS5JZTcfPhg+J9h92SyxpOtFj6Z6woPr1zx1GDmSvjD5w+
cf6ygduaEaFZf/ZLgZ514NTF9cU7DRassU3e1XLllkto5p8DydpVZv/YPG44
4q870yocKf9qwT7evR279JEwl27PHiY8T9Hevgel1A898y8Tmz6l0FpwrfNO
vZWPTsojr8bobM/8PdI1csujn1LjHj+T8vUlU4NiMqjTDiLIUh8qSEMCfZrT
kCqRjBwEfLAPdS0zgaDz9BadOZTv71oVb06XRj4oxhvmg4KGwbVteY1FMMpp
ZYX8GLTyl1fpib29ZNb69aorae0RYj95nfM/UulqfRnp8z4yYrfg0+F1oLV0
RsGSSxSl6yvnp34Z567d3FSyDxS5H/mnbjrc2nr2zIiIdZdu3l2wVPGee8bZ
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
mxid+Se/NLI3bBjxzfsyVPFr7+SdNecgwwdPNr3vn/IH79QRjPWNOXtCrv8K
9uUT9wu+btNbPURyaA1mTjlRx/xrr9SAgsMPvnnReO5y1fn2h48fRSWuN/DL
Pn39fsu1ziOnOm523lmq2PI99/ymqw9vdF7fc7Ll+ZOX0ckbDRYm7Gs4V7Bp
h8HcGPd1hxovtRr6Jn4vcN2RC9c9Y9ZOjttzvP7Sr+evgZ+edXcfOdU0YwXZ
ytXAJ72k/mpe0f4hnikgeb8NNS+6Xzr4p/yfgKwzV+9dvdoOQj57ttkhLBXy
cPPxt0cOVA+ZFeVfeIxMGizJ/EUAOSLhQ+/ESfHbIKtVtacPnG5/9PCuf8IG
IKqRhUfh5u7aS1duPoVO9xfv+LmKKtWzb8sPnd56uKnzeteuE03XHz5tu3TJ
PDDhr4H0DaKgLZlxsc4RWIK0XlLr5QW9RqjG8Pi+IHKZmtVnDRd/sCUB6AEr
QVn/7Z1Sc/GKSqlySyv5nV/Kz31S/hqQlrjtoFKlSig6+N7CJGilNEuf+WYa
h6+tPn/zzp17e49fuv7kaU1146/c1jiu3vnkyTMyWrbfyy7c46Eov/vg6a7a
c1c67t5svTXcK2FV8ek9e6p/4R7/fe+UtPLTz55/u+P4hdv373nGb8zbc4LM
iS2MAarY3HTTOTTzQ8akPiycuLLTs1r4IjKStnrz5anPunUp6ckLU6oWuFT0
1GylBk+p8OJzHPTR/wUSkArfq73+DEX+6lxZZPaIkMqwkWj1Cje9r/V9JHY0
5UfF70rG0jqJzNwLd24jfxWneCafi1lKbzSWHgH0F44xt+ozTLgAU1w6Lnyv
UpFaoyolMa1llOpBfZg01mpK0LpFsGBkEPR6+fiNRZoJvZAPivE6+KCgHQp4
h7hNGoo0H3Ev5vcL8ab3gpvcn+KExO1HPHPFJ57cUhGtWRLkQapXyg8CMuHl
3y/iXsmXEp8d96KH8ibl+Bnmj8zy5RWIUfyGlaHVklkKVQwLVoyJyJ8eu8Ur
uWRR3FZgN//rnTRycY5F5NrRzAv0fa9E46gNKTtql2dtB+72x4DMYaH5oKLb
R6z7Z3CGYWCmbXTBGOYgvE9Csv1zDyh2Hp0avfb3Pum/9k40XbYprax2ZW65
eVj2V0EZhuGEI4wKy7dbsSm5pHp59o4/+iT91T/DYMHqCSt23L/7wD4k/aPA
DOOgHMNw4oH5vkfCFxHrVm07lL6t0i4i+9884/8SoAjM35dcXOkQTc40NAzI
As0nZP2BpM37P/VJ+iAwM3L9wfStVXah6Q7JOxuars+OXTd1+cY5qZWgmHkv
zzTwy1hRfDhx414j/4z/9U0etzjfPCofVDW4fu0eZ+CjaL7/bFVmIZBWcnRX
GBU4MRSCdmcWufbarfvrDhw3cE/+Qn30M1/U4u4mPseEG/+lZt5kJhlkOoLV
svWzErb4pJQsiN36iW/S732STSMKzCLzDIMUhsGpP/BKnpK8PXfPsYCYwv/j
mTw0OOer4CzTqLWmS/K+CAQ559lHbzAKSgOGaxi5bmlRdfymqtHByUC1fuKT
MidpR275sYC04hHB6cxhhWRB3KjwvLmpJVm7jrmuXP8Tn+R/BKQazFmde6St
oaH+vUVrqPWHyW3usJAcsyXrLCJyQTX9p1/Ge3NWpuw+f/HsuR8zau3ag+cr
quv81u5ftW7XZz6pfwxI/6dv2odBaRHrq7K2H3Jdlf9ZYAZJNDSduL0FZw4N
UXwUkH70bFv1+daP/DM/9E41YaliBnMyuFyz1zpKSPU48eueHMKrXvPCdUOp
9yY/LeA+0JaIZk46eN6vPGK/iMxfvuVwflnN9JVZP/dO/Ktf+vCI9Ynbq0PS
to0IyhoTkTMsKGdMWN7s1O3Zu47OWbb+J55JX4VlQfMzXZwLtHd0RL7Vknzj
4PSvQxTmUdBJc0eG50FvhZ77m4AU36zKpKKqcWG5/wjNgABmEfnjI9YNJ4dv
5nwSnGaxNH9cePYf/JI+Ds5aUnAkq/iQ8wpCZz4PVJhG5I8NzwWBm0Sss4kq
GEHOlMyiB0pCKRyWbViUVOIRvw063Y88E4Fr/N4/3S1zV3rx4SlL80eEZ48O
yfydX5pX1v70zRXD/NMXZR9ILamcvGwtjAzGuvZoFf8qNT7zu4NMfWmtTUE8
gvcabT+CDMi7XRmGsnulQiP8g2/Kx0Hpe2suApW+9fDJ+bbrz1/CV7IL7trd
MGIk/d0vlaFmJPBnfuk/9U31zNqzdt/xxRklH3unfRKY8YFn2siowpQdx6LX
7rIMzfmxT5Jr2q7s0uqZy/JGB5FjBMctzjMPJx3w64CsH3unz00uy9ld6x5b
+KFfsnnkBrNwBT3N0zJi/agQovea8AouJR++MagnMO+wPHHb5lMqI21zxVpr
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
NwFixG59zBQzmHWN6MktN6enloPMG9NI0xKns81LVZ+0fDR27ebS0poZqTZg
yFMb+FHJawKC/MuvszMMFU5BSOVTa2Mz1hxD+HqUvHzk4+eXhSuyEc81RT5j
XNVLeVOLn5J6N4nptpQkxZehNr1LrO9p7do6aaBWf0j+g4JxQ3vBJXZi5GeD
E7i85qZnvRuKtAKBHExk98LiciWWodQAqM9bTCarXB5YgfMkJvBLh0+/uA2U
D7a3X0U+SNE3PtgJn51XQJDXbrS3d1650d5RVVUxbWVBb2uQX1nidQQy+o9U
JDJ/yox13AimM2atTgX6X/Ijkv6XoebYJVhZ/+qX4K2hz/u0V+Xtz6yqy873
CuivS2st92EdQd+SlvFgGeCXvHz4HtfiGUjB20GscRmJ9vvtW2d8u/KR6mKs
oDSPmZORoZ6XeLpVQ8i9jK2/GqFAB+BrR4aaw5rMdHG/d/m33pz6ViKZp8Tq
Fl/OWqLSxUMH7CVfd/wRVeqdLnARlPkuI2c95SY1jukZz1tvqGIdntPTBK1R
fpzvW7pa3xT9ddHBR9AYhov2pKWX1sn5/s1Pf9WXuGsPwHwKKqLnu+YybXm9
XUp5M2SmOoeF5PgnbgI+2NnZSShhJ/JBgj7bB2+0X7ne2d7RfhW+dHR0HDhY
NWNFvnqTAX0vta1H+83hrPlGLvCrxM+/I0jrFS+tSciEN5a4xALRv5j9fr2Z
VAx73PB6kbH+rT59Cs5P8XWkLoi/D/l8Y/X1+i6prvrWM/YmC96H5s09os9T
b12e+gzyUmV5A+3hrctHZ/ZoDmWGTfFIMsAL9bZkqPXPN5+6TEiZPweUDKXy
2S/vTbp5lJS+9DYujnG8/YqQueT1zMF0ESLsk7hhdU5RR+eV9var7Z1XOpEP
9pUPXr1OPq91XO3sbAdmDVdVReXUFeul5n9k5v+lpnpeJZ4+xCCVmVe89IxT
//mc15FJmczLmDDeTAZ6FbJXe7r2TQ5vTDhvXtoD8NIq9j7E06tdC4w1/fH0
2f/wdRcZG4O8653UJTOu6l8RfRa+2L/l9UnG+BWO9fnuXr0VKSci/hItwVtD
PLDr6f8pqBH9m6v+r/i3qAzoUwqpLvOKPUj8uNgSJO+YKnX1anyQ6V9i39G3
VTXy6b7KeNi3mnrrl9RKzOGhuX7x62NzStqBwRAb4ZUb7cgHX2X9YEcH8RQF
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
p9ROrOAIi+0f3Jrsp/Hg7EBdMI+fVVR7enHPrA5DUMpIRfzkStiHm4vpsaHK
oky+WDMwuQGKudDfIBLLl48fydo53xgViuQ9E9ukt0JmcHqhpwO721CrpC3j
SwHNFP3IcBosyQXULww53ZkO4wlaB9ZAwwFIPy6nnmwdQG4X6+NBYaF1XZN+
PF40Xm2wEUJCprsrRQrZwuE1YDw90qw0xcFwSuTjdkepkvSMAyTibSpIFqrM
l7dvjw83oFE8HC4qxdKh2X3/44FMGBKZmLuxfUR1GjBaj6yw/aVBkVw7uXFN
leTlPNygSCpqoYP6YsMNzrh8DG6wA9i7PT0eG/yZkxIvVeh3T93gva5Kl8wS
RUTbQaCNv448nC3JRPzKNlChWE5SXHp6emxkRONPfMIBIDVHEu5RAoiepzCd
3zwCtp8e3dd7cyqJpH18G+hnSpRFZ4+HKyCR4rRIIHP3s//BffP4+Ag4F0sl
43MHtE8W3+WVF5pX9xNGFSKDjYUic8TDuw/5eAjXimNdlaD1ud3u59eX3upc
udL+AVL3nGg0krr+aRKuDDYVB4tVm/vXz8+P9/cPr3fHWoWkfnT9+WJJEMKv
75mGa1ApzOveW1CLpD1Dq2Qtd1dlCUS6vXP30+Pds/vh+XJdLZX2Te/c7c2H
Bod1jKzSnXZVVowmKslLwwW87fgw95lJoSyvHyazGG6uDOVLpjYOyWmo9amu
ID6/a3SZTgS0oO9izdbFC8CKaeFKa3IOeQfgu0itKim/iqwSgPG0cmVecRsN
eKjHoJNrsDH/7z8Eo4v7gImL/QWpWFbbMkblgWK1qXE2Rzr29hJjVScUNFBL
uVGsv7kYQPKH14+7g1WZmKc0RZSXlaQnxeEb0Zgss9snvjfP9dXZzc3V1eX5
y4sHOt9wxdud6PjH96Dazgm813i5MKgV6XnNRLr4UwPVeXKV+QL2aKD3TI42
WyOImEyyA3z3NJbkZeYWz84tDfW1KIU8idF5cvuKwvXmBB5sCOGrto8eYSwx
lubQaCOSwZej+YHQMP7Q/D54bme6hy8QTa4eg6zh4a/Yw9UWhQdZq9+7qvB4
UXo5KtP1Aez/8dDVUG4xqn4LDZHpLSNTayjrIY44+osShwe/EocHOfp1iF5D
Qc8qr493yOVK3D9I3/Jc2XWS6Kwq4gnfz8ZKtVZlMofHxcWoFMqMvDLiybcY
uyEhsxyjzFrk6mg1MSpcrtVGx8RFO6xSg21x65oJxkI/0qL0hpg8DG6Ih8/x
xjn1tljwzMXmkFAu7xhepkIfr/Z0CkVV4zAcD8k1j96xjka5TBImlITHpq3u
nIBLfY0VYrnCYbeZLGar2WYy63hieWEFHqizNtoSJpAuHgAL32tWiVNLWkAa
0/0NSpUGPG/Ggx0tgIBZ6ML9C0hZulNhT3n3M7vw9bfV6NUKtdWWFBetUynj
c0vwq09nZr0krYicjobGnefMZpCkAvSHwm0S/W/RGkVcGrDnfZ7TTWAWNvWM
0pInC4W+PUbqtBm5EFqiWFVevFzluL+n1gZOtZar1Nqbdwy7WXeYVMbwcIvF
pjcDxs0KudQel/roo8x7lPAPGhXivJY+WuQzfW1CgXR+GzfXk8JVjtRy2oS7
311WywB4HAM/TjamQLXmVzahxCalCgEvLpcyBYsTbaqoBM8HSvhpfW3AdNdF
XD/jNtXkzzqx3LRx8ozXJuJJi3dqtHhkqRlIFojWqJcqTctbN6DWGsozRSKB
QKxIdBVd3uE7S1xsTytU8vaxZdJfyjrLHNmf7ZeLFKOzJADBKpOjNdZo/MAL
BC3LSVZpYz0elNSH1uJ8lUJtt9vxkEWLxWyxgcKSQs6Ps+qjkvGpADK68ubE
LJXiwcnAVDvfTY1xytWayNiEGKdNqjGNreKugT+NF8X58r501ZaIxcJQiSwx
Nff4/BFl9urH1fjp6jAzKUquUEXExMZGOsQy7cTkLsh0oa9RppBPrh+QBTvd
nJbJ1X2gXJgv0qyJSy6j2+D13iyAZh348kCE2ZkH+3BF6E0J6V4IWJ7O9nQi
SVX3FPZxoZcBLD9KG/bepzOFQpZbjMewVWckAnP6gTA7Z7prRQrF4hFA4l6n
WRuXWo7B3TmutqZkannnBI5EarMzlGqF3RYO6s5ssVtMZpFE3DmCLy2c6G9X
K8ShIpEtIoboIuhOBBfsxkyfRKoaWz5GiV15Mc+F1ahIKWiEbRZLc5qj4gtJ
Nk/W56IdZplGFZOQGG6z6EzW/dMHoDrtZekyqxMPy4TH2ZBvI8hrvFUbnVGF
fnjsBt3k8k51ZnRSXiP24dGr5CWtAHEg9YXpIrUKpIZzjpORp1B1De+ABOIj
zJFxBdCNixUnx6h0Rhv1pNFqNEjkmvG5Fdri3pjvA+hpeGKb9J+C/22VmRKz
E59yuT+NNel1QMesJjIXrVpjMNuf/Aj2dKRTy2p6JkjGf9bnSJUaPL7XYsP/
AX5kiraRzYtl0L+JZ/fO/DBynvQAXm7PacSy9r5lEk62FGYrlXKb3QpexHuz
cLNYJB9fWttcGgjjq8lddkkqTgrXx6ayT9hEEezj5tikkJfU9JHCH6yvkElV
uxd3pD7NdZWL5bKl41t6t9u16a5gvnR68RrcTw3XhqfmUN2T7ynJokrMLaU2
43q4cKjVBeWd5F0aL5M1tTPTGxQUlFrSSP58AH2dRFnTPkFj3vzkWEtUJrgV
Y9Mm5zfQYLK7LlegtR7f4wp+vDaXFh9pNhmKKtqWJ/vBcHN471sbbpbLpUaj
mSdT1jR3w4lB5O50TRQWZEnMJUqPoK/34VpNZmETPX61VmTKVLYrNwzgRD9S
o602RyY9tUgdHwNB2fZ0b1AYr3Vgjhmt8PMmmsMEyrnlM7q/rsqKFptjn/1A
1V8itYo4VyW4WOOKURid7z64uJLI4ulqG/TPxZWdGL0XLop1lbtEFjsBUumd
uViHHAGd8zyMdreDkSJYrl07PEdhahxx9BclDg9+JQ4PcvTrUOCMIx6NszHR
pZQrZqHhCoaog/mfwcHBtV2T4GdPTX5wiCC3rPbsHAd3iVZDdGoukdBTnM2U
lFNHxPX57892bWqpyhoxNouvGtud6Q5WqJe2b1B6EwLkwxVpUjlTYL44KxlR
Fr0jAdw/3xgVycVtQ/i7wAh5v8DxYGXjKAY3a6Hp+eGqp7XerJAIVJbLp5ep
/hq+SD0ysby+vLC6uLS0vLG+vn594yYw2rVeIapon3w8XeKLZdMbFyDlqZ91
wRJZ78ji6srCMnh+aWVjbf3y5gGkXJLhlFvjH+AmNYNNRT94PFdJ1fEZ7l4p
iDYCCwT37r2cmvUyYn9RjHZfYm/Xdp00LqeenvVFPu7sSllCOh459nq+ZFBI
8XhRuK8fVRiP26HVZuQ3oVDy1flJAA9eUwsnsdG2MoBc8Ii1+z0AAXKr27bW
VnG2FxY3V5eOjk/ZdsXL6YZRISzq7KPNnpGO8iCBav0AlO4twaG1JxUxNtXe
IsCDVd1DZEb1+YnfBaLIqHCNWm5yJp1dvZB8liQ6VBEJePAqaa8CQ0sXcfWE
o9CJnzUClXnvlDgvDH1JcBrNUSl7W9sry/NLi2urq6t7O7sPj6+k8XlxulNf
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
Lk6q35SJTqlbnJ1UU1AJikibnpsf76qWu6E+vXHyovTub6/fftQ9PPK8/saV
a1k17UAR3v7htwYOvsOjbx0Eykb27kBaNleVPe16tbm5qKsi4xSSBergZqId
kVVK0E8yYrhoZ9pUWzB/JHqUG25lTwbRBlqKFeRVO15NH23NaCkqNXWNdxSE
/fd/+sekzOqlxbUEb+sr8lojrydaiqL/cOV6+7uFjbfPfvPvv/aNzXzzZlBL
/pZPTDZoXU1R8fjHlflPA/IyN9PqB04Wu3XldUamdsCmABcTe9+7h7s7bpbG
eoa2I2NvhNi+vqJaeFIbfrGmK3PDxCHg07sPQMvMf3mvcuWa770q0fF628Mn
Z6zm6n3SWH2/eXdnM9ROoCYwBauyPCz+9YebjY/bu5sKrt9SeL99NvWy4sqV
KyW1zyaGBowU73j6xBDs5NmFyWEdRZnf3VL084sAchus6q5J/c2Pf0jKrvn4
/pWx2i0j52AhflJZUDizuDM9+vjOz7fquz9tTj6/+oef7mXcf/+6vaay/n33
QxUFxfoX708Ol01U1cB6drxh+Xc93AJTQVmmOrovRldB/s5majc0Td6Ojj/I
vXdHUeHj3sXX3rof//XXYekV4yMv5a79TlHPrr9/0MtcS83UCXRKoJ2+qWcQ
yMFBTeaaoqCrfzg5wPaOqiHIvTLFU1ZgA/JUuX3TMbCAEB4+a3u6NP3RTkvV
ztV3curzxeZnrau/va5hOjw6+XmkvbKi9uv+QW1G+HUFra3dvZoUL1U93Red
Q4cHZ2EOOpbuAeDYMFVX0LN0nZp8F+5ielNBe+9C+CDT51e/uVp2/8lQT931
n+WrH79nZhfjv/AoKAKBQCAQ3ydID0qD9CDiG4J7bo55NvCiriQvrbC8obYm
v7T005d1sLK9obx/ZBwk2F56X5pfi+P459cv27p76QyWJrpqahuO91cbmx8A
F3321cu2lhYwzJtqS9Oz87oHRsmZiqfbzZWNp0JyLt77gWf1zwa2FiaTkjNG
R0fBMG4sK6hvfrKzONX68AFbLeaRPXru37veOk0Fk63dC38rLd/o/OLEWP+g
RHrO4f28xEBvX6VbcpH3gFAlLLX1y6rHwT4TXbXaSkYrW6ce5voeAan0Y3Zx
fg6mVhGEaFugbNDzeoMMC+aEGds50QU1lWUG+3mrqsi7h2WDn05m2pGZpdwj
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
M6qegfrMT/Tbmhrr6ureS8nnxQsm2p0bd7MFVhW4eoaCEXK5u2Cmp35dRj4w
Kub4gpNFzM2Q9cXFS0pzvXuR8/ufVJe+ntDDCKR58/KBqSFokEF8Wh7pfeyv
lKVnJUVEG+jqNLUP0FZJjwpS0zcMDfDV0daMSSoBa3bnX+cnp8cGB5tZWT9/
+qLufuPGCXmBKE+7Z2pm5ezqAk6891s7a4oyDAzNwsJCNLU1YtIqQH1qssJu
yMipaWmnZNaBzF/U5RoZmQj0Tepbu8DV5WFVUWJ8gp2lWWB4Kt3baRHeV29c
N7Fy+zzz4XF9eXJ0uImB4f2Ot5dHyy4O5mCou3oE7p6AUSVsqyhPCI8K8HHW
0zV50PC8MjtOT0vdzz/+4JgRRF/G28211O8oK9q5hMzObCYG25hb2wT5empp
69Y8aqevc9W5SeCY0jcxf9kzxuq4S7qe4LwAzgx55ffByu137ZYaGm6uvram
RoaWNh/mycvQQGeTrYUJOOCTk3PJfc/X/F2cQMe5+gWfnWOii63SnPTEyHAb
O9uwsLC8tEK6N7sflYWHpYCFx1XZhvoGAhOjR89HwO5P62qSkmM8HC0jk4vr
CnL93MNBls2lqcaGRsbGphV1D9l7IycJ90ItLCwC/Txd3H1WTrCLwyVvOws9
PX2/8HtA957szoHrcnxctJmxwNLW7d08eQG6X1QyOrQw2latLHdbRUUlODn/
cGXGXV/f3cPX2cZE38zm7ftPnOokkBhE/E1AelAapAcR3xjcVDcRITpw09O0
cg6qq64qL7u/s3822JRxRUH98BLrf5T93/7H/zS39WxofgY8YU159Zr6J5Xp
odraJivbBwk+dtduy2XnF6VE+P7uh+svh97PDDUHeAd2dHQEOpqo6FmCS2Oq
l42tPTlXLcXf1t47HFyI1eRkXEOzXjTXJSWlHGPMlJu2qoIA35Curi5nAy0j
cy+wJsrV/J9/9Zv09MLkUI+fb91ZPrhcevvi+pU/+IbHVxXly9y+6RuQz72w
7lHxvZ+u34qMSysvSLt2/cfo/MeEcEdPTs7A3KuitEDp1o92vgkgoZ2BQUxi
IyjPXFbGO6YQIw4NFeRU9R1rS8pNtOW1zF1Ahk8L4uSV1B+0PCqK9DMys//0
+b2i7K2Y9Ibm6iJQGS7u2VaV5xsQ3tvZ5WqsZWQNdC4RYKH7f/zLH0IiEodH
J2PcbfRMnZ62PXY20Xf0DGFv7V7Eezto6lq8fPoY2MfVK27+7csrV642P+sK
shcYuoQCt1xP/qaBtW9FfkZkWPzC7KSdvqZ7RMLzxy36aqoFjZ37C4O/+s3v
rV39KkqKNeRkLZ2jp0e69BVlTS1tHjzt2P88pHz1+qPh5bUPHTI/3fANT6wo
SL125cekiheE6Mjg9s+/V9ArLMw311LUNHEBVWoqyggMjgWnFFN1JSu3aFBH
P0cLp5AssAA0aWzp86Wxlh+uyg5O7oK62wvU9e39GUfidFFfXUlD36aivNjO
UPOWiunhGVYYbPXf/uFffPzuDgy+8rTV17MPB/3iZaIlMHNsbazTuH1DzzJ4
fWPH1ljjjopeQUGBhbaSvomX8GT9rrOpsqZmQlrRly8btG1fP8j+3b/8ysYn
ujgrVeanq4paRvlZeQYqsoZ2gcBFjHazNDSwe/r0iY+lsbtP3KfXnRqqcub2
Tk2NL0ceVasoahRX1beUpWmoCz7MHXVXx/3hys2M3MKUUMcfrsu++rw7N/jg
n//xf+iZuT548Czew/mOrFZv31DyvYjOwfcEwd9AB/+OtBQoKup+3LoAyx4m
Oh4hWcTx9O3bN3OrntaXpOWVNF0eLKgqq91v/wi8zsxABx19K9Dk2qzkoMhE
MDB01eScg4ADjJF6MJucF+dsqln0qK+rLuOnmypbZ6CMA4GSrOfdIrrMxakB
xRvX7LzCgKa4ff1GUEI5uG7YaN/51c+KRQXFzsYq8urWINnDnCg5Nc3mltaM
cA8DS6e11UXtazd9ogqePShLS806o6Ts8e5CrJe5oqpGQkrB0uJBbYb/b69e
T0vNTg5z/uGW6tTc3vK7bn9P72fPX6YGOKiqm+7s7ER62ijIaSZkZJOPOlLH
ZE9tyv/9L/9gYu3c8rDtcXkGMGxdUys49nV1LKcXdguBvEot6O18onz7zr2C
R8TloYmyvKqRdWVJQVhgxMrWea639R9uyWdl5gU7Gt9U1FrYvaBOOvju3JsQ
H8/7rY8b82Juyyt3vZ6ltVBJlNvPt9V2zoEeO9BTuJNY87Kl4K6ynC3YpC97
x8k3vqu1LjklAwwARz1V/7s5YKfnlYlKqnqHF8SrpzW+3gGdnZ2B1gJtAzuQ
XYyftbVHFCdCe+tT/ue//trDPzY/LfanKz9o6pvm5+bpyt0wd4uh9U7Y3eS+
7pcChTteIdlkIM9I08TJt7W5XkHmmql9xOrCiubtqzfVDIqKCkxUZPUtnYEe
9NJVsnb039lYsjXWVtE1zS0oPzjYNDGg4lM48bwwUkPeEIiWtvJ7v/vdzeS0
/PzUmJ9kbpc+en2+NWuuqeYblfLiUYO2qnp2SSNzb+541VRdQcPAsaq8SOvO
NQvXMOx0N8TZWEZJp6y64VzEhoqoSfL0KWV3dS4zKVpPVzMmtZAOroEjdHrs
xe1rP/mExJblpvx87UYC6J2LbfWr//4bGeWU5OzPX5bp4rITAn57VS4tPbsw
PeZ3P94qbBm7WH1141//WVbDuLyq4WV9zk1FjblD4eCD9DsycpVVNfFeVj9c
uTM0Ovm0Nvc3P/4YmZCanxz+0xX5l71fhp9XKCrI2nn6P382PNBWqSGnVlLd
2FCSrK5uNL2ym+Rn+b//w7/5BIa/fDFMx0kflKbIyCr6R2dvbC5bacv8jyvX
k1Kz5uanHfQ1VfXsasrKtBR+Ftj5gbYkuxj+w2+uZmbkxfrZ/fo3v3P3jMjN
Sr529XpK6UM6Erox/9bTXEdVWzM7v3prfT/e3/L3NxRzcov87ATXFHXPhHhP
Tbq8ssr9lkdlCaFauoYzK0d03G7wSfm1Kz9FxGUWJt/94eeb5U/GsN2POnLX
jOy8KktLzFRldCw89g+2tW/c8onIe9lcmZKSd3G8H2hrJLDyeNH2xNZA0ys8
jRDtqt387e9llUsrGh6Xxd2+eWfoywHI3sVAw8En6XPfE1VllZqGh/VZsepa
gq0jUUmc9//2T//mGRTe0f9md2t7cXrpbVfjjd9fL2nqqMlOLq6oYaOwpy0N
teWlVcYq1351S/3o/NjX0sDcNeBl2yNrLbW7mZXY2fqVK79WMzArKszXlLlt
5xoPdjRUUvUOLJ4bG9CVlzUytap/9Oxkc9ZKRVZBz6KooFBX4aapUxAcdhSb
n4BA/HVAelAapAcR3xbQnDTs8sDXTCCrruvsYmdiafN+emt6sEFNYHwovOxu
TJVV0vtKunKEr5WOppljf99w96PK27d+bp/4cNfNPjCwkL677SBQdI9Io64v
h9UleW42Rop6pkA95PnY2dl6g0KS/WysvchZVXYGGuq6Vi9733GzaQj6XuXB
SnF+jqW+mkDXEmQY7WltZRdJbhNtGxtrvNs4LYx0AhWgkgsj3ezt7GOY+Tk4
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
tmn7CLYi1ebnFFdU97Y117e0o2Y2SHk9+L5jZh7emzDY015f17K4tLK2snqD
Ho98siJJSt6EzSeQ/PJ8pOd9ZWV53+AY+p3VHhWuOO9vb6hv6Tg9P1tanDk4
gT9VR9urS3PzKDhaWxqvq6xtaGxe396DdBv0NKrF8VHwgQOzDSju8ASONjA1
NVBbXj05NbP+f9m7D/A4jgNP9Np937533+27u92z1/b69OSwDpJsyVayTOVg
WZSsZImiMkUxiARzApgzQAIEkXPOOeecc84555yBwaTuftW5h6NAWbQMEv/f
J4EzPd3V1T0NYP6o6qqBwZn5FVLO2GB3YkxCc1sv+7i/k2S3jKzMvjG2FY98
bg+ISmHEu/7JkbTXlCWmZszMzZLNh8emyUfNjo62iekFsu3c6EBnVw93qpbb
Wtqn5rjptzRLebkZKSlJ9Q0tGpIUO2tJQhmYXxWbAKi60oKU9Jyu7t6hoSEt
zcyT2nR28ee/v61zdIKdcU+/MpeTnpxXVExWGx7qE98adj6pmsqS5g52mL7F
2ZHM1JSMzLxFrTj1MK0pK8xOSUqtbWLni58b701LSq6ta+of7BsZnWQnc1wY
zUhNKKttX5qb727rWuGKXJwaIWcgKzt/iZvmenluormlY44d+pQeGejv6h8S
PyQwqrmJls5WjZZ7olUV5GSmpaQOT8xxJ1/b2dw6PrUotWWQ92J2dCgnPSU1
JXN6jp02YnV2rL66gvwkLy0uIfmuob6VX5P707e+u6k6KSmJvE29fQNqDaVa
mGpv7SCfixZnxopzc9MS09t7hvgI0FJdlJySMTu3NNzXxX0gpDra2qdnFvhj
IZcr/wfwyb4eEhNy8wom5th5DSZGOpLj4+pbuvg/HTBqVVtbG7lCSIndXa39
45MMretsbZqeX+JnfidvdG1pETmBxeVVq2qtbml+YLCnvq4yOTm5o2eU7b5F
04N9neRiq2tqHe4fGJ9ha9LeUFVS3cz2XK0prapr546PH96EaqorTUlJKSwq
n15Y5duPO5pre0fHuYc6slJ/Tzs5n+SSHp1ir672tqaxafaKmpkZae8QrpCB
1vqkpJTe4cGh3va0tJS07HzVKnvjbVJkUEhMJt84omPo1cVpcg0Wl1T29Q/y
M7VNDrQX5Jfwf29prStLSU6sbRDO/0BXT18feyuZRr3U2d6xpNb1tlaFR8cV
kyhYXBjs5eoXGc+Ic39T6sWWhvrJWfa8kSu3pbWTvzbIN+bw0Dj/PdhQlpuS
mT81PdvX2zE7x/5hYWFspKujWzHhgW5pejAlOa6utXthZrqzvYefSo2cgaGR
Yf5dJldJakpSUWnNqoq9btta2TNAvlna2jv5ZCpMJ8JQnW2N5MRmZxXMLWuF
V8TX2Yq11ZCIVFRcvrjE/sAZ7molPzeKSyr4Y58eG+ps4YaCJHmno3lsZoY8
nhwh39f95PXc1KjI5NTy/JzsvFJprnV6ZTonm5z7zHHupjbyjdDV0jI9w175
c2MjnR29fBPMeF97RkpyekbWwOikniantHlqeoGUMTvBrsP/rBvsbUmKSWjp
7BX7E1A0pWuur5mcWRS+iSi6rak8IymtIL90foGkOaqpsqiihv3bDkVrSnOz
UpPTBkempdPa2lhBvolKKmt1Os3EcG9vfx83LjG59oqT2Qqz71pLSWpASDz/
c740Pco7KEZq/CUPyPdCfGxCT/8IzQ6+WpOamFRV2yKd0tbGsuTk3MlpNbmc
EhOTm5rbh3oHp+fIbwF9S01lRVWbcJ3Quu625pGJaf7K72quJd+wre1t/M9k
itGTH03kB1FJeU1fT+/Y+DS5YsmFNz7NNqCP9bcmJ6bUNjcP9w3NTC/TqwtN
ba0q7uSP9XUPcBUjmivzU1Izh6eWpPAyNTqYlZKSkZHW3TdKjmWoq31ocJId
t3V5rqOte4H7U+TyzEhOemJaWkZ7Rw+pxkB3R/8A+71Mftqkx8dmZGSRaz4v
PdHB3qV5kB0Iq6sq2y8omh8UtK2y0NXbm/+Zyd5JoVMVFeZn5RX29nQNDrKt
bKS0XrY0hlLNt7e3L3IzM5Gf0hkpicXlFb293SMjY4rftdqJsa7UlITcnCL2
7aaZ2oqSzPSc7s6ewcF+HftXnVXy3dc1wt4QOjXQl5qamp6dNzHJ1mpmtDs5
Mam+qX10ZGh0bIKc8KGuev6Snh3uJC/V1jWTKo2Nsh8LVVNj6Ulx5dUt5O1d
Gh/MSktPS0sjO+GnVWV/+aZntLd3khO7pBd6Haz9uVrgtoY8aAx5ENYa/iMJ
I88CIN+RJDUQMPJ00ILkkMCiskahBP4+I2nYOkYaz5yf1IoiH6FjI0ISxXvf
GL58w3naxJnEFTsVs6piBYbhh6AxqL2OVj5TbCItouX9KGae4pYsTg2QX6Yd
vcPCcsVqfDZUFCKdKb1YE/k+QUb6V68hv9NziyooWnG+uL5tDHunj16xrnAq
pHJ0Qscens7woBS/smm5i5TY3MavIC+U3ldGrDYjTnnGKAYYV55M8U2Ux9RT
nENKqBKtPHtSscp1pFMn1E0Yq8fwWAzPKt9hUsvIxQpXgjhUO6XYm7CtHDQU
R8r3OmMo+TSKdaDl88CeWJ20gl4+J4xYf7m2il2KT6kbLyqa4Xs5KkpTvgu0
fNSKg73hb/KU4SmSClfMOcYIYYF/ODfalxyXRD7DiydAzwhTdd/w1gt/VJBO
vjiWoHRhC1dOYUpMREI2v8fC9LjIhCz+JNO0YnOD7zQ5gt3wUZLmzwNFi1Mb
8G+NPBOhfMjC28O+a3yKEb9ppHGA5HfHcNo4oRD5zMiHK00QYDCgEyP9kFGc
duV2/GlMjwvPKmsSVxa/PcUqKVdWfvsr6kaJ349G7x2tpRll5aVXpb/IUdKp
Vp5pxU8S5feAjr9KpCWGP7TFGUJ1KhIYgwKCa9vZ/LI6PZ6ZkNrU3itXiv+Z
z82XQSk21ItHxH/Vy++ItCP2Z4U8V6m4rdwbVloi/rRnlIcvz79ISatR8gmU
q0eL74TBDwHphBhcfPJuxOOile+CcsPZ0Q7fwKCRRfbXx+xol39wWGf/dFdr
Y7BfUHU9+xckSr1cmJtSUdNqmJV08qUlTyKpvLqE8uW9KnYqfDPyF7xcf3k6
V+U3lPDT7MbSDH+XCWvS4u9B5bWt+NVp+O2g/A4SNwf4O0IeNIY8CGsILf1u
MZo+W/oEQtG08hcHI/zWqq+u6u7uvamd0Kq8vLT09PzVVYYRe858+cp/+6s3
j5aLoubnZsbHx2/hL0SKogYHB6VPMQC3hOHlRM1PT42PTyqXfLviqYX56dyc
jJzszKysrILCUr5lbV3hz3BDfXV7R4/Rp+vbEZuzpsdH4hJia2pa+EWLi5Oj
I1Piq+sZG8qamxpSU5LIBZ+emtY7Nk2p5jMSYotrmvnfc1rN6sjwIL82jdAE
8C0gDxpDHoS1RP7boPznd/Evw9JwkUZ/XLz52w0UDQFGfxj/h5PbjIRB5G7l
r3t8eIC/kxv+2v/trzSp5Z2UqVpeUanYAV7X5+UrdZAQf/TdxqdBagwVGteE
ZjKtsgvE+iT95Ge4zrorK6tiS5xOfvfZ7zI9Y3gN3NbXA8A/EPKgMeRBWEvk
norKx3IPJamrlPSvYYb62vKNnn5x75SbWXILSYXfzINvvxeAW+vvet2Csivd
beRLfopSRivcZsf1dyKdLrGvudiHU9F3EwBuCeRBY8iDsMZQN9yRIbbiUeJd
cgxt+PlBcY/JTTQiUIx89wdN07foo8jf/KH37xo88VEc/k6+m0vrhluxvoM9
rj3KJEjdQd/QUmsys17fWYGyN8gNfbBvWMdoBQD4GyEPGkMehDVECoDctNPc
My0tfizUKwcBED9FSJMg3EwelDq2CSM83HQntC/8LXzLe3VKHWW/cKd/246+
/MMGwC33Ba3t3/Kqw6V7a8/nP5bYE5jBsCGSL/vlQhs+YKQhaPAjHeBbQx40
hjwIa4k0RAz3P60TApJeI/6tVFdR21zbNqrc5hvOVST1LL3JLqY37OgbLP+W
xd4qGEkGvgN/v2tsPV+9d2jD0Be0fK3zVkIjBm3B8kDNd9RlAPAPgzxoDHkQ
1g7xdglpGBlmfmzyuHPyNrvYnQ7JSVVDFKPZaxNx1KdMWJvf6pvkuxvHLaUN
FisnUPiqxg7lnYy3yHcwkCk+S8CtcpM55Vbd9LqeL12hcztzWw6pc5Nv3Hp+
f5W+vCMKwjLArYQ8aAx5ENYYxSRZ+pUD1lGfOmXm1XRaeKaY+pXQDHXMKd4q
mp1rm9Kz489LM2HRWs3Xl20wpxv7e1av0wgzXOuFb2opXWrUKuMC+KEOyRaa
VfWNEfLb+bIbCW9JAwGGpIPvzLe/br9w21t1q+9tR+4PT+u/ZtU15mauAdw/
yPvyc0Xh/ADccsiDxpAHYS2hpPsB2f+000+fCPbO62EX8BNA08uX/dK22qdf
88t80zw6uLCbYedM1yeml2+xithyLcG/kJ231yMiPySXvMRUlNefC8pnt1Qt
WAXk1PTO87spqm6xDC208El72zI2OLs1Jr1665XIXR6ZIzNamtGqpifPOid/
ZBVp4pbRN8PmvpTsOruI4iM2UdZxdQyjs/NL//ha9C63rP5JIR4yes3I+BzZ
9cT4vHQwyuwJAAAAAP9wyIPGkAdhDRH+Vsx+f+m5FsDAyJz/ZeZn4pVb3sFd
XXqNpU/6b86FRxa1eYdl/fFiNK1naivqf2HqH1bSE59d/pMTgRWdsz5BSRvt
MkhRDh6xdx3yH1uh5zrbnj4X3jOl4tsfA+Py7jrsG5DTEpda+j1TbxOv/KzS
ztfPBl1LaiJ7P3wt4nWbjLzG/sPXI1+1TiHrewek/dN+b/vE2o7xGQf/tPcc
M9sGpmz9krY752i42TAo7ZKNR5J3SpWlb2pU1bDYyknhj98AAAAAawfyoDHk
QVg7pJv5hLvpuaklSsqat1lF/pNZwJWkRvLU1CX2UmQtu/LUyFbb+IUV2sop
9lB4DX8/n6N77JHQqunB/k1WCbPTc46BWS9YRmfUDWdlle10zRX2QjM+MTnb
HDPZ/S3Pb7OIqhpRkceu3oknYlpWxoZfORfescA2UOqmR96+ENw2sRoUkrnX
q4itjWb2jfPhl8NLyipaPEOyfnMmYnJJzbdoku+C3dYJXlEluxwTqwfnpV6v
6J0JAAAAsEYgDxpDHoS1g0tP7DAy7J19YhMb/1JBbsXvT4VNqpYtvVMuhtWS
FaYG+ra5JM8urVraxlqltvCxKzwybYt3gZ5aNXNKuhKa555YlZRVaxOYZ+WZ
bJ3WzK7BBU3f2NzP7HPZO5JmJkxt4nJ75kiBTh5JF5Na5/v7N1vGTKm4W3WW
F3dZhBUPLAUHZJ8NLWVvG5wZeN0i8mJImXNEsX1kSVhOy6qa/2lAMauL+23j
fJLK99jGZ7fOiPNfoHUQAAAAYK1AHjSGPAhrCC0MmcDHqMH2/gs+Oa1jC+R5
U03dk6fDppYXLnolnwisJEvGe9o+sY1b0lEx0dmPXIpR6xhqee6tc4EW8U0k
SboGpt91xDegpI9emf3kYsAfLKKbB5ZpcT4Lj4j0922z2Y6es2P7r0VndsyS
pdYusabRTYxq4a1z/tfS2klCTE8tuO9sxIKacfVOPeJfwFZLu7LDIvxEZB1/
q6NOo9XxDYBqzTXvZPPwwktuyQ4pbeIhUNyEh4iEAAAAAGsC8qAx5EFYU7gm
Qi3/YGxwdK9l5HPmEYcdE545H2ab0kqWmjklnAypJq9O9HZvuR7bs6BnVMsH
bSI2X4/fejX0M7eceS0713xJYcVdB/yyWqZJHNt/Jfj3lqliZ1S2fdA7KvdD
m2z2vr/Zif3XIvM6Fskr190TDwaXkgdFRVUvXAgxsUt66XxYSBE7mo2Nc8IR
/2K+vbKlpW3jhZDPnVM+s4q2jq/hq8polytahmYXVB1tI7RyJBl+IkUAAAAA
WAOQB40hD8LaIc6xxd9AKDyoaeiMya1v6Jnin/aNTY5NrLAtdZrV/pGpea67
Jk1pcosbU8u7+ama2EFK1eqegWmNlu15OjE5OzixoNgLNTO90D+6yI0Lqhse
nFlQkUKoycnJkYllfp3RwaGY7IaWgTluvFNqbGxueGJOqp5qfj4xtzarund+
hZ3kgl9HHhlVuHNQy/+D6R0AAAAA1gjkQWPIg7DWCDNS3TA0pzQpIaNj5KY+
veFMzZTh6mJGow3GdVGur1xBRBkWRRnsTrEDWrEypegXSpMaSjul9YiDAAAA
AGsE8qAx5EEAAAAAAFgPkAeNIQ8CAAAAAMB6gDxoDHkQAAAAAADWA+RBY8iD
AAAAAACwHiAPGkMeBAAAAACA9QB50BjyIAAAAAAArAfIg8aQBwEAAAAAYD1A
HjSGPAgAAAAAAOsB8qAx5EEAAAAAAFgPkAeNIQ8CAAAAAMB6gDxoDHkQAAAA
AADWA+RBY8iDAAAAAACwHiAPGkMeBAAAAACA9QB50BjyIAAAAAAArAfIg8aQ
BwEAAAAAYD1AHjSGPAgAAAAAAOsB8qAx5EEAAAAAAFgPkAeNIQ8CAAAAAMB6
gDxoDHkQAAAAAADWA+RBY8iDAAAAAACwHiAPGkMeBAAAAACA9QB50BjyIAAA
AAAArAfIg8aQBwEAAAAAYD1AHjSGPAgAAAAAAOsB8qAx5EEAAAAAAFgPkAeN
IQ8CAAAAAMB6gDxoDHkQAAAAAADWA+RBY8iDAAAAAACwHiAPGkMeBAAAAACA
9QB50BjyIAAAAAAArAfIg8aQBwEAAAAAYD1AHjSGPAgAAAAAAOsB8qAx5EEA
AAAAAFgPkAeNIQ8CAAAAAMB6gDxoDHkQAAAAAADWA+RBY8iDAAAAAACwHiAP
GkMeBAAAAACA9QB50BjyIAAAAAAArAfIg8aQBwEAAAAAYD1AHjSGPAgAAAAA
AOsB8qAx5EFYW2jhC81oydf2ukpfH3c3J0dXFydbS8vK2rbuhqrg8Ch+JbJC
eVZKVFKq8FSzkhgaXt7UIRXWVJoTE5+2qievUtwCqiI3Mz4lg6EYilYV5GZ4
ujo5Ozp5e/u2dU7QjI4U2NFSnZyYRtF8HbittIvFWameHm7Ozo5kZUcHu9bO
Ib6SIR5Wuz7fce6CTffw2Hd8ngAAAADgm0IeNIY8CGsNTdPiI+aS6c7fP/Hi
9m27tm3b9vZf3/SLSR1sK3jwdw85h2aTlbSjtU88/vBxqwCGDW5UV3Hib372
k7e2HuQ2JpGOcTr7+Q9/83BGaQfDB82loTeefuS5TR+xT/Vjm1//84uvbtqx
Y9sHf33jsQ0v+IcnkZVCHC8+/exfRlf0jLANwyx2ffLWy0/9+c3Pd27ftvWz
d9//JLewhlEtmm3/+JEnn/7g/c1vvfL8ky+9Udo4/t2fKwAAAAC4eciDxpAH
Ye2gpTDIBzGKPmny4aZt56VX+dxnvv+TDS+9S151Md369Cvvrmhpin1RZ3vq
4KtvvPnmpg+Lm8bZNSkm2Ob0T//rt2aXHPnSKpK87/3Fz97btpstjR5989U3
HDzyuTLVZ/d89MQL7+ppXYb/9Y0vvTW8SPENhOxOFzrffetV29BCdk1aqEZb
YcxDD23Ir5rgKjYX7BvYNrj8HZ8uAAAAAPhGkAeNIQ/C2kFz/9O0Xnp6bM9n
W7ZfYBihtyfNJTL9dPcrL7507MTpNzZuDEys4loCKVo9/u5rb4Yl5xzevtnM
PIALc4yrudnrr/z5o607hmfVZPtLx0yefOZFk4MH2a6oupE3XnvTyS2bK1nb
XBr0yIZXVigmO9xu45//OrGg5zuLsl8X+957+w378GK9oqpddWmPP77hzFUv
nbSIohkAAAAAWMOQB40hD8LawoYqHd8SRzF6ywtHNzz14rYd2z/6cPN2k5OD
o4t8+1x2uP2Pf3q3ySlzmgt+eoYqj3V5+ZXN5KUkl9OvbP5Ux4U3q+MmJ8+Y
7t/+mUtkiU7V//FHn1lfvmiyZ6dGq2foiU1vvnPePKC7u7siL/fNF55448M9
pKgUr2uvbnx3ZFEtpjuKWerf/eGbL772zq7tO95++y0LWx+2bhq1y6Wjv33w
gedfec3G1UfF3npI/YNOGQAAAADcFORBY8iDsMYITYFc7qMun9r7/Ma3Lc0t
Lpw1u2bpOj65yncZjfewuvunP9lz3FLqWWp1cNtLr7ybnhTnc/Xkk8+8WNkx
S16xOPTpRWvnAIeLh45b5YR57Nl7tjDO/+MtH6hJHNTPbH3vjWde+MvmzZtf
ffXVtz/a1tY7TDaJcb/6ykubRpf0cmWW+7e9/+bmLXuvXjp/yuxoQFQau5Db
b0NB8p7tH/3m9/dvfHdLz/Dsd3+yAAAAAODmIQ8aQx6ENUdomWMjoZnJ1i27
zIVcRjFcSKMW+qs3vviK+YWzL7/4J9+kcjYNLo9/+s7LL7216dOtH3722ad/
3PDkVYdIsvzKsa0HL1prprs+fXfTxr9sikora8x03/zRFrWOYfTj77616dw5
z5a6uta2bunGwBg3q1c3vjPO3gvI90Ml++t47+033GJraaFu3F2E8qg3VEd9
wbOPP3rkksd3faIAAAAA4JtAHjSGPAhrC81IOYs8MNu3/aMdFkIK41+n6RPb
33p+03by2Gr3B3985R3yamu211PPbqzqntXSlF6vvbT3k41/3UaW2xzdtvPo
GbK1ydsv/OjhZ1U6uiDUavOWrWo9xVDDb/3lr7Zeufy8ErQ4Xk2U+9XXNm4m
C8TkR1ELXe+9/ZpDZDnXMVWoYWFKjFdgJFcpNjJ+8upTW02vfPdnCwAAAABu
HvKgMeRBWEsoRhjFheHD2Mm9W3790BO7d+3bu+vzDz941zM8pSzR7777HorL
ayVrLA1U/fF3v79wPfD4jnf/9Ndt0tikTZnev/7t78vbJu2OfvLONhOyNCPU
5epVJ/Ig1PrQn15/jZ2RUD/w1IbnTl8O53ZFS3uMcbO6/97fbP1s577duz58
/4PLNh6MZmrzxmf/sPG1vSZ7dn2+7eOPt+RWtsf7XL/vd7/b9P5nl8wvf/z2
xj8892p2RceXHRUAAAAArAXIg8aQB2FNoeT2QXbkzqzECJO9e/btNTm4d/dn
n2zxDUlJDfK5bOXGiC168YEuVy0s7a9dj4jLoaWupqvjFqfPFJR2lqSEeAWF
8mOW8u191XlxDo7OOm6SiGsWVknpVfKooNyjlsri40cP7TXZt3/vvm2ffHjd
0ZehqVCn6ya7P9+3Z/+ePXt2fLo9pbCKrFmeHm6yY+u2LZ/sNNlXVD/wnZ4m
AAAAAPjmkAeNIQ/CWiIOJsPdukfRBgulvppcQx7/IiVMTsHFSGGJonlR7M8p
4gcvpcXXaGFGCW7eQ654oYVRq5jhQpr3kH9VJ1RJL+5CLJlm5KknAAAAAGAN
Qh40hjwIawcbuMRbBSlGHL6F1tNcWiNfyEKdlAEV8ztwqU0nziBPiUuE6eOF
xkHljoR/9GJapG54SYyHwhIx+FF8z1I9v4CsQ4nLaWU4BAAAAIC1CHnQGPIg
rB3i3BHSY+qGNjiuQZDLiDQt3PUn5EchmEmth3IhYhikxens+cD4ZelNDo/K
atDKZkZKqgb/VC81LAIAAADAGoY8aAx5ENYSNqmJHUA5tDK4UeLthRStXGgY
3MT0pxPLE55Lo83QiikOFSlSMc+Fsj4UrayF2NGUW51tuBRaMcnuEAgBAAAA
1jjkQWPIg7CWiPf7KcKVQb5TLKSlrp7SzBDKYCcOTMP3Qf2isCYOZEp/4VNu
hkGaVryqXEGujJxMEQgBAAAA1jbkQWPIg7B20GJHUHmJolsmo8xr8oyEOoaR
7hmkpHkD+aY9vbChYkgZuWmRUqZH5ovynNxnVaoDFxD1irZFfkwb2mA1AAAA
AFiLkAeNIQ8CAAAAAMB6gDxoDHkQAAAAAADWA+RBY8iDAAAAAACwHiAPGkMe
BAAAAACA9QB50BjyIAAAAAAArAfIg8aQBwEAAAAAYD1AHjSGPAgAAAAAAOsB
8qAx5EEAAAAAAFgPkAeNIQ/CHYnm56K/YSH7hRL+o5VLvqwUvbCOsDIlFi4t
Yye1V8xrL6EUX28ZtgIUe2jirm5x+QAAAAB3NuRBY8iDcMcSUxPNZTZakQf5
QMcIsfAr8iCfAeUYSAsLpVcZxjAkio/1jOKlW4jiq0RLdQMAAACAm4U8aAx5
EO5ElNSAx4gNfLTU0kd/+XaGuNZBNnxJDYLsA0WUpPkVDMKgMqPd6vZBvhq0
1LRpcJgAAAAA8NWQB40hD8IdiJb7g9LKdjtGmZ50X5/XaBIJKXErSi5KWSIl
LhNepAjGsLnwluOyKIUmQgAAAIBvBHnQGPIg3Hm4KCbkOKMunVKA4juOfnVJ
QiEU11QorC4Wzvc1VdyTqKzAjTH01qAVSVSo+9ceAgAAAAAIkAeNIQ/CnYdL
bXq5Yyc7DIvQXKhjw6LuJsOaWq3WaDT8zYCUtAX7VAyYitFp5JsK/44JjVqd
m25ubpxTSaPlUIiDAAAAADcJedAY8iDcudis1NlSFxIS5u8fGBjgk5GRtaLl
h3rhunTya315oPJ3tNhvZjG3RKKlViqQlgYa5Tbsb6uPDI8ICAgKCAhwd3fN
TC9ixPFkbnkwJMX115SaHjtS0zfxhX1XAQAAAOArIA8aQx6EOxAt9O8k+S3G
323XvoPePn6+Hi5Hjhy5bOUyt0QLnUXFlb9MaU5qeFTyqlqcdUIxi4TwlGJS
A9327Tvg6unj7e5mb28bE5Vh1H30lt3iR3Y61lB84sSJ6r5ZxSipuIUQAAAA
4KYgDxpDHoQ7kDj0C4l80d52l63d+cXayaZ9ew7mlfSwGUqvaagsjgoJyc6v
ELaimZH+zujQ0KS0zLHJObK9elG1uDjPjTzD9hItKUgPC42qqm/WUXpxEkAq
0dfp4nVHZb/N9oaqjo4BPqX1d7XUNXaQl2ZH+lMSoyIiovrHZhiu6XBwoG9i
dmGspyk8IriqtZssHGiujgiLbOse5NPmSH/39NQEKSE6PCy/rIbfxVBd+enT
p+v6J/mnk/1tEeHByWm50iH0t9RFhoakZ+XPzC6Ktzry49sIp+bve+YBAAAA
1jDkQWPIg3AnkgeTifZ3vGzhwC9sLUk5fuZ8Wz/Jelp/V5uDx0/a29sePLjf
LSiBhL72+pKzJ82uOzhfOnvS3i2MbJDgan3CwpotaXXG9fql/cfO2FhdOXr8
VHFjnzRtRZqfy+Vr9jq9PFJNQVzA9j2HJtQkQs4c22cSk1k11Vtz0uzwVUub
q5fOHTxxtqV3jKydHOa7/5CppeW1SxfPHj19ztPD19LyyoWzJw4cNqtpGyAr
ZIS6Hzx8wNzS2tLSct++fZ5hmWSXo41lp06dqB2YJ48bSjIOHjpiZWN74YTp
NQcvsuvmsrSTJ8zsHR0unTzlHhhNG/aJVUxUAQAAALAeIQ8aQx6EOw+tyINp
MQFHDptZW1tfsbj82Wfb7fyiuVV0TTU1Kg0b4spTQvcfPqOnqdSA658dPsdv
NTk6QtZJ8LK/eM2OPM8J89ix92jH4AJZf7C3a3pmgSuEHUYmPy7s6OFj5lcs
zC+cP2th2TOxQpY7mp+2dguK8XM8ZW5L1luc6G9v7eJGudFcOLrfJSSZbJga
7rf3wNG2nilSW1eL03uOnx0YX9TTmounjjl4x5N1M8Jd95ud7RuaJcGyKCl4
14FjI0v6pcHGM6dON0+uMurxC8ePBMWVccUunDA7Xt48GO9qsf+8FT/s6eTE
GDkE2vg2SeRBAAAAWK+QB40hD8Kdh5anbmeSQn3OnL2Yk5OTn5uXEBF69uSp
xPwaPhMVpcY6Org6XLc8fvHynJoZaS8/ZXb05EXz1NwKPhXGedlfvu5C1rS7
eMLeJ1QslpKGlSG5KyvM++S5S7m5ufnZWeTL1KKWfWVx8MzRPZ8fOjkwo+H3
tTw16O3m5Obift7suEdkAlkS7+dy5ZoLX0yEm7VzYBTXyZVyt7tm6xxLomZS
gI25vT9/ONR8/5njx/K65qnR1tMnz/Qt0aqeihPHjnr4h4eGBISEBR48eDgx
uWqorcr08JEzVyzyy5vYwsTpFxEBAQAAABjkwS+CPAh3tkhvpyvXnKSnYW6W
p8xtKe2Ku/Vl0zOXUjNyS9Piz1043zqxSlKTdmEw0MPxwKGD1s5BJPSxfUFt
XElGu37+uHsg37CoGDWUy4zJvg7mNs7cc0pMXtTyaNepw3tMTC+OL5CfFVRl
dsLRo6aOXv41tY3uVy65hMeShfGBHhevXOcLjPW6dt0vlN1Yr3G2NndyZ1dI
DLC7aOMldEOdHzp17Fh+x5x+rPX06dMDi/r51rJjx44ERERFhIWHhQZHxcX3
9E3RtH5+qNPL0frAgUNOflGrwqwUlPL2RmRDAAAAWLeQB40hD8IdiBLnjWeY
aF+nS1Z8HqSo5Snz02Z2vkmrU007dx/un1SRLNaan2J2/GTPrHp4gB3UhR1V
piHjs92Hppd0BZGefH/RRHfrA6bn59RsNFuenZ2dnuNnnSBfk/ycr1rbin0y
dVxrnNbq3Cm34JhAZ+uTVuxQNm5XT5yxDCRhjeQz27NmTiFc+2Cg2yULW76e
UR7Wdt7BXL01TtcuO3nGkIqlBDqw3U25OFgY7bv74PHxFWq+s+bkydODKope
GTY7fCA+r1k6ZvL/QE83f+T12cG79h0cWdYoJ9cQ2ky/g/MPAAAAsCYhDxpD
HoQ7FcVFn6gAt+2f77Wzc7C5fu3MCVOzs5eHJlbp1bELJ0wvWtj7eXmfOX50
3/HT06uaBD+nQ8fPBwWHWpufuXDFWa3RxTlbHTt/mZSyMt5+zvTA0TOXPTzc
zI6ZJuUJo32StJUW5Llj564rV62srlqeOXc6JCI6NtD188PH9SSELfTu+nxH
VEpBWVbM3gNHPdx9XO2sdu3a6RgcTzH6YPfrh45f5Lt0Bl4/d97Rg7vvUXvl
rJmFTSApvCjG/+DBg1YOzi6ONrtMdvtHZ5KFU+2VB0y2u4Wlkf0XJIXuMNnn
4OLq7+Z4ycphano+yNHy8KmLocEhV86duWbrtqjnE6A0XwYAAADAuoY8aAx5
EO48fKdNflSZ/rb6uLiYqKioyNCwlIxsrZiLhrsa/X3cg0KjWtqaKyvK5lT0
8vxYWny4u7t7UHjs7IKarNNWXV5QUswHy5XpkfAQf093j5T0nMWlFSFf0cxQ
Z0tqXER0dHRsdEx4aERubm52RnJtUwf/ekNpfmpmEVmtID2OlJxfVN5QX1Xd
0EKWtNZWFRRUsZNZ0ExTZVFZVS1fserigsqaZh3DpIe4XrR0TEtN9HR1ySqs
FiaP0KkzU2NiYzP5p2RDH293Ty+f7KKKVY1qYbI/OSbMzcM9NDJpSUczYgdW
cioofkpGYQYKAAAAgPUIedAY8iDAmsMmOSrJ1/qMpTvDD5eK5j0AAACAbw15
0BjyIMCaQ7ONeQl+DpesPRmab9JEox4AAADAt4U8aAx5EGBNoqbHhkfHJrh7
/yhEQgAAAIBvD3nQGPIgwNojDJAq3KRI0/IkFwAAAADwt0IeNIY8CLD2CDNE
8KOPCjMbIhICAAAAfDvIg8aQBwHWJnZ+QyECUgiDAAAAAN8e8qAx5EGANUmZ
AXHnIAAAAMAtgDxoDHkQYE0SMiAtPEH7IAAAAMC3hTxoDHkQAAAAAADWA+RB
Y8iDAAAAAACwHiAPGkMeBAAAAACA9QB50BjyIAAAAAAArAfIg8aQBwEAAAAA
YD1AHjSGPAgAAAAAAOsB8qAx5EEAAAAAAFgPkAeNIQ8CAAAAAMB6gDxoDHkQ
4JuihWni2VnixXniKf4FPflC6/UMRZMlFM2vLKxGM4YTy+ukbWma35rbgNGx
jxh2GS1tIu5S2Cmt516l5XqI89dzr7JPaWmJUD5fuFQT7jGtlw+Ke8zthz8u
+accLVRbJ27P8IXz1RCLEM6GUDHpeIVqKKonrKOnFedNqhUtHCklnyf2iIQD
paUTqDzz0mkAAAAA+ErIg8aQBwG+MZpEIz35Oj83NTo6PDe9JAYfRXaj5JAi
hx1u8djo4OTsgphr9Abr0EJ6kiIRH+24DbXyIi4zkqeNFYVNnf1yQpS2ZYTE
pBdrRXazPD8zNjI+PT2tzLNi1STKVEVJqZMSQ5oQIdndUVI4FVZm19SLAY0t
Ry+VIj6enx5qbGpZUYs5UTVXW1YwsajhnvIBmZoYGZyeWVDESSE4UwZZVq4n
LadIAAAAgK+CPGgMeRDgG+PSR0VWrJ2DfXhEsKerS0BwzPwKH1t0yvTX0d46
Pa2ihdY6ocUwxt89Nrvihiymp+X2OzmsicGKzVliK9jq/Hhrazu/ZkKgV1Zh
OcOvL3/lGxZ5Or61rjY/ydbOITo8xMvN2dsvdGZeI+ydTXY6xaaKNjhGbOPj
EilfjtjcSXEtmJQifcrr6+UIzCVKkmS5xzmJ0XZOrhHhoba29vnFdexrC8Mh
3i49U8vyvhgqwsMzOa1SeXLkdlJxKdnFyvxkZ3OrVB+aQfsgAAAAfA3kQWPI
gwB/m4Qwr6ikXEqvXpge9XG8HpGQzSe4ob7u2SUNSU8q1ayvT1BuScvi4jKJ
exSjVy1MjY+Orawsrawu84WsLk739/aRNKNXxhla6FFJwtrU2PDA2Jj4AkVR
uu76QhffsJmZmVW1Pj8urKWje356YnJmkaa5QrjgNtzXNb+k5Uriu7DS2VEB
IbFJakqzNDse7OYQFJFGStMx9OhA78TcHCV2v5wY6J2cnRNrwSzPTZEfm3rx
Kd8ISMtpk497zOjgkGqVbRlcnJvs6x+WjmNmcmRwaIzftjIn+fwlq4EB9qdE
V0PJxXNXGzvHaN10akz4nJoZ6u9a1dH8ga+uqFQqNb8P3eJEb8+gco9jQ/1T
k/PkWLvrKvyd/WdnZ9VLGjFLAgAAAHwV5EFjyIMA3xh3R1tmVHB2RR0fQ6pT
I3yjY2hGGxXs7e8f6OHm3tjUPtBScfHyJTtHt8La7tXZiSgfb7K8sKq+vqy6
uaGbZJ2mqlwPDy8/P7/QmJSl6cHE6NiF1VWSbFST3VERsSRflaXGefr6+Xm5
xyfn8O1ujHYxNsT3soV5YFD46MxSbXb8dRuHyIgQNyf7gup69tbFpekYP19f
vwA3d8/imlauumxIzIkLTC2q4mvbkh/nHRzGNi+G+gf5+Xp6uBWVNJLsmREb
6RMQ7OPtXlDeSFYrzU5ydvcIDPDz8Y9Y0Oj12qnE1IzRaTU59q7ygtS8XLJO
VXG2i4uLj3fAwrKuuTDZyd0r0NcnNDKJlFaZneDu7ePn6x2bkkcq5udsS86D
1KO1KCHINzSJPIn0cbF39gsLDXZycKxs6iQv1ZTmV7V2k01aK/LJGfPx8QsI
jV7UUgylIhX28fUP8PZPz8rPiA+zML/kGxA5NDpXU5ASn571D7oaAAAA4LaB
PGgMeRDgm+Ja4nQ5caHu/oEVVZXFGSnW1jb9Q5PVWUk+wclsl87xFhKSZhYW
I8Mjiio69Hr9aEvRhfNnGzonyKYJgRElxa1LEz2eDs6DbG9SJtLPJyenJCLQ
O7e0izwtSQkNjE4dbqt1dfXl0tOqu5NbWU0Xn+Y6G8v8Q6LmuVa8zEgfeze/
+eWV7qo0Wxcf8np2XKhvWCpZc26wwdnFc3KW/2GlK06NcPf2qyyvKs3LsL1u
09o32lSY6eUXyTbwLQx4+gSWVxRfs7TWsHvQjQ9ODzQXX7Ww7ByepfSr/k7W
gZFpNLPk6xfcPbLMNvalBPuGRZO9+LrYW9r7LKt1fQ2lVlevdQ+MMdrlxoa6
pop8kuTUbIKl/Fx8Skuq4kNDRmc1XGXYffS1VHgFxFF6dbCrTXxmMXmhMS/2
qr0HOdzM+NCMmvaViR53R9eBKTYgx/q5F1Q2NBZkWtk6z61q5sYHm1s6hloa
Q/1CZ2bnSYF5CaHRSciDAAAA8DWQB40hDwL8LWgmNz7M1cM/LsTb9Oz5jtE5
Elt8Xa6HxCeXFOdXFKbb2ntPTc+np6XUtU2T1TvKcpKT4vimsfTwxKaW4YH6
XHtnt8qKMvK94+/snJFa0V2f7xfEhqxQb8+ugbmS5GAn75DKssLSghIPW+eM
nAqGi6KjfXUh0al8F8qs2JD6th7yYHGyx98nlNapAt3twhIySwuLKvLTrJ09
uoeW+I6eZSkRji6ecVGBx0+fauhi+3AGedgHRMYVF+WVFec5uvnU1LclRwY4
ubmXVTaRTZIjQmITc/nstjrc4u0TuLi6FB4R0z/BDmtTkxUXFpdIHkRHx1a3
jJKjSo3wj00vlE5PVpSvg2dAVVlxcWERiawZiZnJ0ZGDU8vSPYCDjUXeIbG0
bjklNnxFS/M3B4Z7eE9Mr5TmJ9Z2j/VV5dvZ2FdWVxTmF0X4e6Smp8TFRpa2
j0rjj052NMYHJTPScKYAAAAAXwd50BjyIMA3xuWP9Gj/nKpm8sDP3b64spM8
8HV0jEnNqi4tLSwsbGvvYSh1dExCXdskWb27MjslOo5PMhmRcS3No73VqU6u
XjU1NSUF+RUVVTPLWmZpKCAwtL25JcQ/mKyXHO7tERhRV11GIlVtbf3yioYb
O4Ua7Cj3i0rjB1HJjgstrqghZU4Ptgb4RKnVan83+/isgqqSkqKigva2br1e
y9/9R9ZMLaogm4R5OqcW1pOi/N0cIxKSK0uLSG0bGpr4sVwKMxIdra5l5Jdm
JMQmJZdycZDST7X5B4QuLs9FRSeMTK2SRe2l6eTQ2Ja76LjiKjaQJoX6pBXX
MOJIMumRfi7+gfVV5UUFhVX1zeqV+QBP58L6Lim5FScG+4QlUYw2JTJ0SsW1
I9LqQHePmfmVkry4mp7JtrJMZyf3xtqqosL88oqamenxiOCAur45fjYNsv5g
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
e0747C2NDypXki9a+hgvjvwpHYMiJiheEgdXocSujAaxV2tQOnfsjHjM9Yln
7r33p3f954//73uftwtroinNqdee3fj+yXmNXLi40cDFzze+sMu8Z1nRqCq3
fykHPuXzrpBqh2szfBxdVTq+UZKPP/r+ksijH767/cC1gUUtiaUVbh8+fN+P
LROKLD995J8f/UtoywLZsCzissnuz00OnThwaK/pKZuWURVfelmU3/lz5kU9
swbnjRYb/mjpTZKbeqvT3LebWpUOrgq9d2nllow0ouZoY+Z1y7N7PvvY1M6b
ZEc2D073JvnamO7fs2P/tfr+eUaZ/oRD5ROvIlka9NFVXif8Jjo5HQtnTCes
3JthcWx/eEHLDZcEX25LRtBpk117jpgeOnTE0i9ueEY6TKlASrc0nh5ke+qg
yfY9V8paZwzewZVGy0vm7sHZctMk91pXgtfJnRfK2hf5RCxHS8UfHxiDcYFW
zDf//IGnns8oiH7zkXvuev/M5Cqp/GK485mXN31oE1WmF/+IwgAAANzOkAeN
IQ/CbYyW+uZJt4Bp/FJL06uH+WckB/EtPsujoxEZTct6mtKrszILTewzxhbY
7+LV2RH/xNJ5tU68R85gBoSv2jM1fuTZB3/8H88EZ1X52u754fce3XkymQ2e
9Hig9cl339ntm9zBVYlSaWaTncw/e/e9Q/YRbTNaLqXomNlOx32f7tp+JL9h
it3p0khuZlxt7xSJP/2NZSlZZXNamqLny7NK6psGZ9pjdnyy49r1bL6Gk00F
p7Z8uH2vWVpFj9BKN1h4Zd+7Hx6yyOlaISuomyJe/T8/u+vpHRHJ0c89fN/3
fre5dWbJ4u3nn37JxM3X7diR4+mNE+xOtWMJYT62rh4x0eGVjc0qPZ+edOrR
+hN7Pn1/x7ny9gWhHZDWN2X4b3nv06MnvVqnNQytqcnx3vP6A7/+zaN77fx8
HSOrO6b5US4zT2x84Mc/fWmH/eQye9rbI81+918POabWXtnz5I8efS5vUEUz
q6kOxw4dP59V1tRYVVJaUTur0gx0VcXExKWn5ZTXVrPVYCPMaltj3eDU4lhv
TbivT2JeGTlz5P1cGmtLCvDxD0tomyTJlqrPDd9z9FJYcnZKbHhCYbNaz48P
s9xdXxga4BMUkdI/viS8YZqpcAuTwzZeQytiqCFZLMnz5J6rlV1z0ns+Nzmc
FhPs5RuSVVy1qBEuCfFa0DHCkDjU3GhLcmSAn19EVUMfd/XNNjW29fb2lqbH
BQRHNI5M8Bm/r7UsKi4+xO36yQNmKZVdxn8KICetMvT6sc/P5tZ2lcQ7fPLe
Yf/ETnaFlbGi5ABvz/CSllmplbY/N+jU7ku5jTN8Idr50eKctNiYpMzios7x
KaGHLaWuyYklO/W2Nj9ywKq2Z57b2XJJapyXlxfZC7dXHaNZai5OC/HxDI1L
7xvlA/iq1ZZn7t3wekNn2UuP3fPIxyfUbM5fDnU/98eHfv3EYbvBJR19w98x
AAAAbkPIg8aQB+H2JTTXKNqwaEYXklNR0buwPDnhGVUSEF90Lbywe1ylXZpJ
yGoWekvSquT4stahZfaD8sRYaEalTk+n5FU0dkzUVrdF59Ql5tXFZNT1jS98
1b6p0RPP/vF3Tx4cXqGYFdcX7/nlO2cSGWr47KuvPPLAhqeffvrRx162SWhi
6AWbo2/99le//8vrGx97csO7Jt5sJSfLdrz+9N133/vLX//qB/e+FZHVRy3k
ffzU0/vdS0jBMWavb3h5R+mojqJGjn+26f/72f1PPfSTH3z//he3+5K9toac
ef4Xd9/zywfuvfue32861rFArXYlvfb8048+8+wzz/zh6Rc/qBlcaQs6/NgP
n74Y0UlyRFfs8Qfuf8SyaCBg9+v/9s93/+CNN3/10+//vw+/l1Y2zqz2Xtq7
89W/PPmb//q3P22/1LpAghg9lBey+cENv9vwwpOPPfb0W58V9y2TUHDZ9KOf
/fj799//6D0/u3/LRRcdpQ0/8faDP7rrrv9998Ovb3319a0+me1cHqTiTv5l
m9n5kVUdn1m606z/+Nu3Y0vHnc5ufmDjOwPLJFNoUh1PnbdxH1+lxaSzWpri
YXL42IHde46esWidXOH6v877XLt89LDZ2TPHt3285YJj6KKWWh4uunLW7KTZ
xVPHjp0wtx9dUY81ZR3YsX33weOmR3dt2nHUJ7mVnMChvATrowfNzpww3b9n
72WvjmEV23ysmQy/sv+ondfwil7q+9qc6Hb6wLWq7nmab0ycbHS9YrbL7Oxl
8/OHTS+mlrQz4rA5Uv9KsppqsCPkwvFjp06dMtu/69D5+MohRjfkcvWcybFT
x08c/fijD/bZhUyt0CsdiSf2m2zddfjzXds+2WZW2DREM1qxnU6e/6Mq3OX0
QYua7qHieLe9+81LW+doatzP9txukx0muw/s2Xc6pa6b4ZJjZ3bgub0XC5tm
+IqoBivtr5rt3n9oxy4z57ASrjxtXrCTyaef7D50ZNuO7Z+ZuvZNaRjNTLz7
hQNHzc6dPXHQ7EJARg/5qZ8R6WKy64jF5Stnjh2xCYpVaUiOXnTYu+WR549o
1KN//fOjbxyxZMSGztHcCzutXJpmtHxHZeRBAAC4rSEPGkMehNubcnI0tjlO
HZlTXT+p661tMLGO7xyciU0utE9rZdQr8Vl186tcD0zdSnRMRdvYMll/YXIw
JLNGrdf5xxWWtIyMDc/Utw81dY3XtY9NL6x8+T4phpq+uunZf7/rv//ykT88
+Kv/euCpNxPq51rjD/7wX7736tGAkb64Z//X//jBE/vGl0b2vvSju371mFVs
RX1eemnBANl9xOev3f39DbsTBxan8p74+U/vf/f8xETJJ/c99plNLik82vSp
x59+L3+AxNXRbe8+8s93/WCLmWNbd9/EwhIzX/fGH+75xeMbU5onpjuLYxOz
plUrTh8+8K///uujkU2Nscd+8H/9P+/YJSS4HLhvwytx3RpyrOP5Pu898OL5
7C6XT/786G+ecSseGC6zfuR///L1I356WjM5MDzclvzqH3/6T89/wuZB/dy5
zQ//t//5K4vY6saIoz+763tPncnUtl6/73v/8sePDg9PjtYXx6an55PzPT/a
c3b7q7955qWUyq6+gdbpuWXutDApZ9/YdcCsfU7ol7g0Um5u4dE8tlKWFml1
3Y9rYtLmB17Ya7LnxIXLFy+Z2yfWqPT61aXxweGBohAbs6OnKvvYosgevK+a
bX7vY/eY3N7e3rnpJRIb464e2LHXNLFuoCE7YOeObY55zf0NmftNjnsmVk+P
97md2md21n5yldGO9Nfm59dWFQZan9y05XhcwRj7ni2OhFzZY2ZD8qCc7+qj
vU8evlLTscAHH5LgzEw+2H7Wta61u6OpZWxqWXnfonAXHrneFqY6SgtLK6vy
41x2frLvlHMJTQ/aWBzacca1tW88M9R69wm7mqHZ8EumO/edb+we6cj2Pn34
UHJVD3tfp3QzonjJNie6ntix/fA5c9N9u/Zddhhc0g0Vepjs3uGf27o823/9
1L5dx1xHFtm+o21p/qcOXCpqmhFu6tQszY6MDnRUW+0/aWmfxpY3XXX8gMkh
6/Dh0aE0ryuHD9j0LVATTdFbP9p2yStzaLTF5tBWE1M7jXbZz/7kyx8fjMms
6u7qGBgcZXsjU1RZWvgFu3iGWvaxs/ONLBbGdGWYxtgzO63c2mdog9kPAQAA
bk/Ig8aQB+F2ZziOpzY0q7p6dLWtsik+r5E87+jqdEiqY5aW4rIaltTcJ3HN
UnR0cduYijxeGh+OSi2fXRWGfalt6MypaCur7MgqaxudXPqSHXL70U+Zv/ns
z793/3N/euyuu/7bZtsKsjDp/Ovf/8//2PDaOx9seuOFDU+89oHFlJrso+bI
1lcffOiJPz3/dmByuZZSHX36od/eu3NoWU8+11/e/8xdz71dUZW794nnTAPq
ScGFFm8898JHxX1ahhre8tofHvroqEa8dUtdZ/fgvT9+26ucqyx/r9rgkcd+
eve/3fPndz56961Xn3rqmQPB5fnuxzb8/Nnr2YMkOIxmXdnwwOMXc7vs3v/T
x7vtufvWek2e/MWG9w6vCFNyLO9979n/89InXYtaRtO9541f/es9v3j1nQ/f
f+Olpx758zGHioagvzzy7z/3Lp2Wbo7j44zT6fd+9/q7M2ppmj22K2Xy6be2
HzjWOiPfySjPvyG05qqyPM6anjoXmZafm5lW2jqkEWcGGS8NMD99prx7mXtL
J12unjtiFcGIkw9S+knHQwf37jniEhTq7+FkYXU9pKirIT/0yDnX9nl2dJ3y
gFNHLp5rX9JPdRU721x1dPF1sbywd/fplNJhdtcLw8EXdh938mO7CdMMfzdi
ZbTziYPXOkZXpUPrbc6wt7ly+fy5a27+jYNz/HSOyiGByEqq+f4oH2dLa0cf
d8djuw7b+pTTVJ+j1QmbxBqSodoLIw+dca3v7bUyNTO9ksBuOVHqcPZIZEmn
2KVZviuTHGdNpOuJgxeKWofn+ko9z+ywi8uNc7109sSxMRUbvipCXHZvM28f
Yf800Zrkc3KfZVXPgnwRsqZ8Tp+0dkojjzTdyWZnTYNq58kOpgqjzx2w7Jxa
aSt027Rt/8VrHmHBfrYWF7y8Axa1emp1LMrd+dKFi5etrCJy67iesZQ4jQj7
TaSIfFR9NJsHWxf4u1/1iIMAAHBbQx40hjwItzXDMfPJZ1VNYHZV7chKV2Vz
SGo9xWjrm9vs4uuYleWY7KZZjTCAf2ZqHXlMPo8vjQyGplXNaoSBGUuqOmLz
m1OKO2IKWwYmlr90p+R/3fjhpx++f8Oh4bHWT5/7/o+f/mhwTl3mu+Wf//t/
vH06aXx2srmquG1klpltTYmIyG2dnxuv3vXcf/7Hrx7IGqEC97x89/cevJY3
Qc8XPf/LH/7sHbPJkZI3fnLfpovpy+P5Wx//z1/84eO6SYqiBj75y+MvbDvM
3krIH+BM2csP3PPTP75V2LdAz1ckpMUMTM9e23Tvj77/uFtqy+LUQHZu1ZiK
mqvwfupf73nwnavDw+3b/vzg//jlszkDM9bv/OmRh15O65wdLDO//z/ufccs
luHnjNCPbn3rDz/685aOefJ4at9b9931o4evRbXPTvdVVbJJuT/Z9Nf/8/sP
f2w7vKQdrEhJjEmeU7PnyuP42//2k0evpwyQnLqgXeHDTuKZN3buO9Y0pxOH
LtExitFLuAE8l5Ntj1+2diVpmJGGh+V0pDlfMD1Z0rvMjlVKjbtevXTCOUNu
SqNXwi8d3G5imlI/sDA70lzTQoJkS3H4vj2mIUV9qoUeezMTs4s+Wt2K57Wz
m3ZYtIzP1SWQMHUmoXiEjWCr4yHX9u2+4tA6vqij9HyqrY90MzM5klTWp9Ww
TYGT/a3VFY1zama4Pv3Itrf32wbMqhXj/4jjrFale27+6KB/VsfSVNk5kyOX
3AsYut/e0tQyqoAcTnWq755TDjVDA/7nzfYcdxueW2rN8Di870haRZ8QthS3
ppKrrizUiaS89vFV7VzTpV1bzrnH1WT7mu47GFY6wiwPO509uPWo08gi+xun
IzXIbOfB8MIOtWZZT4mdTpeGnI8dt3RMZafkmC44cejABffMpcWZRIdz+/dd
712kRmvDt2z5/HJAxuT8dE93e9fIHEPNtzZUdY7NL08NepgffJFE5ib+Dkpx
Pg6DWTWYuqiTOyzdW+YU00ECAADctpAHjSEPwu3OcAB8nX9SQcXQcltpvXts
KXleUdt4OYrkwaX4nHq1nlqenc3MqT7r8P+z995Rcht5nufOe3f33v2ze7fv
7b7bmeu53d6Z2ent6e3umelu9Yy8KEoUKXpS9Eb0TvRGpEjRi65Y9Cy6Ilm+
iuW9975Y3nvvbWbCJhLAhQGQyERmsihqWi0yvi9VQgKBiF8EkODvg1+YWJ+o
iq4RSraMB6eWCTbWPzI/t25Im9HR83wyCHYGtr/167/8zfphRq5POvcf/8N/
XXo+TOZ7Vn/w/i/+r9/Mmv3ph7OWX8ocANS2e8Gvfv4v7y5duvi9f/z5h8s2
d5pkuS957cd/85e/+u0//c0vf/4f3/PLapfEoS0f/vrf/fu/nrVg5u9/+Z/+
YtbuymFOkvqWzvz1Py/fYRG0AZJimtfB3/7n//1nv33rH3/xP38xa01xn9nc
GPbpv/z273/93uzZH32yZHd604QkmZ+dXvxXf/VX//mv/9u//z9+ufnrOFCj
G4s++Nm/+9/effudv/5/f/YX/7o+F3c7hMvN0Zu/eOv//mhNLZrZsjjT/+2f
/fq3f/vHT+fM/mTV3owBqyhNnN8x/z/8xf/zD797+zd/9z8WbDkxwsL26Sl5
+sf//nf/7q9/896s2SeCYCdSwHFxR+dt3/9Np0VdeEGSdOsw4tX9qKgrh46d
vY14XJuwE6ZvSLhzdO+BwjYKdcocvnHq6O4rYayorLoOEo03Zx49umfr1ye9
Lp05dexu55S1uyp+56rVWw8eO3Jgx5rNxyNyekB2yX5em7bsP3352rmTO9dt
OxKV048Kslan3t+8acPOw8euBGVMWWHUcrwt+9SedSs37jh181GjWRgrjTm+
bfuh87cf3rm076tdN2LyYIxOH3xG3T07q5P2b9916OQVr6snNmzZev5BoSR2
e53cAxtBFp/HPNy470rVqDRY/PDApnVfHf7m0L7dyzftTy3vkLUVDPE9BltM
rn52Z8+qNXu+PrFv356tRy48b52QxQGf89+s23zo2OGdW/fsD8htUeZE6i26
vPfLZZt2Hfe+WdxNK4ZZ2m/sOnDmWioK7dERd86uXrflwLEze776ct1e76Z+
RmbGo68d3rp3z5krl0+dORmQ2i0JY4HXDoJGu+fz5OShw1tP3m8YYGzq8oKy
rPsJoAU4OlPPbb50p2lCnXKJiIiIiIjopyzCg0YRHiR6rSRZW/vGx2jb1Nh4
c9cI8GnHRqfqO4fZsZGQ+Oe0KFOjY1GZtZF5DWHpNa3DZmZ86ElsIS0ISdnV
VR3KDayOL/M4b4bEF0WHPQlONUFYE5ICvXyj0+EpY81Pvv1q3bp1hy/cL++0
ABya7MzwOrVjw5qNx89daxlkce9Jbqjy7KFtq788GJrci0qTJzoyvtm39ayX
b2VZbkZuMVoWgc5ICIvOKhRtagAUueg9ZX77t63evPHos/h67LePNBcc2L1j
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
+faNFw6dz8XtwPXUgYdheWX+nTMHvvpqs3/G89Cz+z7/aMaFsALZ3HTnm01z
Zs6fP2PGSd9EWWYrI8+s/Pz9jzceyu3pTAlIuHQyPuW6d3RYfGNZxt75s5Yv
2xyS2cCLNp4XbJKpKtl37cLPPpm7PS6no7k6/+qhFasWv7f6oPc4K9NdZfvX
LH9n3vI1i5Y/zayCQUBZrMt5+umi6zWdZoC3wctWXtx3dWCq3/vw6rf/OHf/
pXROoHKeHA9Ky8yqKq0dYHvy/ebNWTL/wwVb9x+ObJiytmds//yTJau3F3SZ
ploSNq6cM2vOIt/IIgCqnJV3unbu0MCl9270vd0hhrubxKU/79IYl9kaZSzX
eIqHKhj3eyh0Og1ibAGX9XJqB2NrvFBOBhtbzGiDMYE7M1yeZTzk2TCX+btM
4LLBPVRH/9Xl9WJgD20rGrTLoZGD4lBTfER5C3wFRERE9BOXEw9+j/lkfuo8
aFxA54fiwYK8fMKDRERvmJRhNchFggNr2jMi80tygcsEo28cnI5B52uxHnw2
114Zaz+EyxsfH4cP4bT07MysxsZGs9kMABA8f0pLS5OTkwsKCrq7u/HzGbCh
PU88vSfw62TrSHtpSGhETFBAcHTOyGhzVnZ+aXFJelJcfl7Wndv344sqypLD
7j+KLsyIf+B9MzYtNz02JDw6JTchPOBpWFZG5LVbj0paOyvzM9PzatFIRFG0
tW9fsemtGatu3Lx8PSC/uSQqLMwv8Mnpt9/69YFzVy7uO7puwVd3rh3Z8u6M
0HD/Ixs3LP3izOObx5Z8sTDsWWDYvWNed27vW/SHVVeu+fln3fsuKfPxo7gn
D88umrds3cFrB4/ev/hgAA8KNNfcvub19aUbR9Yvn7fm7qNTJ1bP/8Ln6bUD
8xeGJ8XdOXFi1eqLj32vfPrhjAvhhTbUpa2vMvpf/7hg074zfl7rPvrvn313
NTX58ceLdx/1uX1txYztN67GlafdjsuKuRsQ9igiY8P6xeuOXn6yd9vm+asD
cmqPLd584OiFs2vnfb161ZcLZi2et+TItxf3nPCZBE0rOM8LxDCMcZ4fl+73
Sx3yTB+e5fLE6dg2HdBwRyVOCdyhB224/10U57h+hzFPl2zllLm7DaP9jCu5
q7WxUHcXyKWRLivu+SobW9tYWZfZussZ73HqSEAbm5Fl0HwyFvgDlPjemvjk
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
KSu2CjA3nuUsFlo/7QPe7unp6ejo6OrqAg9ksNHZ2Qk2wFewAQ7hZDglmuUF
TpIJQBIwTXZWRkNZwbOKsf2J3d45PedSOvxKe0+l9d4sHvw2sd23uPtYcl9p
c0dGcjzIEE5SynA0WpQBzxeKZ1/hbLJEjWRGhcQWdoC6lGRH+aWUtVQVRUfF
V5RmRsQm9ltsls6imIT4mJhQv6DQsurq6Kf3fWOyhofGx8cnOQ7O2ipThZu+
uHD9bhlsCqHtmy+v79nyMKGwqrr8yVcrVu44mjZWdicsPXtycjAn1Tc2r8x3
49ydJy553fzu03fmen93Y8v8D//5Dzurq54f3bxl1cno4vQ778xfe/Lg7nUf
zj3zNMUvIzn03v1Dnx2rm5LEkcAdKw8+8AoO97rdTQnMYOGV+4FHti5fuvf8
oHni+oL9XtcyZNtoaXHK/aMbtn65MTC/8MSOFZ9tuEyBJrPBAYx4JXQ8xej3
c4q/94k/lH50A4jeXKF5dtHz09pVn5Je20rGDxIRvQYiPGiUZx4cGnDzcWyr
oaEhwoNEP4o4atQrOLvPxKOwmlxRXOObXNvdNZSU1wpgZ6CrJ6uybWRo9NS9
hKsRpQOjEwXlTU0DFow/hSU1RS2jCGrY8Nyqtl5LSVH9s7Sa+KzqsJSKziFP
9zPutAlQSN95UkEorS+lEllTw2raqdpR9FXrL6p1F1V4Tj1dkI19R6EBdnRV
oFDSzpUcS5GcU4iSuqy55GgqDmiqrCvb7GMw7QuW6+OG6mAaZehcW3pUaUW5
DR2EMGLRdeJC69aBnR5aVVZ7itrdMRTV4ji41F9ZaXF7fU1q7eD1woHA8sFH
hW1JdX2+BX1RNQP3C7sja3vvF/ZWt3QW5mT29PQBA9D8mRa0CD1aEgJOvMnY
BFkyD2THhEcXtsLiJtqSgyOePYtIK24abcjJKKyE/t5ER1Zi1MNHj5OCHgMe
zEpLTimqwdW2wDCzKFtyNiy9+sSvFtSa7QjatGnvN2ce3b1wOTEq9NyJcxfv
V4wW3U2oqLFNdN87c8TbLy7i2snrQc9u3ry5Zt35murmwmc+55d+Ge9/79tj
u/c8yq/MjfW+dDYyOSc2LMH77pVjOzed3Hf5q9UB6EINHFx68PrRq5HXb9Oi
bG4MP335/Mkz31xK7ZHEoUNbbkQmtqK2p2/vnH9o29LgwjI/nztel4LhaFAB
zlcDY7McnEtHDbb+GenPzZ7XUqSRv7fguxTU1x0+CUV5pCUlubqJ8CAR0Wsg
wIONjY2QXwb7X/Bxw0H19fWAnl4/Hmysb3CLfm54cIjwINGPLeChm0d77yaW
ccrMHbKpryOmqK6kotsvugzs6W1u8YkvBRvRifnlMBRoTS5ubOunZBQyS80t
L2uDwURRpsKzKloG2YlJqm94sm/UNDAyznj8h1/SBdTU+V7swwbVXppqSA4H
8uxRR1Gyh/bsdZHsR+1xObRTsHcxtYf8lAI0S9Qwnz1kKSlT66BDKLlNVgN/
ShW0GVNkrdOpbnIe3dhA1TbVVHs8FO3Gw+rk3uK44ODg4ueNjABQU6TgKu5w
4B4cu8c5RHm0oI8++uM0h7wy3ybKu6enp6Kioq62uqq+ubK2pqqusaamrqqu
Hvytra2vqausra+rrqmrr62rrKxsaGgAFARsgyvCoyAjCg6iqWVAE1h6U0Ke
PMtqwpUtj35y6/b92gmebs329X2YUvg8Kzk2NCa9JDc12C+osLgoMyUxt6is
ujynqrWTRawrMUXLZ21euvabJz63ty35YsOJi6lPj6xasdrr9t0vl21YffBp
e96NI1e8Au7c3vvZR3sv3rx5fPaWQ/t37ruxfms0upJUwpmFt33vXb16+quj
5+/duHTriLev950jhy7fvXN6zbuzD+8+e3j9xrMXrl85uGvZttu5SQkPDi0/
ccX70uYZe3Yf+O7y8RPh5bLEPziw6cvNey+f/Wbn3oPHTx4+s2f9hYteF789
cc23AJQCcBDNVgpxWFkk8SXldGmwvkc+P6yczHhFk/5Na2QwlUef6Zb4srax
dikFecjhe1Tc3Sm6cu0JpsOhThka85/OLffCTKafm/NRlrfQZo4XZJHpri+J
fXovurxVP0sZERHRT1TAoyA86CRQl9zc3O/Hg0OEB4l+VAHHmp4YuhNZTIvK
wLq+ltZnGbXVdb3PkqrBP9vD3R1h6VUArOISS+r6aXC/pxbXNg5SiGWsaXlV
Ze3DMCORCs2r6RiiKp/Xx2VVJufVx2XXdo1Q7svV/0+WHdjQvsKF/ajo0I1T
nWpGQSl70E2hNsecNVDUhx3RIYXydBPO6LuP2jt5quvOS3qzJP2GKGpMiIN+
uk6wToMcNWDEloiyVZ8PY+rIjomPSiycYmFKOJMMB71TOLEJ4kHkcXFwD3JZ
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
bu/ydz5euCE1MyPi9t5N65et27bRK66Yt8KAODPedvnrr5cuWLJw0ZIbEdmj
lcF7Vu7csGD16nXfRuQPoKXuhzODL2zesn7N2hXH/aMBn146eGLNso17DwZE
R0cePeYNGKoz/obvnYvpoX7AS96yes298NieloSvVszbuXPnJa+Hu7fsW7tm
+frDV6uKCzIjb2W2UTgCWJMdu+v/b+++39s49jXB/0f7zP4w8+zOMzu7c2fu
PefuPefYlo9tWTk5SFawLVk5W8HKgUpUTpRESZQoSqRIKkcqJyoyZ+ScOgLz
rSoAagINEBQpkwLfz+3jCzYa3dWFBlQvqrtr3ORhX/x93PQ5t69dXvj1f/xl
1Iw79VbWFWV7seAff/2v/+Wb/XvPTZw4bfQ//2Pi2DEr9t2R/G93rlswduz4
8Qu2Vb92ir6hiuOb/+Wv/zZ5wmffDZ9ccenJlVMrx3z21/nzF87bfPndq5d3
CuZO/fKbscP+ZcwvS6urby768ptJ342eMOr7ohNnj8we/3//p/9YtfvR06tn
lvzw3Q+jhh/YW3S7fP/Pk74eMWrk7EU7H1bu/vx//Ld/TF3R5GTt+bDl8rQv
/+2vX805V3Lyfu2DvRtmD//s/1+561j1gV1sx8eMPXi+ymJ5+M8vPxs94osf
h48sKDhl63jyx+JZI78dMX786nNVjbcPHbhaWnK18sTVhzf2r581YcQ346ZM
3nHjZZTf4rjjVeWCOdNHfzviuwmbLl6p3bVoyvTvPxs74ht6N90h1+YZc78d
Pfnz/xg2eeqCRp/Gh630bl4x+3/+5d9mTvxy+rh5bztd9yuOTxg+btgXf/th
/prXj25ePX/o2qNbZ67VPHryeNnPY/72zU8//uXzeWsKGzq6ipcvmjTy69kz
ZtfceHht06ap48dOGzWhcPdZD+uniwUenRr9n/+ff//H7AMHjn/x1bipY/8x
YsKM05feNt0umDtjzLixI6YW7Ko6sf/v/+d/+vL7FfU+9qvHlR1z9l+713a3
dOl3U489dtZXrN22/8C5Nat/+/br6VOnVT95dO3M5pF//5c5KzeXF58q/GHc
9yNGrNm+vT2oic7Z2muV07+e9O330//2v77YcqyqsfbFoqmzR4+aMnP+maNr
Fv/r//FfvltV/OZ2xe7JkyYNH75y81Zr0Ht20+bhw0Z9+dWkBWvW7/3ju//+
3/7fVYcv3t+/ceGo0T9MHHf82g2LtX3ZhF++mjj9H3/5bObirdYI67SNtF2c
Nuwvfx2xuHDh1LF/+9flyzYdO144bdSwcZ99M3/2lg5fy8bF07/9l2GTh4+Z
PmX80inD/j5iyr5y9tuIHtPstRfOX6ygT019ZdHov82tdVErTonfnlSMSRpm
90EKSMFEEgwgDwLkqw/LgxSRklO+5sH6urfG3ezdZLXR9PjhI7/XN9B7AwCD
hciD3QKf2d1LUq666nYdUPLm8Ib1dI+VGW9Daljy/bDU1DB0ND08e6K6qcvH
ms7htsunzp09eKSo9O6rV69Kjx09WXW5uOjY6aprD1/Wv65/VXG65PbT1pjs
ePGy9v6NiqKDx57Ud9Q9f3TjwfNntytKq29Jmv7k8uXSikfvnt+9+fSNp7P9
Wc31OzU3L5w7/c4S9Lc+LSsrffbmaVX5hdp2b8fbe+UVlxyhYFdLi8Xuk2U1
pkf9bdcnj9lRdoGdGxlV6xZMLFg5/2j5w3cNtXsnj/xx5ea71ns7T9+q9Vnf
XL904sb9RwXf//sPqw57NZYpXl7cNGP++jeWyKPSP35dPL/40I5VSw66Ip6j
m/csXneT34uka9OCCZ//uPzq5ZKqR1V7NiwfPmnjk9pr47+e9NPMP3au/OVB
e+PRjbs3Lt2y+bt/rt1y5PHV1TMnjFyz9PdJ348/e+PVq5qaQydrnlw998V/
TCs+fe525f7rzfzcxVDbwQ0L5xRU69HwzuU/rCssLKks3VP+ROO3W4npwfJT
Fds33oiF78+ZveLWK9u94mOr5+2+dOS3GbPmX3x4c+FPk8bPPsIu29WlipNb
pyzZ6pRjz4+sW7C6YNn8H8b+vLy5s/XQhtITGw6uH7/oTmtYeXfsx2+Wbd96
dsPsP17Y5Cf7Fu3Zu6Py0Zvtf1TEtOaFo36Zuvjoi6o9i7/++qcx3/04bMzO
Czf3F1+yW5+eOHX4yO12frZqNKY6Dm07U7y3punhoYrqUwt/GTtpcaHL0bz+
s7+t3VPy4MLc6eNH7jlc/vvK5bdbA+GHxYsXrt57tYbe2boXR2eNmzx/1c37
p49eP3fy2vWyK9eLfpgw5peV+69dPXyutpHdmyqqdb69V3i25t2LvdPH/LRy
7YVts5eW3rdY75/cvXzxqdLChQt31NvCj8q2zP59fq2Hn46utRduWDRne4mm
+c9uWLF4y851q5YWnG+Iqe2/L/hxTeGuqrKTt5/cOnr64rYdBRMXrXdG9HfF
29dt3Hdo54ExX848d//+5jFfLpsyf/WUUbMXFVaeOH/twk12VGh6TLfv33T6
XMmzrpdnfp2zzSYFjixetXHdsfrGygsPa28X/Dpt0ncH7loubthy+0U91Us0
Gq2t3vvj9gvXz+756r9+u/7Qo8tb/tg1f8bML/954PKD0k0jfv1x5jJKkjOW
1DlC+yZ9uWj+yvs1+2eP+Nflh2vZDbtC7UVr5yzYcjMW9e9bN3PniYPbly0d
Na3w5Yuqr74YO3t+QVnhgXqfp2jqt/OmLbj95PSS7/65eMGqtQvXnLrbEXbW
Hj514vXdogsXS5+/ernk7/9ra8nN6yemTB87YdOKtavXn/TI6sV98xeuX98e
oE3R58V+aOv54qIHB3/+6/eTf7V6WxfPnzd372U93LFj9oJ12w+tXrX+UGVd
88MTU8bNaw5oh5at2rS1SNdiiqTSR5WdEnzv2E9jhq/Yek3mJwnzSzFlVdYi
kiKrSkiWkiNZRHC+KED+6ujoqH9Xx/KLzWLjU2+zz9u3b+/evZtneZD2qKH+
Xd/zIPoHAUBgF3PJciDw/p4b4j4YqZ133XNcSlQUQ1qnx8bkWG8pa87U/yhJ
CjtpVA5TC9DRcL/sdLXFy/oKvY2PThw+dvbE4fOXrj589OzqlUvXnz17Xffu
wa2qiorKmtvXLpRe7XTI/MIl5e2DK6UXayJarO3Voxv3nr24T63pFmrWO+oe
lFddfv7s4dO6pojLUfvo9p0rl27cuc2uhQtab1SUXa25fefRS1sgFOpouHP9
iiWsiovdqCFKFeVruvLThD03KLboUanxxIzpSzduO314+95rFw4uX7pxf8nr
zgf7btZ1Ka66QwVrD58qO7l2yerjV/38VpP3i37fX1bFarurctuGlWsLdj18
/Yz+rD5SvmvrVRYHpeDrh1Uni7ZuXrp22e+7dq2a+9vmomu3bu/ctq74/IU7
1w8vWbV+w55jp2+8+GPED5vX77v/+OSGbbsLVi78o6jcK0drKo7O3ri1ouz8
sunLbly6dOXioStN7HzRqO318R0LS9/6YzHVdm3Tqp1bqEF/rLqRthhW1GjM
U332+p69D6Law12nLrf4o6671y4dPrF3xZi1s386d7dm3/aC7TvPyBTTYs5b
F49vLG1ifYWRR7+uXLNgydIdNzooWRRvKd6zbO/SHw+z20mqr+dO27Vxdemh
HTfkaMz9+GTljdJLNa/2brsTVV9Mmzx/2u8nX9wt3bNx57FjV0uOHl+99vel
i9c3vLt34uLlymdOqm1+p1N78bbyswfvtzw5dv7C0YLtWw8+dsakhnmfTdy+
7XDNw5MbNu88VVS048y9EC2r1/+x58CqgmNHtu66VHZk5fJ1u4qePjh+5Oq5
U1crD158XP/wcvHxwvULZi7deuoBDxZ6473y9au2XbtweMWy9XuOXT646dK7
d76YreZC+ZF9234/Xn2V3amq6WZlSeEDB7/iL/SmqPjkkdsWmt9ad+W7GQsK
Nq2gqEjp8vm5tfNWbTxz5ljNq3vHTpZs27Vz8Ykn7NK/8PNDZ0s3rF4zctK6
8qu3zu7YUnjg1J2bZ0t37l68aMHKfYdsAX5RqNp5cPvFyxebPbaqLWfY8VBb
dPzy8TOXq4sK9hyr3Ltl/fpd1a877mzbXdfhFhdRu7paVkycva2wYFPB/uJN
i1fuPluyY+/c4dNKKqsvVh3auG7r5jVL1l9tpaS/ZuxPS2dvfPD87KYt6/ef
e8HOWLa9PrXtt7J37MPleVhcXnZkw4oFs7aevH27elfhup1HjlTuOatp3i2T
f1k4bcWDp5U7Dx5YP+vXYycLrSFWcRFdb645dftuVUPjm3mfT9h35Pyt+8fX
bthaMPeXcy/r2MH28kzpuSOvPLRrelS1Ht9RcXb/zeqNP5Q+qoupbWs2Hz5e
46L1lBUf/nn6iqKLl57YFOe7FwWLL9KR8/zooYunS4PsUGO/BdWWF86ePbuw
9CrbZy2avKuvHpXjdx2WJTG6ZXK0TeRBgLyEPJiO9qWmpqbvefDJo8foHwSA
JMqDwWDQNKylZzcpIRnxTONeymJZ5nR/zJt2ssTyYPP9ogPFNU8bGt89OX+y
qOzWwxcPrpw9c/5d/dtbV67cu3X93u1bjQ1vK04VHzpZdfbCxaq7T9+9rqm+
VH6lquJ8xR2vpNY9u3317vPau+WnT5bX1dXdKT9RfeN+04ubFTfuvK178+jO
pYfPH1eduXDr8Zva+1eOlVx50/j88rW7rS7V1fDiyqWrXQH7uxePmrqs4s75
/qZLY4bNXbLq4JWKM3MnTZy5duuFvfN/nDrnXOnpaZN+W7SpvOnm5jVF5yr2
bpr77ddbikoPrPlm8sp9Vj/FrljDtX0zxi/YW3TmyKpZyxeuqijZW3LpUjQa
Prf9dMG6y9TM1e31FbtXHi0p2/fHnFGfL924cu3SjTtLzxXvWLyt+lpD2P1g
2P/1P0bPKFA03+5pPy5ftun0sZO7Dp4/enD1sj0nnCH/9uW/DJu4pLzixNiv
pu3bs7/y3M7qhhB/a20la1f8PHlreVnxhp+mHDhcXFp9tqDkBbvlB7u00H/t
YNGCMRsf37uw5XBFrU9rulxWvP1g+fHlv8/7+ejJE3u3bjly6ilvjEdKd2/6
x7DfSs+c27ty5oqVa3cULN9Q8TqmW3esLD6143jh7FmHis6c/GPid9/+sv1A
5c4VZS4parmx+9yV89fvPVg6ctXTRzV/LN00Z8H+krNHT+/dtGXjoc3bTxXv
Wznhf35VfuPGgd3blmy5aA+x21dGdevBDaf2b7/edO9IydnCzZtXFNyxxpSO
gik//r66oKToyK4jVZdvnRv71fSNO0rO71m2YOmqnatmzZw+68yZ0l8mz/51
5ZEbe49cOV1UXXnocNH+U/u2njtXPH/8d6OnHOLDWCjVW74b98O882UlM36c
u2DZzu2rzj6vdWotl86W7C+pPLHgtyWHTpft/HXcrO+mPHHxj4du3zB74Vej
l1VXnl6/YNbmI4d2LVoxe8GeC+f3r5728+H9ByrO7b/ysJoOwiP7j876YUHR
mfLChaMWrVh7/FTF9J/WFhWXHS7cerS46NCaNaUXLq6Z/sXXk2fc6hA3rnHt
X7jtj193Pbhfsvb4HUmL1RzYV7rvwMZpo+Ys3lx5ZtHseT8frm4qWbKscO8p
Z0gTP3fsnfbZl5+Pf9n85Oev/33k6sPW+nsrx4/fvL/41IEj+06c2bN9yeoz
j2PR0Il5Mxf8tux40cmC7YfKX9pi7PY/rjOFK6bO3XjhwslFwz/fvmPP6TOF
v63cduHCicJVuytPXto3Z3nZ9VsnVy6aN3VRUfHp3XtKzlSdWr1w7sa9x4/s
XP3riq0Nj8/s2rGm6PzlLT/8uK5g/+nDRwqKK0pO7pw7e8XpstI1E76YN3tZ
s0/cx8ZycEPJkYKLZ1d8e7yc9UhuWrrgpzkbzp09uHTOr4XHTu87cfraG0/n
87ur5p7yKNq1rZtOHy4JsIs79XBj+Q8jho2eVXD3/pOnz9oUyXGpouzesxcv
H1+pvFLX8fzmmfMV9S5ZUeIDx4gvEHGD4oH6CgWAj6TvefDdu3eUnvIsD967
d69f8iD6BwEgSdxPJj0Pij+l7jKlwvQsaVwmPQyar1kKsdsrhlVVifndbZer
SkvOlJ09c7ry5kOPpMcU54OqspLS4spr9202W92DS2VlpafPX3neaHPZ310s
O33s+Kk7NbUdja/uPXzhjyjtza9r37S9vVd19vhRaq+WV13u9KtBR92Vy5W3
a569ffXEEZSbnt4rPXX8+NmymjqbFup89PS1zSX5rU0vX7xyuNvvXat+3tTF
xkFTo5r/zdKFM7/56uuxIyfPXXDUocSCrddn/TJl+vSpU6fM2HK4rO31vUWL
l58ou1S0ecmPE0cvmvnD0oX7Gl18hBTdV7l/05hvv5o4dcHt127Pq8vX7z+h
5v29S3cqLjxicTMWely27+dRoydNmHHk/Mugr+n4psmjv/18zu9b3jnkaLj9
6MZlG4qfUx5wvL7x8/QJ3/zzh00777bUXy2quO6KSHVXi+ePm/jjjHm//rRg
/6HSx3cq39mDqirrsai348nm+VOHf/PVgnWHnaHg26dXK269jmo6G18gGvO+
rdgwcdqWbcfL7z6xhHXL0zs3SqtdEWfpysVjPv989qLfXzTyfsaY/ORG1U/D
p04a8e2EaWvuP61/cu/MsdtNetRdefr2k5cttVeOrfht4S/f/H9jxs86VPX8
esUTyuPO2iu3nzxzOBt2TZm6eVu1s+v173Mmfzny+00na+qf3lg1Y/zIsRMW
by93h+Wr+7f89POKe80efvth740Ldy5ffdP5+tqDe5fOnT9T/txGJeh4WT1t
yvjhw6buOPzIH2xYPG3J919+M37cz4cqXoXsjxbNmjZ5+pRpP01dtX13zcWb
Lx7eefTgypO6t2c2Lhn35Yiff1t37bFF3Hmz/XkVe9d+njZ92k9rNxWcOPaw
zRpULU/vXqtq9kvXDs+fNO6rL/7+tyXrCm3hqK6yi0XPHTkybtjE70eMmjxv
t02K+ZquL58ybsTwkZuPXvF2NTy9c5mdaXzjUUe7rXzvqpHfjhg+bNi6g+f8
WrTyyOZRI7+dOGfT/XrLw4o9k8aNHjf610MnayIqG8iPdupl2Y5lE2YdLK6s
etSo6srL6qqHN+7fu1L883fj5/46Yd7MZaerGu6c3bVg3vzH7T7WTabJDytP
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
F6bKPGFFWIqUI4mIxPoKKZHxFbG8FqEoGghSNBTPsmwcCojcpMfiXX5UEili
CPW0X7xTkkJ54nRc8+OH1k9F5VkszPrXqOzx/kTWQycpLMPS1uPXorJCpl8X
GV+Z2BdKlBQDaTF+fqmP1s+XV1m6jL8LujgBOOX1FP1E/2CM50GKqKJbT45I
/IWsW5TXpErFEIk4yovEthoKJ868jcYSF0OKHvBkFo7GFIrJyIMAADCk9D0P
ip9tB3o/+lnmm4vmUkvIgzCI8ENRXO2libRCD/gBHhNdftQKZidPqvFbLLL8
aLifjLgUS3wismxFdEJRkvJ7A7JOqc0d9AfYlXcyOzU0FJT5qiT+oWAlokwh
Ttd0ez20Yinoczs9Ig+yMw59rF8s6PVQUhHnYbJOHxamVHYRnDgVUwQrXfG7
XYnTONk+0drDPjfhu6mKk2OjukRr4x1SrLeItko5NESzXGwxigAejye51zTb
5wvEEnmQtkiLsZ67SNjr9vBrHsW5lUokQIkjaqiBeKW9rxZdpVwjwlbi1imp
eVBUCIWj5NvBohEFn1CAFkh857DlZCmcPCuSwo6qszMQKGHxyyQpP1Oyiwco
kQfj2028lRHeR2l4z+LnA7PTKYNB1SwR0rO08njnmhwRF4FSmmMF4xXOblqq
yPRsKBDW4jFNSl62mb4+1iFMZYhq4mxV0eUnOgr5iaPvSyhyZcrrKQ+yFCli
PbumMyyu6IyvNibOMmW5j9amq8nOUP5TgsLypkj9KafFvu8V1eldDkZUnNcB
AABDSEqXFvKggDwIeUM39A+Ki6fEg2QeFGeQanq8VczOtdNjvT2AecejHvJ4
vJ4g75EJOu0O3vbWKXR53b5QKBAI+XmHpB4Ienz+IDtfMd7ZR0WRWTbzsAvB
3E4X6xiKavykU2cgwK7oo9XyTah+r4/SX3ybHGVJl8vF1u7z+P1+VnhZojxI
S1I04OcusjxIa6EY6PWxPr5ImN0rOBhwUwilrErloeWTd1+RQ34qvHg5bTTC
nw0EwxRLKduysCByH2W9YCCZB/ksw8PErV3C4eQ5kPHrB/mzGg938WsPNU2h
bXU/I5fFNCo8hWh+yaeWOB81FInwEy5DLCAn86A4ddMQoNjtdGgOi7F6fLW8
m4xyU3xDsiSik04rpAeKaj7QIa1T3AFG3OCFHzksWPGO3Xj/YIwHMd67JwWD
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
    "], {{0, 815}, {
    1200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndUVNcWh8+9d3qhzTDSGXqvUgYQ6R2kV1EZZgYYygDDDIhdRFQwoohI
UwQJChgwGorEiigWgqIC9oAEATUGo4iK5d2RtaIrL++9vPz+OOu7++x97jl7
73PX1YhPD0mAAQBZBHQIYee4CIXs3FAZ9CFckMVPFPC4PgIRL5EnZMVDqNGb
gg6A4u3PF6TDqFeaQCQM8XJlRkXHMPH9AAZEgAMWALA5WRkBoZ5hEm8fDzdm
FuoEvghd6vWQZATgpol3EJMJ/j/JcjKEInSZIJQXcnlZHJTzUU7NEWVI7NMo
0+NTJAxjJCxEN4iygoQT59n4s888O0uYmybgoizZcwY3jSvhHpS3Zot5KCP+
KBdk83k5KN9CWTtVnMZH+Y0kNo3HzgIAI8mOtojHSULZXJIoYViIG8qLACBQ
Er/i+K9YxFspkhzKLT0jV8hPTBIx9TkGTAs7OxbTm5eTyhOJTILYnBS2kMt0
S0/LYAtyAZg/82fJSXLLRJNsY2FnY2NiaWrxVaL+6+TflKS28/Qy+HPNIEbf
F9tf+aXXAcCaQXOz84stvgKAjs0AKNz9YtM+AIA0Wrf2a1+dhyHplySRKMPe
zCwnJ8eUz+OYShL6h/6nw9/QV+8zlSz3R3qY7rwEtjhVxJTkjZOemi4WMrMy
2Bwe0+TPTfyPA/96H8YhvASekCdAIyLQLuMLEtFyC7h8ET9dwOQL/lMR/2HY
nzTf16ho9R8BfYUpkLlGB8ivfQBDIwMkdj86A/1RN39iBJDcvEj1ifm+/yzo
31eFiyUD+hn5HOcWEsbkiIXZ83OSawmwgASkAR0oAjWgBfSBCbAEtsABOAMP
4AsCQRiIBssBBySBNCAEOWAN2AgKQBHYCfaASlAD6kEjaAHHQAc4Cc6Bi+Aq
uA4GwT0wAsbBUzANXoM5CILwEBWiQYqQOqQDGUGWEAtaDHlA/lAIFA3FQYmQ
ABJDa6BNUBFUAlVCtVAj9D10AjoHXYYGoDvQKDQF/Q69gxGYAtNhVVgXNoNZ
sAvsB4fBy+BEOBNeBefDO+ByuA4+ArfD5+Cr8CA8Aj+FZxCAkBEGooGYICzE
DQlEYpAERIisQwqRMqQOaUG6kF7kJjKCPEPeYnAYGoaJMcE4YLwx4RgOJhOz
DrMdU4k5jGnH9GBuYkYx05iPWCpWBWuEtcf6YKOwidgcbAG2DNuAbcNewA5i
x7GvcTgcA6eHs8V546JxybjVuO24fbhW3FncAG4MN4PH4xXxRnhHfCCejRfh
C/AV+CP4M/gb+HH8GwKZoE6wJHgSYggCQh6hjNBEOE24QZggzBFliDpEe2Ig
kUvMJRYT64ldxGvEceIcSZakR3IkhZGSSRtJ5aQW0gXSfdJLMpmsSbYjB5P5
5A3kcvJR8iXyKPktRY5iSHGjxFLElB2UQ5SzlDuUl1QqVZfqTI2hiqg7qI3U
89SH1DdSNClTKR8prtR6qSqpdqkbUs+lidI60i7Sy6VXSZdJH5e+Jv1Mhiij
K+Mmw5ZZJ1Mlc0JmWGZGliZrIRsomya7XbZJ9rLspBxeTlfOQ44rly93UO68
3BgNoWnR3Ggc2iZaPe0CbZyOo+vRfejJ9CL6d/R++rS8nLyVfIT8Svkq+VPy
IwyEocvwYaQyihnHGEOMdwtUF7gs4C3YtqBlwY0FswrKCs4KPIVChVaFQYV3
ikxFD8UUxV2KHYoPlDBKhkrBSjlK+5UuKD1Tpis7KHOUC5WPKd9VgVUMVUJU
VqscVOlTmVFVU/VSzVCtUD2v+kyNoeaslqxWqnZabUqdpr5Yna9eqn5G/QlT
nunCTGWWM3uY0xoqGt4aYo1ajX6NOU09zXDNPM1WzQdaJC2WVoJWqVa31rS2
unaA9hrtZu27OkQdlk6Szl6dXp1ZXT3dSN0tuh26k3oKej56q/Sa9e7rU/Wd
9DP16/RvGeAMWAYpBvsMrhvChtaGSYZVhteMYCMbI77RPqMBY6yxnbHAuM54
2IRi4mKSbdJsMmrKMPU3zTPtMH1upm0WY7bLrNfso7m1eap5vfk9CzkLX4s8
iy6L3y0NLTmWVZa3FlIXei5cv7Bz4QsrIyue1X6r29Y06wDrLdbd1h9sbG2E
Ni02U7batnG21bbDLDoriLWddckOa+dqt97upN1bext7kf0x+98cTBxSHJoc
JhfpLeItql805qjpyHasdRxZzFwct/jA4hEnDSe2U53TI2ctZ65zg/OEi4FL
sssRl+eu5q5C1zbXWTd7t7VuZ90Rdy/3Qvd+DzmPcI9Kj4eemp6Jns2e017W
Xqu9znpjvf28d3kP+6j6cHwafaZ9bX3X+vb4UfxC/Sr9Hvkb+gv9uwLgAN+A
3QH3l+gsESzpCASBPoG7Ax8E6QVlBv0YjAsOCq4KfhxiEbImpDeUFroitCn0
dZhrWHHYvXD9cHF4d4R0RGxEY8RspHtkSeRIlFnU2qir0UrR/OjOGHxMRExD
zMxSj6V7lo7HWscWxA4t01u2ctnl5UrLU5efWiG9gr3ieBw2LjKuKe49O5Bd
x56J94mvjp/muHH2cp5ynbml3CmeI6+EN5HgmFCSMJnomLg7cSrJKaks6Rnf
jV/Jf5HsnVyTPJsSmHIo5VNqZGprGiEtLu2EQE6QIuhJV0tfmT6QYZRRkDGS
aZ+5J3Na6CdsyIKylmV1iujoz1SfWF+8WTyavTi7KvtNTkTO8ZWyKwUr+3IN
c7flTqzyXPXtasxqzuruNRprNq4ZXeuytnYdtC5+Xfd6rfX568c3eG04vJG0
MWXjT3nmeSV5rzZFburKV83fkD+22Wtzc4FUgbBgeIvDlpqtmK38rf3bFm6r
2PaxkFt4pci8qKzo/XbO9ivfWHxT/s2nHQk7+ottivfvxO0U7Bza5bTrcIls
yaqSsd0Bu9tLmaWFpa/2rNhzucyqrGYvaa9470i5f3lnhXbFzor3lUmVg1Wu
Va3VKtXbqmf3cffd2O+8v6VGtaao5t0B/oHbtV617XW6dWUHcQezDz6uj6jv
/Zb1bWODUkNRw4dDgkMjh0MO9zTaNjY2qTQVN8PN4uapI7FHrn/n/l1ni0lL
bSujtegoOCo++uT7uO+Hjvkd6z7OOt7yg84P1W20tsJ2qD23fbojqWOkM7pz
4ITvie4uh662H01/PHRS42TVKflTxadJp/NPfzqz6szM2Yyzz84lnhvrXtF9
73zU+Vs9wT39F/wuXLroefF8r0vvmUuOl05etr984grrSsdVm6vtfdZ9bT9Z
/9TWb9Pffs32Wud1u+tdA4sGTt9wunHupvvNi7d8bl0dXDI4MBQ+dHs4dnjk
Nvf25J3UOy/uZt+du7fhPvZ+4QOZB2UPVR7W/Wzwc+uIzcipUffRvkehj+6N
ccae/pL1y/vx/MfUx2UT6hONk5aTJ6c8p64/Wfpk/GnG07lnBb/K/lr9XP/5
D785/9Y3HTU9/kL44tPv218qvjz0yupV90zQzMPXaa/nZgvfKL45/Jb1tvdd
5LuJuZz3+PflHww+dH30+3j/U9qnT/8CDLcAuA==
      "], "RGB", "XYZ"], 
    Interleaving -> True],
   Selectable->False],
  AspectRatio->0.6852159282448246,
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{516.3390625000001, 354.},
  ImageSizeRaw->{1200, 815},
  PlotRange->{{27.168512208971606`, 1200.}, {0., 803.6428165814879}},
  PlotRangePadding->None]], "Picture",
 Editable->False,
 Deletable->False,ExpressionUUID->"ee567724-789d-4951-99e1-937c94b5340f"],

Cell[TextData[{
 "\:8981\:83b7\:5f97\:8fd9\:91cc\:63d0\:5230\:7684\:4e3b\:6570\:636e\:96c6\
\:ff0c\:53ea\:9700\:4f7f\:7528 ",
 ButtonBox["ResourceData",
  BaseStyle->"Link"],
 "\:3002"
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836989094423579*^9, 
  3.8369891050656967`*^9}},ExpressionUUID->"7e8ee392-944f-46b6-8214-\
acbd16e8f4ae"],

Cell[TextData[{
 "\:53ea\:9700\:7ed9 ",
 ButtonBox["ResourceData",
  BaseStyle->"Link"],
 " \:63d0\:4f9b\:6570\:636e\:96c6\:7684\:540d\:79f0\:ff0c\:5c31\:53ef\:4ee5\
\:83b7\:5f97\:6570\:636e\:96c6\:3002"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369891137655563`*^9, 
  3.83698913349537*^9}},ExpressionUUID->"436c3ca4-3360-4142-b537-\
eb766ff39656"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fireballs", "=", 
  RowBox[{
  "ResourceData", "[", "\"\<Fireballs and Bolides\>\"", "]"}]}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[50]:=",ExpressionUUID->"d5b8557d-bbac-43eb-ace5-8a90ae0856c7"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "DisplayedRowCount" -> 20, "RowCount" -> 8, "Length" -> 92, 
        "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "PeakBrightness", "Coordinates", "NearestCity", "Altitude", 
            "Velocity", "VelocityXComponent", "VelocityYComponent", 
            "VelocityZComponent", "TotalRadiatedEnergy", 
            "CalculatedTotalImpactEnergy"}, {
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[GeoPosition], 
            TypeSystem`Atom[
             Entity["City"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"/"Seconds"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"/"Seconds"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"/"Seconds"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"/"Seconds"]], 
            TypeSystem`Atom[
             Quantity[1, "Gigajoules"]], 
            TypeSystem`Atom[
             Quantity[1, "MetricKilotons"]]}], 92], "DisplayedColumnCount" -> 
        20, "DataRowCount" -> 0, "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "PeakBrightness"} -> 1, {All, "Coordinates"} -> 
           1, {All, "NearestCity"} -> 1, {All, "Altitude"} -> 
           1, {All, "Velocity"} -> 1, {All, "VelocityXComponent"} -> 
           1, {All, "VelocityYComponent"} -> 1, {All, "VelocityZComponent"} -> 
           1, {All, "TotalRadiatedEnergy"} -> 
           1, {All, "CalculatedTotalImpactEnergy"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "PeakBrightness" -> TypeSystem`PackageScope`AtomShape[75], 
              "Coordinates" -> TypeSystem`PackageScope`AtomShape[106], 
              "NearestCity" -> TypeSystem`PackageScope`AtomShape[90], 
              "Altitude" -> TypeSystem`PackageScope`AtomShape[75], "Velocity" -> 
              TypeSystem`PackageScope`AtomShape[75], "VelocityXComponent" -> 
              TypeSystem`PackageScope`AtomShape[75], "VelocityYComponent" -> 
              TypeSystem`PackageScope`AtomShape[75], "VelocityZComponent" -> 
              TypeSystem`PackageScope`AtomShape[75], "TotalRadiatedEnergy" -> 
              TypeSystem`PackageScope`AtomShape[75], 
              "CalculatedTotalImpactEnergy" -> 
              TypeSystem`PackageScope`AtomShape[75]]]], 8, {}]], 
        "DataColumnCount" -> 0, "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[994017456], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "PeakBrightness", "Coordinates", "NearestCity", "Altitude", 
            "Velocity", "VelocityXComponent", "VelocityYComponent", 
            "VelocityZComponent", "TotalRadiatedEnergy", 
            "CalculatedTotalImpactEnergy"}, {
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[GeoPosition], 
            TypeSystem`Atom[
             Entity["City"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"/"Seconds"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"/"Seconds"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"/"Seconds"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"/"Seconds"]], 
            TypeSystem`Atom[
             Quantity[1, "Gigajoules"]], 
            TypeSystem`Atom[
             Quantity[1, "MetricKilotons"]]}], 92], "HandleQ" -> True, 
        "Meta" -> {}, "RowTarget" -> 8, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[994017456]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"PeakBrightness\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"PeakBrightness\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1695076515][{All, "PeakBrightness"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[All, "PeakBrightness"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Coordinates\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Coordinates\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1695076515][{All, "Coordinates"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[All, "Coordinates"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"NearestCity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"NearestCity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1695076515][{All, "NearestCity"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[All, "NearestCity"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Altitude\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Altitude\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1695076515][{All, "Altitude"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[All, "Altitude"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Velocity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Velocity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1695076515][{All, "Velocity"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[All, "Velocity"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"VelocityXComponent\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"VelocityXComponent\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1695076515][{All, "VelocityXComponent"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[All, "VelocityXComponent"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"VelocityYComponent\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"VelocityYComponent\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1695076515][{All, "VelocityYComponent"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[All, "VelocityYComponent"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"VelocityZComponent\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"VelocityZComponent\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1695076515][{All, "VelocityZComponent"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[All, "VelocityZComponent"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TotalRadiatedEnergy\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TotalRadiatedEnergy\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1695076515][{All, "TotalRadiatedEnergy"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[All, "TotalRadiatedEnergy"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CalculatedTotalImpactEnergy\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CalculatedTotalImpactEnergy\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1695076515][{All, "CalculatedTotalImpactEnergy"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[All, "CalculatedTotalImpactEnergy"]],
                  "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Thu 8 Oct 2009 02:57:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[1, 
                   Key["PeakBrightness"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"4.2\[Degree]S 120.6\[Degree]E\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[1, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"Bone\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[1, 
                   Key["NearestCity"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"19.1`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[1, 
                   Key["Altitude"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"19.2`", 
                    
                    RowBox[{
                    "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[1, 
                   Key["Velocity"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"14", 
                    
                    RowBox[{
                    "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[1, 
                   Key["VelocityXComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"-16", 
                    
                    RowBox[{
                    "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[1, 
                   Key["VelocityYComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"-6", 
                    
                    RowBox[{
                    "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[1, 
                   Key["VelocityZComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"20000", "\"GJ\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[1, 
                   Key["TotalRadiatedEnergy"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"33", "\"kt\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[1, 
                   Key["CalculatedTotalImpactEnergy"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Sat 21 Nov 2009 20:53:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[2, 
                   Key["PeakBrightness"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"22.\[Degree]S 29.2\[Degree]E\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[2, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"Kobojango\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[2, 
                   Key["NearestCity"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"38", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[2, 
                   Key["Altitude"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"32.1`", 
                    
                    RowBox[{
                    "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[2, 
                   Key["Velocity"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"3", 
                    
                    RowBox[{
                    "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[2, 
                   Key["VelocityXComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"-17", 
                    
                    RowBox[{
                    "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[2, 
                   Key["VelocityYComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"-27", 
                    
                    RowBox[{
                    "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[2, 
                   Key["VelocityZComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"10000", "\"GJ\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[2, 
                   Key["TotalRadiatedEnergy"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"18", "\"kt\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[2, 
                   Key["CalculatedTotalImpactEnergy"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Sat 25 Dec 2010 23:24:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[3, 
                   Key["PeakBrightness"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"38.\[Degree]N 158.\[Degree]E\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[3, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"Kurilsk\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[3, 
                   Key["NearestCity"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"26", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[3, 
                   Key["Altitude"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"18.1`", 
                    
                    RowBox[{
                    "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[3, 
                   Key["Velocity"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"18", 
                    
                    RowBox[{
                    "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[3, 
                   Key["VelocityXComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"-2", 
                    
                    RowBox[{
                    "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[3, 
                   Key["VelocityYComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"-4", 
                    
                    RowBox[{
                    "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[3, 
                   Key["VelocityZComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"20000", "\"GJ\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[3, 
                   Key["TotalRadiatedEnergy"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"33", "\"kt\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[3, 
                   Key["CalculatedTotalImpactEnergy"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Sat 21 Apr 2012 16:08:23\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[4, 
                   Key["PeakBrightness"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"15.8\[Degree]S 174.8\[Degree]W\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[4, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"Hihifo\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[4, 
                   Key["NearestCity"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[4, 
                   Key["Altitude"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[4, 
                   Key["Velocity"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[4, 
                   Key["VelocityXComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[4, 
                   Key["VelocityYComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[4, 
                   Key["VelocityZComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"143", "\"GJ\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[4, 
                   Key["TotalRadiatedEnergy"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"0.42`", "\"kt\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[4, 
                   Key["CalculatedTotalImpactEnergy"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 23 Apr 2012 22:01:10\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[5, 
                   Key["PeakBrightness"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"36.2\[Degree]N 107.4\[Degree]E\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[5, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"Pingliang\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[5, 
                   Key["NearestCity"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"25.2`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[5, 
                   Key["Altitude"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[5, 
                   Key["Velocity"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[5, 
                   Key["VelocityXComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[5, 
                   Key["VelocityYComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[5, 
                   Key["VelocityZComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"44", "\"GJ\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[5, 
                   Key["TotalRadiatedEnergy"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"0.15`", "\"kt\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[5, 
                   Key["CalculatedTotalImpactEnergy"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 4 May 2012 21:54:49\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[6, 
                   Key["PeakBrightness"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"76.7\[Degree]N 10.6\[Degree]W\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[6, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"Illoqqortoormiut\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[6, 
                   Key["NearestCity"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[6, 
                   Key["Altitude"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[6, 
                   Key["Velocity"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[6, 
                   Key["VelocityXComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[6, 
                   Key["VelocityYComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[6, 
                   Key["VelocityZComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"229", "\"GJ\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[6, 
                   Key["TotalRadiatedEnergy"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"0.63`", "\"kt\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[6, 
                   Key["CalculatedTotalImpactEnergy"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Tue 15 May 2012 11:04:17\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[7, 
                   Key["PeakBrightness"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"61.8\[Degree]S 135.5\[Degree]W\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[7, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"Owenga\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[7, 
                   Key["NearestCity"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"33.3`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[7, 
                   Key["Altitude"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[7, 
                   Key["Velocity"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"-0.8`", 
                    
                    RowBox[{
                    "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[7, 
                   Key["VelocityXComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"1.1`", 
                    
                    RowBox[{
                    "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[7, 
                   Key["VelocityYComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"17", 
                    
                    RowBox[{
                    "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[7, 
                   Key["VelocityZComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"132", "\"GJ\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[7, 
                   Key["TotalRadiatedEnergy"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"0.39`", "\"kt\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[7, 
                   Key["CalculatedTotalImpactEnergy"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 25 May 2012 11:31:24\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[8, 
                   Key["PeakBrightness"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"41.8\[Degree]S 36.2\[Degree]W\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[8, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"Grytviken\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[8, 
                   Key["NearestCity"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[8, 
                   Key["Altitude"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[8, 
                   Key["Velocity"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[8, 
                   Key["VelocityXComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[8, 
                   Key["VelocityYComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[8, 
                   Key["VelocityZComponent"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"60", "\"GJ\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[8, 
                   Key["TotalRadiatedEnergy"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"0.19`", "\"kt\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
                  GeneralUtilities`Slice[8, 
                   Key["CalculatedTotalImpactEnergy"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    92 (-8), {1, 92 - -8 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 8, {
                    1, 92 - -8 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 8, " of ", 
                    Style[
                    92, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 8, {
                    1, 92 - 8 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 92 8, {
                    1, 92 - 8 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    92 (-8), {1, 92 - -8 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 8, {
                    1, 92 - -8 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 8, " of ", 
                    Style[
                    92, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 8, {
                    1, 92 - 8 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 92 8, {
                    1, 92 - 8 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1695076515},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 4 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1695076515},
                     4, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 12 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1695076515},
                     12, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 40 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1695076515},
                     40, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1695076515},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1695076515][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1695076515]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1695076515][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {2471., {252.75, 266.25}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[50]=",ExpressionUUID->"1c288eaa-ea0f-4d78-b308-d8c62cb609d3"]
}, Open  ]],

Cell["\:63d0\:53d6\:6bcf\:4e00\:884c\:7684\:5750\:6807\:9879\:ff0c\:5e76\:7ed8\
\:5236\:7ed3\:679c\:ff1a", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836989146093747*^9, 3.8369891605759277`*^9}, {
  3.836989242913764*^9, 
  3.8369892451784887`*^9}},ExpressionUUID->"8c1363f5-f503-4038-b556-\
b3d3152f3739"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoListPlot", "[", 
  RowBox[{"fireballs", "[", 
   RowBox[{"All", ",", "\"\<Coordinates\>\""}], "]"}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[51]:=",ExpressionUUID->"1b7fa695-466c-4261-b14a-7f5536e648c9"],

Cell[BoxData[
 GraphicsBox[{{
    {Texture[
      FormBox[
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJztnUuvZcd5npXLIMP8hfyLTDPM1EF+gI0oRiYKIAcI8mvcEGSADiRYMkK4
GYBsckCqRZs01SJaJMUwks7pwJJoy7Zkg0YL6PA5dd7e36mz7reqtdY7eHqf
3pe1116rqr5LfZd/83v/9Xf+8z//yle+8gf/6st/fud3//u/+/rXf/d//Id/
/eV//uPX/uC//P7Xvvqf/v3X/ttXf/+rX/+3v/cvvnzyK//sS758/7/88uEP
37l6YYwxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOM
McYYY/bPgy/5zvvXL159cvUl1zd8673rF3/8F9c3z3/3g6sXf/T9q5vH9Pf1
i288vi52rnz/K++mc/7TD65f/O8Pr1689dHVzSP/f+3D6xevP7168fDL3/P0
+vrFT3+e+Lu/T/zDb57defz53yT4+6//Nv2tz1z/8vrFZ391/eLDn12/+P6n
1y/e/uT6xbffK3/PjDHGmAjyERmNLEQOIse/8TjJdeSZ5Nw//eOzlyAHJff4
+7dfJCQj+Zv36Xn9P8pL4O9nn6fveeujBOfwoON8OTd0C527nkfG8lnO+3/+
RZLr8IOfJlmsR/0e4LvjOeh3xvN+/kX6vfrt8bUh6Ho9/+Ly+9ER0A2sFxhj
jFkT7PLXnyZbFDn46f9LMg85xONvft0s25BbUb7PIeoO0h/0/R8/u37x3me3
5/jx1c3f7/8knatkdNRBOB7yk8+B7GzeG3URjs9vfe+zqxfvfnp1Y5fPkeX5
sdEleJTtz/cDz0unwJ+AbsVv41x4jvNAjwF0FvQA9C70Gu6VdKGHt/4VXpfO
Y+oAfxL6ZX5f8HNxv3i99DkaY84Fti8yAxmKvYv8QfawLvF8bgNLDsuWj3Z+
Lvck2ySPx9i/6BiyuZHXyLc3f5T87vzNc5wnj7nOofMa8l1L6Cpz0TXKfwfP
If+lt+geRL9I/rv1GXQh+wvW48Ht3GmS26+8m/xijE+NVfRN5pN0todP0v4X
x0Gv4/1Jj1v+HOfogpwX58058n+Oxf/RUVkzAL2mywdnjKkL5DvrE7YlciSX
hcgYdAHkCPv22NesY8x1ZBG2KfAeXuc5jiV7FdATkEd99rNe1145OofWSs6R
70APmGuH74m4N5LLd8l/+Qy4L4qp2OM6jGxBZrKvhPzjUT4MZKJkjp57ED7X
dDzkapOtPQXpx5LlzAceFa+BHOR7eB/vIWYEHw3ynUfeIznJ68wVjsGY5jl+
k+Ji0jkvF/eSYlmuFhkTHOfRR3f1eO11Ab/FPidj6kNyFNtZz7HusA5JRg+x
lXkfa59kvWQxj8ht9AHJrab9fD0X4wGiT77JXtXayroKyLvSsrkEXDtdK8kT
rkvpsdWF/ErYvowb/i87WPsvjKM3nya5ejMef3F3D6dJL0J2SlbmOgB6rWze
Jrk3RxZGeYrdrxjRBy3H1tjV3g3/X9tW5pyW1gM5JvcLG0B2gOJf4p4f8197
WehgpcefMUehaz6zDrLOIhuYf6yp8jtq/bm89/J/jqm9ZH2euat5/Txbd5FB
8kezVqNTaB9bNmmb3qDP8T2cV1t8P89zPqw3vE9ygbVlqdiCPcJv5zpzzblv
XKPSY7JvvGL/cs+j3qffw3iIsZ+MH2zqxz9OuipyUnqf7GbFmmrsSB4vZeOa
brjuD26v+xtPk/0gX6D2r4B7y3u5h4oJ1jxmTNhPYEw7mmOsefIhMs+Sr715
3UcHQGaC7HNse8lt9AGOifyVbcV75LdL35f+L/uLucuazHEUax/383lER1Cs
ep/9Kt2E3yUdJM8bKC1na4Trgn9c9wh7bA/yjvWf82Xs6B4zhhmjshP1GxlD
jC8+ozEsX0F+3KgDmO3pG3uMT+4fuoByd25iX39xsQF4Hz6C3D4x5ixIn0Z2
E7stfyHrHnNDtpNsP8nw/DgpH/3ua+yhKrct+f4vvlKe4zOKm0e/gOiz43W+
T/FNfEZ5AOgEvIYslx8/5rtH2cXrnAd2HMfK123JNPYmOAfkg/LjtafA95SW
wSVRHgDjgv1m5WDuQQeIcO6KCY25kzwX4+iYB4x9+Zi5/45lXAbFG675HdxL
rSXy0Sif6BIHUa7GhzElYC5g3yA/iW9XnLv8n8jIlEt/9XK9y9d4nud9+XFT
XZ3770dupzl/mW8ptj/VrlEcU5T1zNcUv5zORf4H1uO4r6/9gRi/F3PlFfvU
tnbHfVO+m/dyTvJbKI7grH5/+Uy4FugA2v/nPuxN9gvGLjF+ihWRLdhG7ive
6+8eA2uA/CBcnza9vyTSIxSn+82Ge4MOgM2fj2lsgkts8fXLWArFbRw1f7Up
XqXr+sZHs1+we2TXap+M9U+ylfmNTowsVky3fPkxxovj8HnA/uO5OFd0DNYM
1lnNMa21yqmTTsAxFEumOC1eR65zrvgGyLnDN6GcdGKAH73Mv7vELvM3x9Oe
r+Kkx9ptzBGOp1gG+QJkA6s2j2IDYszC843l8xbwu/id3Iu0d5oeS4/pJRi7
b38EP7Fy8pDvmnOS84p/1P6a4mOZd0t+/9R4CZ278v84L2I3VctT61msw9E1
trU/0LTvpzWIa/Od98vfN/1+xaPIv6G6pXN8GUcY16Yd7ecrVgkYR6zpjG0e
NV9izRvpy/g/ZUtrT0D2NvOEz8lv8CcfXOKrta4gO2W38xnV2dUeAMfUPiuP
2tPX+xWzJ1uE8R/jBWOev+rzKG9rqes35H2sTW99dKw4gtyvwj3jdzq+eh8w
L5nrzB9ke/RlKVZOPjjmVZIl650PcXvokF1zSrFHmuecn+a61qg4PtfMyeX7
WP9K3T/lnnJP8twj2Wr8zXXib86X9Ra7h+uoeyo/SX7dbd+fA+kATc+zlqse
LXo1aK/9ZezMLy92b6wrwt8aVw+fNMeFp7l89XLfjffjb0Pv0JgF1gVeU306
+d/57twHH+c95xn3AuTfKDW2+W2Ps/p+e0XXkzXw8W1vAOXIH9FHeiSYo/kY
RIdDlm5VMydfd/L6Aoo/Yo1QTmYN+rP2CJa0I+Zex4c/vHrpl9TeqXw40TaS
b1b5VY8+uvhhVZur9vwdMw/JUfndWcef38pKxo5i3ZT7Hv388rNhN8hXP/U8
tLfO+aBfQLQdY66dYnNURzbmEUs3SCR9OK4t8m+Uvu7x+r/25H6NvJppsqNi
vqVyMEpf2zVI+fHH+G3MW+XZcA8Vv8ucqsHe0zzGZy1bgHNjjJXaQ5PNwHXT
2qP643PWFcU+zRmXbbIafQB0LUvfV1MPrGWM5yFjX3tdyGBkL/QdHx+B9u9l
v2NT3D2HqxsdVbHW2lfQnGJutOn66CbSE1TzT+/luxS3EP1evM7zqimovQGu
Q4kYpm//eYpLqFkHUO6kYia5VtIN1R+Q+8V1rkF2mHaQAYp/ib47/DVL+PSx
JVXrsfn723Vw2a553wmNvRK6Lueg2lCq5c0eidYrrSnaw1ROkPzu2mdsmxes
kboHmkOycx4+ma9XKGZZ+yKco/fyDWOjT/ZrTKq2bfSv83/GVazlg6xXHBjr
AGNf72fsxRghfb/iBqL8U14/x2H86zWe115ftDGZQ/G8mY98TjGFTTZr9Ikp
TkD+663z1l79y7RmIkdLy/o2lDepe8B9Vi+gGmO/zX2QBXF/mHnBfVzCLuT+
cyzV1ZY/SHqAeg0oL0j799SMYB5yDujypce5rotiG5fyNUhXiLqBbJL8vTzH
9fvgs2cv3pzhj5EPBd0u1riUj877c+dF9U2axjdjH/ueuTokr101tnPdAR0g
1xny8aaYghj/p0fmAO9RbZamGOM2/wDHZP3JY4F0fPkKYp+gOPcVb7iFXFMt
kthPuPQaKJSPEfWAeI3QW7xPWD+qV5TP86XGN3O0Seaplh5zl+/X/p7qeSjX
iLVB+gJrgnT30uO/BLHW5JtP79+jvv1W7Xlyz9vykqVjcA/kG5B+gq6whzmt
/HD5iZBVMe98K5skxTul796bPqU9ANn60XenuGDV1+M9yIMx4zh/riuXWv4D
7iu2AHKR/0fZzP/zz8nuUCyD5JTy0cfOP+11aA5ybNU2WuP+cp1j3ZHXb+uW
1tJHQLa/cvxVG0KvcY2XvC57zRvQuquYlCV728yF/TH1Boq+tnTvpl1vfpdq
bDXZEYwTjs1jnP+Mdc2pJhl/lv5ZQ+D6RDuE+6iaG6pXrLVKcXvqh8pc7fJf
tOkGUR/jXjWN35gnVmp8cy2QvehDqUbj+uuG6tDLfxPnknrU6Xntl6t+vXIs
SqxvitUb+znmr/Z61XtXMaWxnv/QOSsZHusGaJ8q/+7cf6DP5328+LzGvGRV
jPVvOxflJfadu2IitS+pGjdLxrmpFrnymNj74BpxvUutPbJDOBfpUvIXM5a1
98/jUvZCLfJyCIqdlk9VOeXMF8WJyU+itZkxU/L3qQ6X4ta05/zwySVXfKgu
p54eXWOI7+G9beN4aB/ssyN7fes6Y7KFYg+VNp8xOh1rWOzBsPT4LWFfY5NF
H/EU8jEe605L11L+heKr8jzbtty8iHJBY80c/s/8U1yd8mn4W3Xa5ZeLvcIi
iuGL81XyIe/DM2RMKbZGsQPxux7e1hbk3NRTJx6fsdjkm9fvZwwqVkf5C6rD
o/VOugvyVnXM+vQYvRb7AnIueUzjFJgzur6SFappWHI/IO6FylZTPCD3hjHT
pLsdDeVJK4fq8Y8v9ybGxjTFm+h6qV8AY1t5rrXpOuplndaNq5d1sdt8zn3+
NdYwPn/EulfmPoyb2LsNOYO922TzKjac+ITkS0rrvdY+6kAo7lKPfIdkJ2OP
mNG15pD61dSgnyq/muugufi//vIi14Ty8FWftulYWrP4Wzn88XWtVbE+nnQE
bEHJz66YdcUEaN8+l2PSKVNtwPSo2GFdb9XW4vfyGu9/Hq5HyldK44j35boh
3xuvgerU6fpJV1Jcgep/9+l6+m3aK+MaLRFTq17y6inDOWp/rvT4y6+h6o2U
lldrobHBo/QwjYux+m4TsR+1auukvbf5cfivPrnUpGxad2Wftf1u+ePy/SfZ
gjf+gtucMo6PfG+zCxVLK3+p9rVqinExy8LYRk601WNRrAHPMfa1/jKWptrY
8rXP9a1zjD34pJQrl8u3Nf1D0cZRnIDq90ovQHaxf01Mvnwa6vOH/qA6nOqr
xaNqCWjvVL27ZS+p7jbHys+J1z//1fXL81J+kdaceB+1Vx33QWLMhvYz1Q+O
39S2P6D1W/6VJXVQZICu5VY5ATHHKs5R5BPXAd28qXfD0WA8Kj4t1qbecj3Q
HiJzqM3fGf18nGsc03pNvj35+xnTyt/gNe1ZCK3J3Gt++5D4O8XFIOeb1h7t
X/N96sXJ8+rNvdU1NdsyNnZTvs8lvptjoVe05aB2EWvOW0e9j/bvlUMi+1l5
9sp3ZR3VehPXTvnOU97Y3Z5bepRvh/HAXkDM6++Cey4Z3pbbmNfqiPIs2jva
P1C98L5rop6Dyk2casNRazn2Fcx1mDXgOnM/kCHoX3PrOe0VxZxqDNXQ71l6
JmMw32dh7vEezSf1seA+Kt6/bU3dyh/PuWlvMvbZ0X7xkPgbY6aS+r+k+aCc
xzG6gPxVrO8ep8NhfnPN5+pQQ3p0RBRTEc8jvq5ev033O/UTvm/n8n75ffvk
gWIKZd+M9edK7sjHvHa8z029/gl68lFBhsr2XVtGIg/HfIfyYeNYUY6Kal4y
VkusU4px0O+Rn0H7bLalzFpIR25aK/Gf5rGnXblcqkErv590V3TqWvKx9kKp
fRTZs/IlyC5/ONJ/jeyW71c1A7DP3/746k79rw/+b/LT630x94Axk8c3dsE4
i/vMS16XGN+oGs+xpvNY1OcPP3WssXy3j9T1Sx9PW2xpDbAnnseLbDFOWWe4
fm88veSxxnhCjTH5rRSDo3zjmvpOo89wntSt0f5gTbEr5piwjml/STVdmuYF
OcuKj2N8qseU/H1NY1Vrek3zzNy9P+pPprWb+0hPYPUlZX3ti1FXr/D4/1we
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
xhhjjDHGGGOMMcYYY4wxxhhjjDHGmHH8fy0T0iY=
          "], {{0, 256}, {512, 0}}, {
          0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag[
         "Byte", ColorSpace -> "RGB", Interleaving -> False, MetaInformation -> 
          Association[
           "Exif" -> {"Software" -> "Wolfram Language"}, 
            "GeoGraphicsMetaInformation" -> {
             "Software" -> "Wolfram Language", "TileSources" -> 
              "Wolfram Knowledgebase with data from OpenStreetMap"}]], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {512, 256}, PlotRange -> {{0, 512}, {0, 256}}], 
       TraditionalForm]], 
     PolygonBox[{{-183.7, -90.}, {176.3, -90.}, {176.3, 90.}, {-183.7, 90.}},
      VertexTextureCoordinates->{{0., 0.}, {1., 0.}, {1., 1.}, {0., 1.}}]}, 
    TagBox[
     TooltipBox[
      {Opacity[0], 
       PolygonBox[{{104.30000000000001`, -54.}, {176.3, -54.}, {
        176.3, -90.}, {104.30000000000001`, -90.}, {
        104.30000000000001`, -54.}}]},
      "\"Wolfram Knowledgebase with data from OpenStreetMap\"",
      TooltipStyle->"TextStyling"],
     Annotation[#, "Wolfram Knowledgebase with data from OpenStreetMap", 
      "Tooltip"]& ], {{
      {RGBColor[0.790588, 0.201176, 0.], PointSize[Large], Opacity[1], 
       EdgeForm[{Opacity[0.4], Thickness[Tiny]}], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {49.6, -75.4}], 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {93.4, -71.5}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-111.7, -69.8}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-179.7, -69.5}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-24., -68.2}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {138.4, -65.6}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-135.5, -61.8}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {132.6, -61.7}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {90.2, -50.2}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-172.2, -49.2}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {139.1, -48.7}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-172.7, -45.8}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-176.2, -44.2}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {85.7, -43.7}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-36.2, -41.8}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-21.9, -41.5}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-95.9, -39.4}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-118.6, -39.1}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {87.3, -36.9}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-5.5, -36.1}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {118.2, -34.4}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-115.9, -33.9}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-61.5, -32.8}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {17.1, -32.7}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {137.1, -31.8}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {140., -31.1}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-94.9, -29.}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {121.5, -28.7}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-64.6, -28.1}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {51.5, -25.5}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-49.2, -23.3}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-38.8, -23.}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {29.2, -22.}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-25., -19.1}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {105.2, -18.9}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-158.6, -18.8}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-73.4, -18.8}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {141.8, -18.5}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {64.2, -18.3}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {88.1, -15.9}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-174.8, -15.8}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-155.6, -15.1}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-164.7, -10.3}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-111.9, -8.1}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-86., -8.}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-11.2, -8.}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {73.7, -6.9}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-49.9, -6.2}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {159.3, -5.4}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-66.3, -4.6}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {120.6, -4.2}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {76.4, -3.}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {119.2, -2.}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {147.6, -1.3}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-111.8, 0.}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {156.2, 0.3}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-52.2, 1.2}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {28.8, 2.}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {29.6, 2.5}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {64.4, 2.9}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-45.4, 3.2}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {137.2, 3.2}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {119.1, 8.}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-157.9, 8.4}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {117., 11.8}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-122.4, 12.4}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-110.7, 13.3}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-83.6, 17.3}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {141.2, 18.9}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-178.5, 21.}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-131.1, 21.9}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-132.9, 22.2}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-150., 22.7}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-165.1, 32.8}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {144.9, 33.5}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-30.7, 35.5}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {107.4, 36.2}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {41.5, 36.4}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-39.6, 37.7}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {158., 38.}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {2., 39.5}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {115.8, 43.1}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {35.3, 44.7}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {26.9, 45.7}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-84.6, 51.2}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {61.1, 54.8}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-64.6, 60.3}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {172.3, 63.1}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-149., 68.}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {96.3, 76.6}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-10.6, 76.7}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-162.1, 86.7}], 
        {Opacity[1]}}}, {}}, {}}}, {}},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, "Equirectangular", "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, "Equirectangular", 
      "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  ImageSize->{373.8828125, Automatic},
  LabelStyle->Automatic,
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{{{
          RGBColor[1., 0.607843, 0.], 
          EdgeForm[{
            Thickness[Tiny], 
            Opacity[0.4]}], 
          PointSize[Large], 
          FaceForm[{
            Opacity[0.5]}], 
          GeoStyling[None], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-75.4, 49.6}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-75.4, 49.6}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-71.5, 93.4}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-71.5, 93.4}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-69.8, -111.7}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-69.8, -111.7}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-69.5, -179.7}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-69.5, -179.7}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-68.2, -24.}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-68.2, -24.}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-65.6, 138.4}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-65.6, 138.4}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-61.8, -135.5}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-61.8, -135.5}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-61.7, 132.6}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-61.7, 132.6}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-50.2, 90.2}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-50.2, 90.2}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-49.2, -172.2}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-49.2, -172.2}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-48.7, 139.1}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-48.7, 139.1}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-45.8, -172.7}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-45.8, -172.7}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-44.2, -176.2}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-44.2, -176.2}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-43.7, 85.7}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-43.7, 85.7}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-41.8, -36.2}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-41.8, -36.2}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-41.5, -21.9}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-41.5, -21.9}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-39.4, -95.9}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-39.4, -95.9}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-39.1, -118.6}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-39.1, -118.6}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-36.9, 87.3}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-36.9, 87.3}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-36.1, -5.5}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-36.1, -5.5}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-34.4, 118.2}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-34.4, 118.2}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-33.9, -115.9}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-33.9, -115.9}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-32.8, -61.5}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-32.8, -61.5}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-32.7, 17.1}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-32.7, 17.1}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-31.8, 137.1}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-31.8, 137.1}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-31.1, 140.}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-31.1, 140.}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-29., -94.9}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-29., -94.9}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-28.7, 121.5}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-28.7, 121.5}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-28.1, -64.6}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-28.1, -64.6}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-25.5, 51.5}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-25.5, 51.5}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-23.3, -49.2}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-23.3, -49.2}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-23., -38.8}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-23., -38.8}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-22., 29.2}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-22., 29.2}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-19.1, -25.}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-19.1, -25.}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-18.9, 105.2}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-18.9, 105.2}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-18.8, -158.6}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-18.8, -158.6}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-18.8, -73.4}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-18.8, -73.4}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-18.5, 141.8}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-18.5, 141.8}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-18.3, 64.2}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-18.3, 64.2}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-15.9, 88.1}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-15.9, 88.1}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-15.8, -174.8}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-15.8, -174.8}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-15.1, -155.6}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-15.1, -155.6}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-10.3, -164.7}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-10.3, -164.7}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-8.1, -111.9}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-8.1, -111.9}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-8., -86.}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-8., -86.}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-8., -11.2}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-8., -11.2}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-6.9, 73.7}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-6.9, 73.7}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-6.2, -49.9}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-6.2, -49.9}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-5.4, 159.3}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-5.4, 159.3}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-4.6, -66.3}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-4.6, -66.3}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-4.2, 120.6}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-4.2, 120.6}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-3., 76.4}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-3., 76.4}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-2., 119.2}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-2., 119.2}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{-1.3, 147.6}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{-1.3, 147.6}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{0., -111.8}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{0., -111.8}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{0.3, 156.2}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{0.3, 156.2}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{1.2, -52.2}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{1.2, -52.2}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{2., 28.8}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{2., 28.8}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{2.5, 29.6}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{2.5, 29.6}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{2.9, 64.4}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{2.9, 64.4}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{3.2, -45.4}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{3.2, -45.4}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{3.2, 137.2}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{3.2, 137.2}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{8., 119.1}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{8., 119.1}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{8.4, -157.9}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{8.4, -157.9}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{11.8, 117.}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{11.8, 117.}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{12.4, -122.4}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{12.4, -122.4}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{13.3, -110.7}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{13.3, -110.7}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{17.3, -83.6}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{17.3, -83.6}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{18.9, 141.2}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{18.9, 141.2}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{21., -178.5}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{21., -178.5}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{21.9, -131.1}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{21.9, -131.1}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{22.2, -132.9}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{22.2, -132.9}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{22.7, -150.}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{22.7, -150.}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.8, -165.1}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.8, -165.1}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.5, 144.9}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.5, 144.9}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.5, -30.7}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.5, -30.7}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.2, 107.4}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.2, 107.4}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.4, 41.5}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.4, 41.5}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.7, -39.6}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.7, -39.6}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38., 158.}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38., 158.}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.5, 2.}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.5, 2.}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.1, 115.8}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.1, 115.8}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.7, 35.3}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.7, 35.3}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.7, 26.9}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.7, 26.9}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{51.2, -84.6}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{51.2, -84.6}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{54.8, 61.1}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{54.8, 61.1}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{60.3, -64.6}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{60.3, -64.6}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{63.1, 172.3}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{63.1, 172.3}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{68., -149.}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{68., -149.}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{76.6, 96.3}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{76.6, 96.3}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{76.7, -10.6}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{76.7, -10.6}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{86.7, -162.1}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{86.7, -162.1}]], 
          Opacity[1]}}, {}}, GeoBackground -> GeoStyling["GeoPlotMap"], 
       LabelStyle -> Automatic, PlotRangeClipping -> False]], 
    "BasicGeoRange" -> {{-75.4, 86.7}, {-179.7, 172.3}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> GeoStyling["StreetMapNoLabels"], GeoCenter -> 
      GeoPosition[{0., -3.6999999999999886`}], GeoGridLines -> None, 
      GeoGridLinesStyle -> GrayLevel[0.4, 0.3], GeoModel -> "ITRF00", 
      GeoProjection -> "Equirectangular", 
      GeoRange -> {{-90., 90.}, {-183.7, 176.3}}, GeoRangePadding -> None, 
      GeoServer -> {Automatic}, GeoZoomLevel -> 1, 
      MetaInformation -> {
       "Software" -> "Wolfram Language", "TileSources" -> 
        "Wolfram Knowledgebase with data from OpenStreetMap"}}},
  PlotRange->{{-183.7, 176.3}, {-90., 90.}},
  PlotRangeClipping->False,
  PlotRangePadding->None]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[51]=",ExpressionUUID->"1564656a-34b9-48a3-8de4-c15706e948d7"]
}, Open  ]],

Cell["\:521b\:5efa\:6d77\:62d4\:9ad8\:5ea6\:7684\:76f4\:65b9\:56fe\:ff1a", \
"CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836989260166593*^9, 
  3.8369892663487563`*^9}},ExpressionUUID->"829400d2-b28f-477d-a5eb-\
c0de30b747bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"fireballs", "[", 
   RowBox[{"All", ",", "\"\<Altitude\>\""}], "]"}], "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellLabel->"In[52]:=",ExpressionUUID->"d421a764-2032-4e38-a6b5-dd71b9bdd554"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.609], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.609], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{15., 0}, {20., 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{36.63235294117648, 76.87032085561496}, {
          91.00742711129294, 115.49999999999999`}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{20., 0}, {25., 8.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{75.87032085561496, 116.10828877005348`}, {
          20.52970844517182, 115.49999999999999`}}],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{25., 0}, {30., 22.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{115.10828877005348`, 
          155.346256684492}, {-143.91830177577748`, 115.5}}],
        StatusArea[#, 22]& ,
        TagBoxNote->"22"],
       StyleBox["22", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[22, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{30., 0}, {35., 10.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{154.346256684492, 
          194.58422459893052`}, {-2.9628644435352243`, 115.49999999999999`}}],
        
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{35., 0}, {40., 18.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{193.58422459893052`, 
          233.82219251336898`}, {-96.93315599836338, 115.49999999999999`}}],
        StatusArea[#, 18]& ,
        TagBoxNote->"18"],
       StyleBox["18", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[18, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{40., 0}, {45., 4.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{232.82219251336898`, 273.0601604278075}, {
          67.51485422258591, 115.49999999999999`}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{45., 0}, {50., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{272.0601604278075, 312.298128342246}, {
          102.75371355564647`, 115.49999999999999`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{50., 0}, {55., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{311.298128342246, 351.5360962566845}, {
          102.75371355564647`, 115.49999999999999`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{55., 0}, {60., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{350.5360962566845, 390.77406417112303`}, {
          102.75371355564647`, 115.49999999999999`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{65., 0}, {70., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{429.01203208556154`, 469.25000000000006`}, {
          102.75371355564647`, 115.49999999999999`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{13.9, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{15., 70.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 Editable->False,
 Deletable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[52]=",ExpressionUUID->"5343c9df-4f3c-4d87-a4e7-7010f2007399"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["\:8bcd\:6c47",
 FontFamily->"Microsoft YaHei",
 FontWeight->"Normal",
 FontSlant->"Oblique"]], "VocabularySection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{
  3.8369892703077855`*^9},ExpressionUUID->"4094826b-9c96-483b-8989-\
00d39325ba81"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["Dataset",
      BaseStyle->"CodeLink"], "[", 
     StyleBox["data", "CodeVariableLrg"], "]"}], " ", Cell[
    "\:4e00\:4e2a\:6570\:636e\:96c6", "VocabularyText",ExpressionUUID->
     "d09e99b4-50f1-41d3-b597-01bced311d4a"]},
   {
    RowBox[{
     ButtonBox["Normal",
      BaseStyle->"CodeLink"], "[", 
     StyleBox["dataset", "CodeVariableLrg"], "]"}], " ", Cell[
    "\:5c06\:6570\:636e\:96c6\:8f6c\:6362\:4e3a\:6b63\:5e38\:7684\:5217\:8868\
\:548c\:5173\:8054", "VocabularyText",ExpressionUUID->
     "1f368f4c-a533-4eaa-8101-3f1177c8c409"]},
   {
    RowBox[{
     ButtonBox["Catenate",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox[
        StyleBox["assoc", "CodeVariableLrg"], "1"], ",", " ", 
       StyleBox["...", "GrayPointSix"]}], "}"}], "]"}], " ", Cell[
    "\:8fde\:7ed3\:5173\:8054\:ff0c\:5c06\:5b83\:4eec\:7684\:5143\:7d20\:8fdb\
\:884c\:7ec4\:5408", "VocabularyText",ExpressionUUID->
     "ba9fcb25-bd17-4088-8832-bed55c5d9a5a"]},
   {
    RowBox[{
     StyleBox["f", "CodeVariableLrg"], 
     ButtonBox["@*",
      BaseStyle->"CodeLink",
      ButtonData->"Composition"], 
     StyleBox["g", "CodeVariableLrg"]}], " ", Cell[TextData[{
     "\:590d\:5408\:51fd\:6570(\:5e94\:7528\:4e8e ",
     Cell[BoxData[
      StyleBox["x", "CodeVariable"]], "InlineCode",ExpressionUUID->
      "d754336b-2e54-4054-bef3-4101fe124d39"],
     " \:65f6\:5c31\:662f ",
     Cell[BoxData[
      RowBox[{
       StyleBox["f", "CodeVariable"], "[", 
       RowBox[{
        StyleBox["g", "CodeVariable"], "[", 
        StyleBox["x", "CodeVariable"], "]"}], "]"}]], "InlineCode",
      ExpressionUUID->"6e6bd386-8be7-4223-b9c4-74118349913f"],
     ")"
    }], "VocabularyText",ExpressionUUID->
     "b0ee50fd-890d-4389-abfe-864ba4d819fd"]},
   {
    RowBox[{
     StyleBox["f", "CodeVariableLrg"], 
     ButtonBox["/*",
      BaseStyle->"CodeLink",
      ButtonData->"RightComposition"], 
     StyleBox["g", "CodeVariableLrg"]}], " ", Cell[TextData[{
     "\:53f3\:590d\:5408(\:5e94\:7528\:4e8e ",
     Cell[BoxData[
      StyleBox["x", "CodeVariable"]], "InlineCode",ExpressionUUID->
      "9f53739e-a052-4bdd-a9ce-93453b0cab9f"],
     " \:65f6\:5c31\:662f ",
     Cell[BoxData[
      RowBox[{
       StyleBox["g", "CodeVariable"], "[", 
       RowBox[{
        StyleBox["f", "CodeVariable"], "[", 
        StyleBox["x", "CodeVariable"], "]"}], "]"}]], "InlineCode",
      ExpressionUUID->"5c6ed197-bee5-4366-8d4c-afd2f54723df"],
     ")"
    }], "VocabularyText",ExpressionUUID->
     "9248585e-8a36-4e19-862a-06d52041f383"]}
  }]], "VocabularyTable",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.837471405344737*^9, 3.8374714589722896`*^9}, {
  3.8374715101715527`*^9, 3.837471562376683*^9}},
 GridBoxOptions->{
 GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {False, {True, True, 
      Directive[
       Thickness[1.5], "VocabDivColor"], True, True}, 
     False}}},ExpressionUUID->"aeb42b64-0c92-4eef-9483-43758f7b21dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicModuleBox[{$CellContext`open$$ = False}, 
  TagBox[GridBox[{
     {
      StyleBox["\<\"\:4e60\:9898\"\>",
       StripOnInput->False,
       FontSlant->"Italic"], 
      PaneBox[
       TagBox[
        ButtonBox[
         DynamicBox[ToBoxes[
           If[$CellContext`open$$, 
            Row[{
              Style["-", "ExercisePreviewButtonTextHighlight"], 
              Style[
              " \:9884\:89c8\:4e60\:9898", "ExercisePreviewButtonText"]}], 
            Row[{
              Style["+", "ExercisePreviewButtonTextHighlight"], 
              Style[
              " \:9884\:89c8\:4e60\:9898", "ExercisePreviewButtonText"]}]], 
           StandardForm],
          ImageSizeCache->{133.5, {2., 24.}}],
         Appearance->None,
         ButtonFunction:>(
          If[$CellContext`open$$, $CellContext`open$$ = 
            False, $CellContext`open$$ = True]; NotebookFind[
            EvaluationNotebook[], "ExerciseSummaryCell", Next, CellStyle, 
            WrapAround -> True, AutoScroll -> False]; FrontEndTokenExecute[
            EvaluationNotebook[], "ExpandSelection"]; FrontEndExecute[
            FrontEndToken[
             EvaluationNotebook[], "OpenCloseGroup"]]),
         Evaluator->Automatic,
         Method->"Preemptive"],
        MouseAppearanceTag["LinkHand"]],
       Alignment->Right,
       ImageSize->Full]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  DynamicModuleValues:>{}]], "ExerciseSection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.669991951589675*^9},
 ShowStringCharacters->
  False,ExpressionUUID->"35cc611e-c25c-493b-9a6b-1d8eb513ae80"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         PaneBox[
          
          StyleBox["\<\"\:5171\:6709 13 \:9053\:4e60\:9898\"\>", 
           "ExerciseSummaryHeading",
           StripOnInput->False],
          ImageMargins->{{20, 0}, {0, 10}}]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
      "Column"], 
     PaneBox[
      ButtonBox[
       StyleBox["\<\"\:5f00\:59cb\:7ec3\:4e60 \[RightGuillemet]\"\>", 
        "ExerciseSummaryHeading",
        StripOnInput->False],
       Appearance->None,
       ButtonFunction:>NotebookLocate[{"EIWL2-45-datasets-exercises.nb", ""}],
       
       Evaluator->Automatic,
       Method->"Preemptive"],
      FrameMargins->{{10, 0}, {10, 10}},
      ImageSize->Full]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.7], 
       Scaled[0.3]}, "Rows" -> {{Automatic}}}],
  "Grid"]], "ExerciseSummaryCell",
 Editable->False,
 Deletable->False,
 ShowCellBracket->
  False,ExpressionUUID->"144780d1-fbc0-4d9b-a361-9a7b0b5940cc"],

Cell[TextData[{
 StyleBox["\:6ce8\:610f\:ff1a",
  FontWeight->"Bold"],
 "\:8fd9\:4e9b\:7ec3\:4e60\:9700\:8981\:4f7f\:7528\:6570\:636e\:96c6 ",
 Cell[BoxData[
  RowBox[{"planets", "=", 
   RowBox[{
    ButtonBox["CloudGet",
     BaseStyle->"CodeLink"], "[", 
    "\"\<\!\(\(\(http\)\(:\)\) // wolfr\).am/7FxLgPm5\>\"", "]"}]}]], 
  "InlineCode",ExpressionUUID->"3dd907a2-dd6f-4f8c-8db8-4b2b904c90cf"],
 "\:3002"
}], "ExerciseNote",
 Editable->False,
 Deletable->False,
 CellChangeTimes->{{3.837562705723333*^9, 
  3.837562739388176*^9}},ExpressionUUID->"a94bc841-d917-43de-8ae8-\
7541ba0d4f79"],

Cell[CellGroupData[{

Cell[TextData[{
 "\:521b\:5efa\:4e00\:4e2a\:884c\:661f\:7684\:8bcd\:4e91\:ff0c\:5176\:6743\
\:91cd\:7531\:5176\:536b\:661f\:7684\:6570\:91cf\:6765\:51b3\:5b9a\:3002",
 StyleBox[ButtonBox["\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "45.1", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellChangeTimes->{{3.8375627928456516`*^9, 
  3.837562795738125*^9}},ExpressionUUID->"f47b1ef1-0c74-482c-9d78-\
f659faa03143"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"\:671f\:671b\:8f93\:51fa", "\:ff1a"}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       GraphicsBox[{InsetBox[
          StyleBox["\<\"Jupiter\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.3111111111111111],
           FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center,
           Automatic], InsetBox[
          StyleBox["\<\"Saturn\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.3025089605734767],
           FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-18., 54.}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"Uranus\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.15627240143369175`],
           FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {0., -47.}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"Neptune\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.0960573476702509],
           FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {5., -70.}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"Mars\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.048745519713261645`],
           FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {10., -28.}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"Earth\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.044444444444444446`],
           FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {38., -28.}, 
          Center, Automatic]},
        DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
        ImageSize->{169.55078125, Automatic},
        Method->{
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
        PlotRange->{{-118.5, 106.5}, {-83.5, 88.5}}]], "ExerciseOutput",
       ExpressionUUID->"9d119e2d-2a62-4091-8b14-80445fc13846"],
      Apply[TextCell, 
       Cell[
        BoxData[
         GraphicsBox[{{
            InsetBox[
             StyleBox[
             "\"Jupiter\"", StripOnInput -> False, FontSize -> 
              Scaled[0.3111111111111111], FontColor -> 
              RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
             Automatic], 
            InsetBox[
             StyleBox[
             "\"Saturn\"", StripOnInput -> False, FontSize -> 
              Scaled[0.3025089605734767], FontColor -> 
              RGBColor[0.880722, 0.611041, 0.142051]], {-18., 54.}, Center, 
             Automatic], 
            InsetBox[
             StyleBox[
             "\"Uranus\"", StripOnInput -> False, FontSize -> 
              Scaled[0.15627240143369175`], FontColor -> 
              RGBColor[0.560181, 0.691569, 0.194885]], {0., -47.}, Center, 
             Automatic], 
            InsetBox[
             StyleBox[
             "\"Neptune\"", StripOnInput -> False, FontSize -> 
              Scaled[0.0960573476702509], FontColor -> 
              RGBColor[0.922526, 0.385626, 0.209179]], {5., -70.}, Center, 
             Automatic], 
            InsetBox[
             StyleBox[
             "\"Mars\"", StripOnInput -> False, FontSize -> 
              Scaled[0.048745519713261645`], FontColor -> 
              RGBColor[0.528488, 0.470624, 0.701351]], {10., -28.}, Center, 
             Automatic], 
            InsetBox[
             StyleBox[
             "\"Earth\"", StripOnInput -> False, FontSize -> 
              Scaled[0.044444444444444446`], FontColor -> 
              RGBColor[0.772079, 0.431554, 0.102387]], {38., -28.}, Center, 
             Automatic]}}, 
          DefaultBaseStyle -> {"Graphics", FontFamily -> "Helvetica"}, 
          ImageSize -> {169.55078125, Automatic}, 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
            Automatic}, PlotRange -> {{-118.5, 106.5}, {-83.5, 88.5}}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->
  Automatic,ExpressionUUID->"cfe35bba-1f6a-4649-b6ed-ffbab7c5e131"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\:5c06\:6bcf\:4e2a\:884c\:661f\:7684\:536b\:661f\:6570\:91cf\:521b\:5efa\
\:4e3a\:67f1\:72b6\:56fe\:3002",
 StyleBox[ButtonBox["\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "45.2", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellChangeTimes->{{3.837562800746057*^9, 
  3.837562803651242*^9}},ExpressionUUID->"e2648e65-7d71-4dfd-b187-\
87900922fda6"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"\:671f\:671b\:8f93\:51fa", "\:ff1a"}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       GraphicsBox[{
         {Opacity[0], PointBox[{0.38380952380952377`, 0.}]}, {{}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644],
            Thickness[Small]}], 
           {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
            0.644], Thickness[Small]}], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{0.5421245421245421, 0.}, {1.4578754578754578`, 
                  0.}, "RoundingRadius" -> 0]},
                
                ImageSizeCache->{{41.10597768519172, 117.91565888134929`}, {
                 200.49999999999997`, 201.49999999999997`}}],
               StatusArea[#, 0]& ,
               TagBoxNote->"0"],
              StyleBox["0", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[0, {}], "Tooltip"]& ]}, 
           {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
            0.644], Thickness[Small]}], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{1.542124542124542, 0.}, {2.4578754578754576`, 
                  0.}, "RoundingRadius" -> 0]},
                ImageSizeCache->{{123.89014955139578`, 200.69983074755336`}, {
                 200.49999999999997`, 201.49999999999997`}}],
               StatusArea[#, 0]& ,
               TagBoxNote->"0"],
              StyleBox["0", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[0, {}], "Tooltip"]& ]}, 
           {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
            0.644], Thickness[Small]}], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{2.542124542124542, 0.}, {3.4578754578754576`, 
                  1.}, "RoundingRadius" -> 0]},
                
                ImageSizeCache->{{206.67432141759986`, 283.4840026137574}, {
                 189.75812113242657`, 201.49999999999997`}}],
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}, 
           {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
            0.644], Thickness[Small]}], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{3.542124542124542, 0.}, {4.457875457875458, 
                  2.}, "RoundingRadius" -> 0]},
                
                ImageSizeCache->{{289.45849328380393`, 366.26817447996154`}, {
                 179.0162422648532, 201.49999999999997`}}],
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {}], "Tooltip"]& ]}, 
           {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
            0.644], Thickness[Small]}], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{4.542124542124542, 0.}, {5.457875457875458, 
                  38.}, "RoundingRadius" -> 0]},
                
                ImageSizeCache->{{372.242665150008, 
                 449.0523463461656}, {-207.69139696778913`, 
                 201.49999999999997`}}],
               StatusArea[#, 38]& ,
               TagBoxNote->"38"],
              StyleBox["38", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[38, {}], "Tooltip"]& ]}, 
           {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
            0.644], Thickness[Small]}], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{5.542124542124542, 0.}, {6.457875457875458, 
                  33.}, "RoundingRadius" -> 0]},
                
                ImageSizeCache->{{455.0268370162121, 
                 531.8365182123696}, {-153.98200262992216`, 
                 201.49999999999997`}}],
               StatusArea[#, 33]& ,
               TagBoxNote->"33"],
              StyleBox["33", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[33, {}], "Tooltip"]& ]}, 
           {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
            0.644], Thickness[Small]}], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{6.542124542124542, 0.}, {7.457875457875458, 
                  21.}, "RoundingRadius" -> 0]},
                
                ImageSizeCache->{{537.8110088824162, 
                 614.6206900785737}, {-25.07945621904139, 
                 201.49999999999997`}}],
               StatusArea[#, 21]& ,
               TagBoxNote->"21"],
              StyleBox["21", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[21, {}], "Tooltip"]& ]}, 
           {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
            0.644], Thickness[Small]}], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{7.542124542124542, 0.}, {8.457875457875458, 
                  8.}, "RoundingRadius" -> 0]},
                
                ImageSizeCache->{{620.5951807486204, 697.4048619447778}, {
                 114.56496905941279`, 201.49999999999997`}}],
               StatusArea[#, 8]& ,
               TagBoxNote->"8"],
              StyleBox["8", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[8, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
         StyleBox[{
           {Thickness[Tiny], 
            LineBox[{{0.38380952380952377`, 0.}, {8.619356776556776, 0.}}], 
            StyleBox[{}, "GraphicsLabel",
             StripOnInput->False]}, 
           StyleBox[{
             {Thickness[Tiny], 
              LineBox[{{0.5421245421245421, 0.}, 
                Offset[{-1.102182119232618*^-15, -6.}, {0.5421245421245421, 
                 0.}]}], 
              LineBox[{{8.457875457875458, 0.}, 
                Offset[{-1.102182119232618*^-15, -6.}, {8.457875457875458, 
                 0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {
                LineBox[{{1.4578754578754578`, 0.}, 
                  Offset[{-7.347880794884119*^-16, -4.}, {1.4578754578754578`,
                    0.}]}], 
                LineBox[{{1.542124542124542, 0.}, 
                  Offset[{-7.347880794884119*^-16, -4.}, {1.542124542124542, 
                   0.}]}], 
                LineBox[{{2.4578754578754576`, 0.}, 
                  Offset[{-7.347880794884119*^-16, -4.}, {2.4578754578754576`,
                    0.}]}], 
                LineBox[{{2.542124542124542, 0.}, 
                  Offset[{-7.347880794884119*^-16, -4.}, {2.542124542124542, 
                   0.}]}], 
                LineBox[{{3.457875457875457, 0.}, 
                  Offset[{-7.347880794884119*^-16, -4.}, {3.457875457875457, 
                   0.}]}], 
                LineBox[{{3.5421245421245415`, 0.}, 
                  Offset[{-7.347880794884119*^-16, -4.}, {3.5421245421245415`,
                    0.}]}], 
                LineBox[{{4.457875457875458, 0.}, 
                  Offset[{-7.347880794884119*^-16, -4.}, {4.457875457875458, 
                   0.}]}], 
                LineBox[{{4.542124542124542, 0.}, 
                  Offset[{-7.347880794884119*^-16, -4.}, {4.542124542124542, 
                   0.}]}], 
                LineBox[{{5.457875457875458, 0.}, 
                  Offset[{-7.347880794884119*^-16, -4.}, {5.457875457875458, 
                   0.}]}], 
                LineBox[{{5.542124542124542, 0.}, 
                  Offset[{-7.347880794884119*^-16, -4.}, {5.542124542124542, 
                   0.}]}], 
                LineBox[{{6.457875457875458, 0.}, 
                  Offset[{-7.347880794884119*^-16, -4.}, {6.457875457875458, 
                   0.}]}], 
                LineBox[{{6.542124542124542, 0.}, 
                  Offset[{-7.347880794884119*^-16, -4.}, {6.542124542124542, 
                   0.}]}], 
                LineBox[{{7.457875457875458, 0.}, 
                  Offset[{-7.347880794884119*^-16, -4.}, {7.457875457875458, 
                   0.}]}], 
                LineBox[{{7.542124542124542, 0.}, 
                  Offset[{-7.347880794884119*^-16, -4.}, {7.542124542124542, 
                   0.}]}]}, {}}}, 
             StyleBox[
              {Thickness[Tiny], 
               InsetBox["\<\"Mercury\"\>", Offset[{0., -2.}, {1., 0.}], {0, 1},
                 Automatic, {1, 0}], 
               InsetBox["\<\"Venus\"\>", Offset[{0., -2.}, {2., 0.}], {0, 1}, 
                Automatic, {1, 0}], 
               InsetBox["\<\"Earth\"\>", 
                Offset[{0., -2.}, {2.9999999999999996, 0.}], {0, 1}, 
                Automatic, {1, 0}], 
               InsetBox["\<\"Mars\"\>", 
                Offset[{0., -2.}, {3.9999999999999996, 0.}], {0, 1}, 
                Automatic, {1, 0}], 
               InsetBox["\<\"Jupiter\"\>", Offset[{0., -2.}, {5., 0.}], {0, 1},
                 Automatic, {1, 0}], 
               InsetBox["\<\"Saturn\"\>", Offset[{0., -2.}, {6., 0.}], {0, 1},
                 Automatic, {1, 0}], 
               InsetBox["\<\"Uranus\"\>", Offset[{0., -2.}, {7., 0.}], {0, 1},
                 Automatic, {1, 0}], 
               InsetBox["\<\"Neptune\"\>", Offset[{0., -2.}, {8., 0.}], {0, 1},
                 Automatic, {1, 0}]}, "GraphicsLabel",
              StripOnInput->False]}, "GraphicsTicks",
            StripOnInput->False]}, "GraphicsAxes",
          StripOnInput->False,
          Antialiasing->False]},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{False, True},
        AxesLabel->{None, None},
        AxesOrigin->{0.38380952380952377`, 0.},
        CoordinatesToolOptions:>{"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )},
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, Automatic}, {{{1., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
             FormBox["\"Mercury\"", TraditionalForm], 0}, {
            1.9999999999999998`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[0]], TraditionalForm], {0.004, 0}}, {
            1.9999999999999998`, 
             FormBox["\"Venus\"", TraditionalForm], 0}, {3., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
             FormBox["\"Earth\"", TraditionalForm], 0}, {4., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
             FormBox["\"Mars\"", TraditionalForm], 0}, {5., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[0]], TraditionalForm], {0.004, 0}}, {5., 
             FormBox["\"Jupiter\"", TraditionalForm], 0}, {6., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[0]], TraditionalForm], {0.004, 0}}, {6., 
             FormBox["\"Saturn\"", TraditionalForm], 0}, {7., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[0]], TraditionalForm], {0.004, 0}}, {7., 
             FormBox["\"Uranus\"", TraditionalForm], 0}, {8., 
             FormBox[
              InterpretationBox[
               StyleBox[
                GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[0]], TraditionalForm], {0.004, 0}}, {8., 
             FormBox["\"Neptune\"", TraditionalForm], 0}}, {{1., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[0]], TraditionalForm], {0.004, 0}}, {
            1.9999999999999998`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[0]], TraditionalForm], {0.004, 0}}, {5., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[0]], TraditionalForm], {0.004, 0}}, {6., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[0]], TraditionalForm], {0.004, 0}}, {7., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[0]], TraditionalForm], {0.004, 0}}, {8., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[0]], TraditionalForm], {0.004, 0}}}}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImageSize->{362.23828125, Automatic},
        PlotRange->{{All, All}, {All, All}},
        PlotRangePadding->{{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}},
        Ticks->{None, Automatic}]], "ExerciseOutput",ExpressionUUID->
       "6aa36980-ccda-44ae-9561-dc32a18345ab"],
      Apply[TextCell, 
       Cell[
        BoxData[
         GraphicsBox[{{
            Opacity[0], 
            PointBox[{0.38380952380952377`, 0.}]}, {{}, {
             RGBColor[0.982864, 0.7431472, 0.3262672], 
             EdgeForm[{
               Opacity[0.644], 
               Thickness[Small]}], {
              RGBColor[0.982864, 0.7431472, 0.3262672], 
              EdgeForm[{
                Opacity[0.644], 
                Thickness[Small]}], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{0.5421245421245421, 0.}, {
                    1.4578754578754578`, 0.}, "RoundingRadius" -> 0]}, 
                  ImageSizeCache -> {{21.270034484381984`, 
                   59.48425524087196}, {99.00717958917956, 
                   99.50717958917956}}], StatusArea[#, 0]& , TagBoxNote -> 
                 "0"], 
                StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                Style[0, {}], "Tooltip"]& ]}, {
              RGBColor[0.982864, 0.7431472, 0.3262672], 
              EdgeForm[{
                Opacity[0.644], 
                Thickness[Small]}], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{1.542124542124542, 0.}, {2.4578754578754576`,
                     0.}, "RoundingRadius" -> 0]}, 
                  ImageSizeCache -> {{62.453963550469034`, 
                   100.668184306959}, {99.00717958917956, 
                   99.50717958917956}}], StatusArea[#, 0]& , TagBoxNote -> 
                 "0"], 
                StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                Style[0, {}], "Tooltip"]& ]}, {
              RGBColor[0.982864, 0.7431472, 0.3262672], 
              EdgeForm[{
                Opacity[0.644], 
                Thickness[Small]}], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{2.542124542124542, 0.}, {3.4578754578754576`,
                     1.}, "RoundingRadius" -> 0]}, 
                  ImageSizeCache -> {{103.63789261655609`, 
                   141.85211337304608`}, {93.66325009945007, 
                   99.50717958917956}}], StatusArea[#, 1]& , TagBoxNote -> 
                 "1"], 
                StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                Style[1, {}], "Tooltip"]& ]}, {
              RGBColor[0.982864, 0.7431472, 0.3262672], 
              EdgeForm[{
                Opacity[0.644], 
                Thickness[Small]}], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{3.542124542124542, 0.}, {4.457875457875458, 
                    2.}, "RoundingRadius" -> 0]}, 
                  ImageSizeCache -> {{144.82182168264316`, 
                   183.03604243913313`}, {88.31932060972058, 
                   99.50717958917956}}], StatusArea[#, 2]& , TagBoxNote -> 
                 "2"], 
                StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                Style[2, {}], "Tooltip"]& ]}, {
              RGBColor[0.982864, 0.7431472, 0.3262672], 
              EdgeForm[{
                Opacity[0.644], 
                Thickness[Small]}], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{4.542124542124542, 0.}, {5.457875457875458, 
                    38.}, "RoundingRadius" -> 0]}, 
                  ImageSizeCache -> {{186.0057507487302, 
                   224.2199715052202}, {-104.06214102054103`, 
                   99.50717958917956}}], StatusArea[#, 38]& , TagBoxNote -> 
                 "38"], 
                StyleBox["38", {}, StripOnInput -> False]], Annotation[#, 
                Style[38, {}], "Tooltip"]& ]}, {
              RGBColor[0.982864, 0.7431472, 0.3262672], 
              EdgeForm[{
                Opacity[0.644], 
                Thickness[Small]}], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{5.542124542124542, 0.}, {6.457875457875458, 
                    33.}, "RoundingRadius" -> 0]}, 
                  ImageSizeCache -> {{227.18967981481725`, 
                   265.4039005713072}, {-77.34249357189357, 
                   99.50717958917956}}], StatusArea[#, 33]& , TagBoxNote -> 
                 "33"], 
                StyleBox["33", {}, StripOnInput -> False]], Annotation[#, 
                Style[33, {}], "Tooltip"]& ]}, {
              RGBColor[0.982864, 0.7431472, 0.3262672], 
              EdgeForm[{
                Opacity[0.644], 
                Thickness[Small]}], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{6.542124542124542, 0.}, {7.457875457875458, 
                    21.}, "RoundingRadius" -> 0]}, 
                  ImageSizeCache -> {{268.37360888090427`, 
                   306.5878296373943}, {-13.215339695139718`, 
                   99.50717958917956}}], StatusArea[#, 21]& , TagBoxNote -> 
                 "21"], 
                StyleBox["21", {}, StripOnInput -> False]], Annotation[#, 
                Style[21, {}], "Tooltip"]& ]}, {
              RGBColor[0.982864, 0.7431472, 0.3262672], 
              EdgeForm[{
                Opacity[0.644], 
                Thickness[Small]}], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{7.542124542124542, 0.}, {8.457875457875458, 
                    8.}, "RoundingRadius" -> 0]}, 
                  ImageSizeCache -> {{309.5575379469913, 
                   347.77175870348134`}, {56.255743671343645`, 
                   99.50717958917956}}], StatusArea[#, 8]& , TagBoxNote -> 
                 "8"], 
                StyleBox["8", {}, StripOnInput -> False]], Annotation[#, 
                Style[8, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
           StyleBox[{{
              Thickness[Tiny], 
              LineBox[{{0.38380952380952377`, 0.}, {8.619356776556776, 0.}}], 
              
              StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
             StyleBox[{{
                Thickness[Tiny], 
                LineBox[{{0.5421245421245421, 0.}, 
                  
                  Offset[{-1.102182119232618*^-15, -6.}, {0.5421245421245421, 
                   0.}]}], 
                LineBox[{{8.457875457875458, 0.}, 
                  
                  Offset[{-1.102182119232618*^-15, -6.}, {8.457875457875458, 
                   0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {
                  LineBox[{{1.4578754578754578`, 0.}, 
                    
                    Offset[{-7.347880794884119*^-16, -4.}, {
                    1.4578754578754578`, 0.}]}], 
                  LineBox[{{1.542124542124542, 0.}, 
                    
                    Offset[{-7.347880794884119*^-16, -4.}, {1.542124542124542,
                     0.}]}], 
                  LineBox[{{2.4578754578754576`, 0.}, 
                    
                    Offset[{-7.347880794884119*^-16, -4.}, {
                    2.4578754578754576`, 0.}]}], 
                  LineBox[{{2.542124542124542, 0.}, 
                    
                    Offset[{-7.347880794884119*^-16, -4.}, {2.542124542124542,
                     0.}]}], 
                  LineBox[{{3.457875457875457, 0.}, 
                    
                    Offset[{-7.347880794884119*^-16, -4.}, {3.457875457875457,
                     0.}]}], 
                  LineBox[{{3.5421245421245415`, 0.}, 
                    
                    Offset[{-7.347880794884119*^-16, -4.}, {
                    3.5421245421245415`, 0.}]}], 
                  LineBox[{{4.457875457875458, 0.}, 
                    
                    Offset[{-7.347880794884119*^-16, -4.}, {4.457875457875458,
                     0.}]}], 
                  LineBox[{{4.542124542124542, 0.}, 
                    
                    Offset[{-7.347880794884119*^-16, -4.}, {4.542124542124542,
                     0.}]}], 
                  LineBox[{{5.457875457875458, 0.}, 
                    
                    Offset[{-7.347880794884119*^-16, -4.}, {5.457875457875458,
                     0.}]}], 
                  LineBox[{{5.542124542124542, 0.}, 
                    
                    Offset[{-7.347880794884119*^-16, -4.}, {5.542124542124542,
                     0.}]}], 
                  LineBox[{{6.457875457875458, 0.}, 
                    
                    Offset[{-7.347880794884119*^-16, -4.}, {6.457875457875458,
                     0.}]}], 
                  LineBox[{{6.542124542124542, 0.}, 
                    
                    Offset[{-7.347880794884119*^-16, -4.}, {6.542124542124542,
                     0.}]}], 
                  LineBox[{{7.457875457875458, 0.}, 
                    
                    Offset[{-7.347880794884119*^-16, -4.}, {7.457875457875458,
                     0.}]}], 
                  LineBox[{{7.542124542124542, 0.}, 
                    
                    Offset[{-7.347880794884119*^-16, -4.}, {7.542124542124542,
                     0.}]}]}, {}}}, 
               StyleBox[{
                 Thickness[Tiny], 
                 InsetBox["\"Mercury\"", 
                  Offset[{0., -2.}, {1., 0.}], {0, 1}, Automatic, {1, 0}], 
                 InsetBox["\"Venus\"", 
                  Offset[{0., -2.}, {2., 0.}], {0, 1}, Automatic, {1, 0}], 
                 InsetBox["\"Earth\"", 
                  Offset[{0., -2.}, {2.9999999999999996`, 0.}], {0, 1}, 
                  Automatic, {1, 0}], 
                 InsetBox["\"Mars\"", 
                  Offset[{0., -2.}, {3.9999999999999996`, 0.}], {0, 1}, 
                  Automatic, {1, 0}], 
                 InsetBox["\"Jupiter\"", 
                  Offset[{0., -2.}, {5., 0.}], {0, 1}, Automatic, {1, 0}], 
                 InsetBox["\"Saturn\"", 
                  Offset[{0., -2.}, {6., 0.}], {0, 1}, Automatic, {1, 0}], 
                 InsetBox["\"Uranus\"", 
                  Offset[{0., -2.}, {7., 0.}], {0, 1}, Automatic, {1, 0}], 
                 InsetBox["\"Neptune\"", 
                  Offset[{0., -2.}, {8., 0.}], {0, 1}, Automatic, {1, 0}]}, 
                "GraphicsLabel", StripOnInput -> False]}, "GraphicsTicks", 
              StripOnInput -> False]}, "GraphicsAxes", StripOnInput -> False, 
            Antialiasing -> False]}, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True},
           AxesLabel -> {None, None}, 
          AxesOrigin -> {0.38380952380952377`, 0.}, 
          CoordinatesToolOptions :> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {{{1., 
               FormBox[
                InterpretationBox[
                 StyleBox[
                  
                  GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                   Baseline], "CacheGraphics" -> False], 
                 Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
               FormBox["\"Mercury\"", TraditionalForm], 0}, {
              1.9999999999999998`, 
               FormBox[
                InterpretationBox[
                 StyleBox[
                  
                  GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                   Baseline], "CacheGraphics" -> False], 
                 Spacer[0]], TraditionalForm], {0.004, 0}}, {
              1.9999999999999998`, 
               FormBox["\"Venus\"", TraditionalForm], 0}, {3., 
               FormBox[
                InterpretationBox[
                 StyleBox[
                  
                  GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                   Baseline], "CacheGraphics" -> False], 
                 Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
               FormBox["\"Earth\"", TraditionalForm], 0}, {4., 
               FormBox[
                InterpretationBox[
                 StyleBox[
                  
                  GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                   Baseline], "CacheGraphics" -> False], 
                 Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
               FormBox["\"Mars\"", TraditionalForm], 0}, {5., 
               FormBox[
                InterpretationBox[
                 StyleBox[
                  
                  GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                   Baseline], "CacheGraphics" -> False], 
                 Spacer[0]], TraditionalForm], {0.004, 0}}, {5., 
               FormBox["\"Jupiter\"", TraditionalForm], 0}, {6., 
               FormBox[
                InterpretationBox[
                 StyleBox[
                  
                  GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                   Baseline], "CacheGraphics" -> False], 
                 Spacer[0]], TraditionalForm], {0.004, 0}}, {6., 
               FormBox["\"Saturn\"", TraditionalForm], 0}, {7., 
               FormBox[
                InterpretationBox[
                 StyleBox[
                  
                  GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                   Baseline], "CacheGraphics" -> False], 
                 Spacer[0]], TraditionalForm], {0.004, 0}}, {7., 
               FormBox["\"Uranus\"", TraditionalForm], 0}, {8., 
               FormBox[
                InterpretationBox[
                 StyleBox[
                  
                  GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                   Baseline], "CacheGraphics" -> False], 
                 Spacer[0]], TraditionalForm], {0.004, 0}}, {8., 
               FormBox["\"Neptune\"", TraditionalForm], 0}}, {{1., 
               FormBox[
                InterpretationBox[
                 StyleBox[
                  
                  GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                   Baseline], "CacheGraphics" -> False], 
                 Spacer[0]], TraditionalForm], {0.004, 0}}, {
              1.9999999999999998`, 
               FormBox[
                InterpretationBox[
                 StyleBox[
                  
                  GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                   Baseline], "CacheGraphics" -> False], 
                 Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
               FormBox[
                InterpretationBox[
                 StyleBox[
                  
                  GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                   Baseline], "CacheGraphics" -> False], 
                 Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
               FormBox[
                InterpretationBox[
                 StyleBox[
                  
                  GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                   Baseline], "CacheGraphics" -> False], 
                 Spacer[0]], TraditionalForm], {0.004, 0}}, {5., 
               FormBox[
                InterpretationBox[
                 StyleBox[
                  
                  GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                   Baseline], "CacheGraphics" -> False], 
                 Spacer[0]], TraditionalForm], {0.004, 0}}, {6., 
               FormBox[
                InterpretationBox[
                 StyleBox[
                  
                  GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                   Baseline], "CacheGraphics" -> False], 
                 Spacer[0]], TraditionalForm], {0.004, 0}}, {7., 
               FormBox[
                InterpretationBox[
                 StyleBox[
                  
                  GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                   Baseline], "CacheGraphics" -> False], 
                 Spacer[0]], TraditionalForm], {0.004, 0}}, {8., 
               FormBox[
                InterpretationBox[
                 StyleBox[
                  
                  GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                   Baseline], "CacheGraphics" -> False], 
                 Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> {362.23828125, Automatic}, 
          PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {None, Automatic}]], "ExerciseOutput", 
        Selectable -> False, Copyable -> False, Editable -> False, 
        ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->
  Automatic,ExpressionUUID->"38729e28-dbf1-4d6e-a4c4-f96d95ba8aba"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\:521b\:5efa\:4e00\:4e2a\:884c\:661f\:8d28\:91cf\:7684\:6570\:636e\:96c6\
\:ff0c\:6309\:5176\:536b\:661f\:7684\:6570\:91cf\:8fdb\:884c\:6392\:5e8f\:3002\
",
 StyleBox[ButtonBox["\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "45.3", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellChangeTimes->{{3.8375628087422132`*^9, 
  3.837562811378826*^9}},ExpressionUUID->"a8d8886e-74b0-4e2c-91dd-\
b5a46db248f8"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"\:671f\:671b\:8f93\:51fa", "\:ff1a"}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       TemplateBox[{
         TagBox[
          
          DynamicModuleBox[{
           TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
            Data`UnorderedAssociation[
             "DisplayedRowCount" -> 20, "RowCount" -> 8, "Length" -> 8, 
              "InitialType" -> TypeSystem`Assoc[
                TypeSystem`Atom[String], 
                TypeSystem`Atom[
                 Quantity[1, "Kilograms"]], 8], "DisplayedColumnCount" -> 20, 
              "DataRowCount" -> 0, "Shape" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`KeyValueShape[
                  TypeSystem`PackageScope`AtomShape[67.20000000000002], 
                  TypeSystem`PackageScope`AtomShape[75]]], 8, {}], 
              "DataColumnCount" -> 0, "InitialData" -> 
              TypeSystem`PackageScope`CacheHandle[400336015], "Type" -> 
              TypeSystem`Assoc[
                TypeSystem`Atom[String], 
                TypeSystem`Atom[
                 Quantity[1, "Kilograms"]], 8], "HandleQ" -> True, 
              "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
              TypeSystem`PackageScope`CacheHandle[400336015]], 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                 Style[
                  Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Mercury", 
                    Style[
                    "Mercury", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 252967906][{
                    
                    Key["Mercury"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"3.30104`6.*^23", "\"kg\""}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Venus", 
                    Style[
                    "Venus", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 252967906][{
                    
                    Key["Venus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"4.867320000000000000000001`6.*^24", "\"kg\""}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Earth", 
                    Style[
                    "Earth", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 252967906][{
                    
                    Key["Earth"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"5.9721986`8.*^24", "\"kg\""}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Mars", 
                    Style[
                    "Mars", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 252967906][{
                    
                    Key["Mars"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"6.41693`6.*^23", "\"kg\""}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Neptune", 
                    Style[
                    "Neptune", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 252967906][{
                    
                    Key["Neptune"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"1.0241`6.*^26", "\"kg\""}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Uranus", 
                    Style[
                    "Uranus", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 252967906][{
                    
                    Key["Uranus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"8.68103`6.*^25", "\"kg\""}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Saturn", 
                    Style[
                    "Saturn", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 252967906][{
                    
                    Key["Saturn"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"5.68319`6.*^26", "\"kg\""}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Jupiter", 
                    Style[
                    "Jupiter", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 252967906][{
                    
                    Key["Jupiter"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"1.89813`6.*^27", "\"kg\""}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                   BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                   Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                   BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                  LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                  False, ShowAutoStyles -> False]], 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
               TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
              Dynamic[
               TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
               TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                  Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                  
                  Module[{
                   TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 252967906][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                  TypeSystem`SparseGrid[
                   TypeSystem`H["(data no longer present)"]], 
                  If[GeneralUtilities`$DebugMode, 
                   
                   Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
              DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`alignBar[
              TypeSystem`NestedGrid`PackagePrivate`$state$$][
               TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                TypeSystem`PackageScope`Pathbar[
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 252967906]]]],
               TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
              Dynamic[
               Replace[
                MouseAnnotation[Null], {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[252967906][
                  Null] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[252967906][
                  
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0, 
              FrameMargins -> 0, Alignment -> Top, 
              ImageSize -> {Automatic, 14}]}, 
           DynamicBox[
            ToBoxes[
             Column[
              If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                 TypeSystem`NestedGrid`PackagePrivate`alignBar[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$][
                 TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
               TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                 TypeSystem`NestedGrid`PackagePrivate`alignBar[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$][
                 TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
              Spacings -> 
              If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                0, {{}, {0, 0.05, 0}}]], StandardForm], 
            ImageSizeCache -> {381., {204.125, 216.875}}, 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
           TypeSystem`NestedGrid`PackagePrivate`deleteState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           DynamicModuleValues :> {}, Initialization :> 
           Block[{$ContextPath = $ContextPath}, 
             Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("Dataset[<>]"& )]], "ExerciseOutput",
       ExpressionUUID->"7adeaff4-4f9d-4e18-8c52-86b0d3d6490f"],
      Apply[TextCell, 
       Cell[
        BoxData[
         TemplateBox[{
           TagBox[
            
            DynamicModuleBox[{
             TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
              Data`UnorderedAssociation[
               "RowCount" -> 8, "Length" -> 8, "InitialType" -> 
                TypeSystem`Assoc[
                  TypeSystem`Atom[String], 
                  TypeSystem`Atom[
                   Quantity[1, "Kilograms"]], 8], "Shape" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[67.20000000000002], 
                    TypeSystem`PackageScope`AtomShape[75]]], 8, {}], 
                "InitialData" -> 
                TypeSystem`PackageScope`CacheHandle[400336015], "Type" -> 
                TypeSystem`Assoc[
                  TypeSystem`Atom[String], 
                  TypeSystem`Atom[
                   Quantity[1, "Kilograms"]], 8], "HandleQ" -> True, 
                "RowTarget" -> 20, "Data" -> 
                TypeSystem`PackageScope`CacheHandle[400336015]], 
              TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
              DynamicModule[{
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                   Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Mercury", 
                    Style[
                    "Mercury", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 252967906][{
                    
                    Key["Mercury"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"3.30104`6.*^23", "\"kg\""}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Venus", 
                    Style[
                    "Venus", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 252967906][{
                    
                    Key["Venus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"4.867320000000000000000001`6.*^24", "\"kg\""}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Earth", 
                    Style[
                    "Earth", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 252967906][{
                    
                    Key["Earth"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"5.9721986`8.*^24", "\"kg\""}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Mars", 
                    Style[
                    "Mars", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 252967906][{
                    
                    Key["Mars"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"6.41693`6.*^23", "\"kg\""}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Neptune", 
                    Style[
                    "Neptune", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 252967906][{
                    
                    Key["Neptune"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"1.0241`6.*^26", "\"kg\""}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Uranus", 
                    Style[
                    "Uranus", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 252967906][{
                    
                    Key["Uranus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"8.68103`6.*^25", "\"kg\""}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Saturn", 
                    Style[
                    "Saturn", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 252967906][{
                    
                    Key["Saturn"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"5.68319`6.*^26", "\"kg\""}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Jupiter", 
                    Style[
                    "Jupiter", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 252967906][{
                    
                    Key["Jupiter"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"1.89813`6.*^27", "\"kg\""}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                 TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                 TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 252967906][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                  TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                 TrackedSymbols :> {
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                DynamicModuleValues :> {}], 
              TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
              TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`alignBar[
                TypeSystem`NestedGrid`PackagePrivate`$state$$][
                 TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                  TypeSystem`PackageScope`Pathbar[
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    252967906]]]], 
                TrackedSymbols :> {
                 TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
              TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                Dynamic[
                 Replace[
                  MouseAnnotation[Null], {
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][Null] -> "", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    252967906][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                   Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                 TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0,
                 FrameMargins -> 0, Alignment -> Top, 
                ImageSize -> {Automatic, 14}]}, 
             DynamicBox[
              ToBoxes[
               Column[
                If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                  TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                  TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                   TypeSystem`NestedGrid`PackagePrivate`alignBar[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$][
                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                 TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                  TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                  TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                   TypeSystem`NestedGrid`PackagePrivate`alignBar[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$][
                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                Spacings -> 
                If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                  0, {{}, {0, 0.05, 0}}]], StandardForm], 
              ImageSizeCache -> {215., {104., 111.}}, 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
             TypeSystem`NestedGrid`PackagePrivate`deleteState[
              TypeSystem`NestedGrid`PackagePrivate`$state$$], 
             DynamicModuleValues :> {}, Initialization :> 
             Block[{$ContextPath = $ContextPath}, 
               Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
           "CopyTag", DisplayFunction -> (#& ), 
          InterpretationFunction -> ("Dataset[<>]"& )]], "ExerciseOutput", 
        Selectable -> False, Copyable -> False, Editable -> False, 
        ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->
  Automatic,ExpressionUUID->"59772bdf-62ae-4861-a52d-f70ac66804fb"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\:521b\:5efa\:4e00\:4e2a\:884c\:661f\:53ca\:5176\:8d28\:91cf\:6700\:5927\
\:7684\:536b\:661f\:7684\:8d28\:91cf\:7684\:6570\:636e\:96c6\:3002",
 StyleBox[ButtonBox["\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "45.4", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellChangeTimes->{{3.837562816605433*^9, 
  3.8375628226276407`*^9}},ExpressionUUID->"647f836e-2e81-434b-9838-\
d47f190e1caa"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"\:671f\:671b\:8f93\:51fa", "\:ff1a"}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       TemplateBox[{
         TagBox[
          
          DynamicModuleBox[{
           TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
            Data`UnorderedAssociation[
             "DisplayedRowCount" -> 20, "RowCount" -> 8, "Length" -> 8, 
              "InitialType" -> TypeSystem`Assoc[
                TypeSystem`Atom[String], 
                TypeSystem`Atom[
                 Quantity[1, "Kilograms"]], 8], "DisplayedColumnCount" -> 20, 
              "DataRowCount" -> 0, "Shape" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`KeyValueShape[
                  TypeSystem`PackageScope`AtomShape[67.20000000000002], 
                  TypeSystem`PackageScope`AtomShape[75]]], 8, {}], 
              "DataColumnCount" -> 0, "InitialData" -> 
              TypeSystem`PackageScope`CacheHandle[1914205945], "Type" -> 
              TypeSystem`Assoc[
                TypeSystem`Atom[String], 
                TypeSystem`Atom[
                 Quantity[1, "Kilograms"]], 8], "HandleQ" -> True, 
              "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
              TypeSystem`PackageScope`CacheHandle[1914205945]], 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                 Style[
                  Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Mercury", 
                    Style[
                    "Mercury", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1541590800][{
                    Key["Mercury"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"-", "\[Infinity]"}], FontFamily -> 
                    "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                    True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Venus", 
                    Style[
                    "Venus", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1541590800][{
                    Key["Venus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"-", "\[Infinity]"}], FontFamily -> 
                    "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                    True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Earth", 
                    Style[
                    "Earth", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1541590800][{
                    Key["Earth"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "7.3459006322855173653772`4.995678626217362*^22", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Mars", 
                    Style[
                    "Mars", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1541590800][{
                    Key["Mars"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "1.0724880884600402`3.9586073148417724*^16", "\"kg\""}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Jupiter", 
                    Style[
                    "Jupiter", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1541590800][{
                    Key["Jupiter"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "1.48150100386563183602529`4.995678626217362*^23", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Saturn", 
                    Style[
                    "Saturn", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1541590800][{
                    Key["Saturn"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "1.34520841449162446435527`4.958607314841778*^23", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Uranus", 
                    Style[
                    "Uranus", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1541590800][{
                    Key["Uranus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "3.525516166731593299572`3.9586073148417764*^21", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Neptune", 
                    Style[
                    "Neptune", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1541590800][{
                    Key["Neptune"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "2.139432441341284348686`4.6989700043360205*^22", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                   BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                   Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                   BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                  LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                  False, ShowAutoStyles -> False]], 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
               TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
              Dynamic[
               TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
               TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                  Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                  
                  Module[{
                   TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1541590800][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                  TypeSystem`SparseGrid[
                   TypeSystem`H["(data no longer present)"]], 
                  If[GeneralUtilities`$DebugMode, 
                   
                   Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
              DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`alignBar[
              TypeSystem`NestedGrid`PackagePrivate`$state$$][
               TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                TypeSystem`PackageScope`Pathbar[
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  1541590800]]]], 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
              Dynamic[
               Replace[
                MouseAnnotation[Null], {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1541590800][
                  Null] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1541590800][
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0, 
              FrameMargins -> 0, Alignment -> Top, 
              ImageSize -> {Automatic, 14}]}, 
           DynamicBox[
            ToBoxes[
             Column[
              If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                 TypeSystem`NestedGrid`PackagePrivate`alignBar[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$][
                 TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
               TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                 TypeSystem`NestedGrid`PackagePrivate`alignBar[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$][
                 TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
              Spacings -> 
              If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                0, {{}, {0, 0.05, 0}}]], StandardForm], 
            ImageSizeCache -> {336., {206.125, 218.875}}, 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
           TypeSystem`NestedGrid`PackagePrivate`deleteState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           DynamicModuleValues :> {}, Initialization :> 
           Block[{$ContextPath = $ContextPath}, 
             Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("Dataset[<>]"& )]], "ExerciseOutput",
       ExpressionUUID->"02f4bcb0-7b76-4b79-be2e-f6cdb5e5b9d5"],
      Apply[TextCell, 
       Cell[
        BoxData[
         TemplateBox[{
           TagBox[
            
            DynamicModuleBox[{
             TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
              Data`UnorderedAssociation[
               "RowCount" -> 8, "Length" -> 8, "InitialType" -> 
                TypeSystem`Assoc[
                  TypeSystem`Atom[String], 
                  TypeSystem`Atom[
                   Quantity[1, "Kilograms"]], 8], "Shape" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[67.20000000000002], 
                    TypeSystem`PackageScope`AtomShape[75]]], 8, {}], 
                "InitialData" -> 
                TypeSystem`PackageScope`CacheHandle[1914205945], "Type" -> 
                TypeSystem`Assoc[
                  TypeSystem`Atom[String], 
                  TypeSystem`Atom[
                   Quantity[1, "Kilograms"]], 8], "HandleQ" -> True, 
                "RowTarget" -> 20, "Data" -> 
                TypeSystem`PackageScope`CacheHandle[1914205945]], 
              TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
              DynamicModule[{
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                   Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Mercury", 
                    Style[
                    "Mercury", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1541590800][{
                    Key["Mercury"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"-", "\[Infinity]"}], FontFamily -> 
                    "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                    True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Venus", 
                    Style[
                    "Venus", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1541590800][{
                    Key["Venus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"-", "\[Infinity]"}], FontFamily -> 
                    "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                    True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Earth", 
                    Style[
                    "Earth", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1541590800][{
                    Key["Earth"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{"7.3459006322855173653772`4.995678626217362*^22", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Mars", 
                    Style[
                    "Mars", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1541590800][{
                    Key["Mars"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{"1.0724880884600402`3.9586073148417724*^16", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Jupiter", 
                    Style[
                    "Jupiter", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1541590800][{
                    Key["Jupiter"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{"1.48150100386563183602529`4.995678626217362*^23",
                     "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Saturn", 
                    Style[
                    "Saturn", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1541590800][{
                    Key["Saturn"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{"1.34520841449162446435527`4.958607314841778*^23",
                     "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Uranus", 
                    Style[
                    "Uranus", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1541590800][{
                    Key["Uranus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{"3.525516166731593299572`3.9586073148417764*^21", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Neptune", 
                    Style[
                    "Neptune", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1541590800][{
                    Key["Neptune"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{"2.139432441341284348686`4.6989700043360205*^22", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                 TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                 TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1541590800][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                  TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                 TrackedSymbols :> {
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                DynamicModuleValues :> {}], 
              TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
              TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`alignBar[
                TypeSystem`NestedGrid`PackagePrivate`$state$$][
                 TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                  TypeSystem`PackageScope`Pathbar[
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1541590800]]]], 
                TrackedSymbols :> {
                 TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
              TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                Dynamic[
                 Replace[
                  MouseAnnotation[Null], {
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][Null] -> "", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1541590800][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                   Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                 TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0,
                 FrameMargins -> 0, Alignment -> Top, 
                ImageSize -> {Automatic, 14}]}, 
             DynamicBox[
              ToBoxes[
               Column[
                If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                  TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                  TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                   TypeSystem`NestedGrid`PackagePrivate`alignBar[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$][
                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                 TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                  TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                  TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                   TypeSystem`NestedGrid`PackagePrivate`alignBar[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$][
                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                Spacings -> 
                If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                  0, {{}, {0, 0.05, 0}}]], StandardForm], 
              ImageSizeCache -> {191., {105., 112.}}, 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
             TypeSystem`NestedGrid`PackagePrivate`deleteState[
              TypeSystem`NestedGrid`PackagePrivate`$state$$], 
             DynamicModuleValues :> {}, Initialization :> 
             Block[{$ContextPath = $ContextPath}, 
               Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
           "CopyTag", DisplayFunction -> (#& ), 
          InterpretationFunction -> ("Dataset[<>]"& )]], "ExerciseOutput", 
        Selectable -> False, Copyable -> False, Editable -> False, 
        ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->
  Automatic,ExpressionUUID->"eeac2db8-771d-411a-b902-730c063b8245"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\:521b\:5efa\:4e00\:4e2a\:884c\:661f\:8d28\:91cf\:7684\:6570\:636e\:96c6\
\:ff0c\:6309\:5176\:536b\:661f\:7684\:6700\:5927\:8d28\:91cf\:8fdb\:884c\:6392\
\:5e8f\:3002",
 StyleBox[ButtonBox["\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "45.5", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellChangeTimes->{{3.8375628278653135`*^9, 
  3.837562830690272*^9}},ExpressionUUID->"f97b2442-c5f5-4fce-a9fe-\
a75824e26bc5"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"\:671f\:671b\:8f93\:51fa", "\:ff1a"}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       TemplateBox[{
         TagBox[
          
          DynamicModuleBox[{
           TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
            Data`UnorderedAssociation[
             "DisplayedRowCount" -> 20, "RowCount" -> 8, "Length" -> 8, 
              "InitialType" -> TypeSystem`Assoc[
                TypeSystem`Atom[String], 
                TypeSystem`Atom[
                 Quantity[1, "Kilograms"]], 8], "DisplayedColumnCount" -> 20, 
              "DataRowCount" -> 0, "Shape" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`KeyValueShape[
                  TypeSystem`PackageScope`AtomShape[67.20000000000002], 
                  TypeSystem`PackageScope`AtomShape[75]]], 8, {}], 
              "DataColumnCount" -> 0, "InitialData" -> 
              TypeSystem`PackageScope`CacheHandle[593044157], "Type" -> 
              TypeSystem`Assoc[
                TypeSystem`Atom[String], 
                TypeSystem`Atom[
                 Quantity[1, "Kilograms"]], 8], "HandleQ" -> True, 
              "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
              TypeSystem`PackageScope`CacheHandle[593044157]], 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                 Style[
                  Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Mercury", 
                    Style[
                    "Mercury", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 674083146][{
                    
                    Key["Mercury"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Venus", 
                    Style[
                    "Venus", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 674083146][{
                    
                    Key["Venus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Mars", 
                    Style[
                    "Mars", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 674083146][{
                    
                    Key["Mars"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "1.2193221659524738`2.8853273743447083*^16", "\"kg\""}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Uranus", 
                    Style[
                    "Uranus", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 674083146][{
                    
                    Key["Uranus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "9.141802013724491324794`3.3647579628804034*^21", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Neptune", 
                    Style[
                    "Neptune", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 674083146][{
                    
                    Key["Neptune"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "2.1486889814509604147309`4.537272993178199*^22", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Earth", 
                    Style[
                    "Earth", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 674083146][{
                    
                    Key["Earth"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "7.3459006322855173653772`4.995678626217362*^22", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Saturn", 
                    Style[
                    "Saturn", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 674083146][{
                    
                    Key["Saturn"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "1.40510302468385873962401`4.924759393349542*^23", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Jupiter", 
                    Style[
                    "Jupiter", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 674083146][{
                    
                    Key["Jupiter"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "3.93014495624943813490738`4.98358290192235*^23", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                   BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                   Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                   BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                  LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                  False, ShowAutoStyles -> False]], 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
               TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
              Dynamic[
               TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
               TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                  Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                  
                  Module[{
                   TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 674083146][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                  TypeSystem`SparseGrid[
                   TypeSystem`H["(data no longer present)"]], 
                  If[GeneralUtilities`$DebugMode, 
                   
                   Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
              DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`alignBar[
              TypeSystem`NestedGrid`PackagePrivate`$state$$][
               TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                TypeSystem`PackageScope`Pathbar[
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 674083146]]]],
               TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
              Dynamic[
               Replace[
                MouseAnnotation[Null], {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[674083146][
                  Null] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[674083146][
                  
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0, 
              FrameMargins -> 0, Alignment -> Top, 
              ImageSize -> {Automatic, 14}]}, 
           DynamicBox[
            ToBoxes[
             Column[
              If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                 TypeSystem`NestedGrid`PackagePrivate`alignBar[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$][
                 TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
               TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                 TypeSystem`NestedGrid`PackagePrivate`alignBar[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$][
                 TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
              Spacings -> 
              If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                0, {{}, {0, 0.05, 0}}]], StandardForm], 
            ImageSizeCache -> {336., {204.125, 216.875}}, 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
           TypeSystem`NestedGrid`PackagePrivate`deleteState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           DynamicModuleValues :> {}, Initialization :> 
           Block[{$ContextPath = $ContextPath}, 
             Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("Dataset[<>]"& )]], "ExerciseOutput",
       ExpressionUUID->"1844da4e-a810-40d1-9367-f2f3f0dcfaca"],
      Apply[TextCell, 
       Cell[
        BoxData[
         TemplateBox[{
           TagBox[
            
            DynamicModuleBox[{
             TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
              Data`UnorderedAssociation[
               "RowCount" -> 8, "Length" -> 8, "InitialType" -> 
                TypeSystem`Assoc[
                  TypeSystem`Atom[String], 
                  TypeSystem`Atom[
                   Quantity[1, "Kilograms"]], 8], "Shape" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[67.20000000000002], 
                    TypeSystem`PackageScope`AtomShape[75]]], 8, {}], 
                "InitialData" -> 
                TypeSystem`PackageScope`CacheHandle[593044157], "Type" -> 
                TypeSystem`Assoc[
                  TypeSystem`Atom[String], 
                  TypeSystem`Atom[
                   Quantity[1, "Kilograms"]], 8], "HandleQ" -> True, 
                "RowTarget" -> 20, "Data" -> 
                TypeSystem`PackageScope`CacheHandle[593044157]], 
              TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
              DynamicModule[{
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                   Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Mercury", 
                    Style[
                    "Mercury", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 674083146][{
                    
                    Key["Mercury"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Venus", 
                    Style[
                    "Venus", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 674083146][{
                    
                    Key["Venus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Mars", 
                    Style[
                    "Mars", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 674083146][{
                    
                    Key["Mars"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{"1.2193221659524738`2.8853273743447083*^16", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Uranus", 
                    Style[
                    "Uranus", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 674083146][{
                    
                    Key["Uranus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{"9.141802013724491324794`3.3647579628804034*^21", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Neptune", 
                    Style[
                    "Neptune", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 674083146][{
                    
                    Key["Neptune"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"2.1486889814509604147309`4.537272993178199*^22", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Earth", 
                    Style[
                    "Earth", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 674083146][{
                    
                    Key["Earth"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{"7.3459006322855173653772`4.995678626217362*^22", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Saturn", 
                    Style[
                    "Saturn", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 674083146][{
                    
                    Key["Saturn"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{"1.40510302468385873962401`4.924759393349542*^23",
                     "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Jupiter", 
                    Style["Jupiter", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 674083146][{
                    
                    Key["Jupiter"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{"3.93014495624943813490738`4.98358290192235*^23", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                 TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                 TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 674083146][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                  TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                 TrackedSymbols :> {
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                DynamicModuleValues :> {}], 
              TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
              TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`alignBar[
                TypeSystem`NestedGrid`PackagePrivate`$state$$][
                 TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                  TypeSystem`PackageScope`Pathbar[
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    674083146]]]], 
                TrackedSymbols :> {
                 TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
              TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                Dynamic[
                 Replace[
                  MouseAnnotation[Null], {
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][Null] -> "", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    674083146][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                   Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                 TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0,
                 FrameMargins -> 0, Alignment -> Top, 
                ImageSize -> {Automatic, 14}]}, 
             DynamicBox[
              ToBoxes[
               Column[
                If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                  TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                  TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                   TypeSystem`NestedGrid`PackagePrivate`alignBar[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$][
                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                 TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                  TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                  TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                   TypeSystem`NestedGrid`PackagePrivate`alignBar[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$][
                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                Spacings -> 
                If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                  0, {{}, {0, 0.05, 0}}]], StandardForm], 
              ImageSizeCache -> {191., {103., 110.}}, 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
             TypeSystem`NestedGrid`PackagePrivate`deleteState[
              TypeSystem`NestedGrid`PackagePrivate`$state$$], 
             DynamicModuleValues :> {}, Initialization :> 
             Block[{$ContextPath = $ContextPath}, 
               Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
           "CopyTag", DisplayFunction -> (#& ), 
          InterpretationFunction -> ("Dataset[<>]"& )]], "ExerciseOutput", 
        Selectable -> False, Copyable -> False, Editable -> False, 
        ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->
  Automatic,ExpressionUUID->"8c9791a1-d40c-4dea-8d32-2d6f75dbd6e5"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\:521b\:5efa\:4e00\:4e2a\:884c\:661f\:53ca\:5176\:6240\:6709\:536b\:661f\
\:7684\:8d28\:91cf\:5e73\:5747\:503c\:7684\:6570\:636e\:96c6\:3002",
 StyleBox[ButtonBox["\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "45.6", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellChangeTimes->{{3.8375628361512165`*^9, 
  3.837562839301822*^9}},ExpressionUUID->"b535d853-8a04-4ee5-ac60-\
e1d159317baa"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"\:671f\:671b\:8f93\:51fa", "\:ff1a"}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       TemplateBox[{
         TagBox[
          
          DynamicModuleBox[{
           TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
            Data`UnorderedAssociation[
             "DisplayedRowCount" -> 20, "RowCount" -> 8, "Length" -> 8, 
              "InitialType" -> TypeSystem`Assoc[
                TypeSystem`Atom[String], 
                TypeSystem`Atom[
                 Quantity[1, "Kilograms"]], 8], "DisplayedColumnCount" -> 20, 
              "DataRowCount" -> 0, "Shape" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`KeyValueShape[
                  TypeSystem`PackageScope`AtomShape[67.20000000000002], 
                  TypeSystem`PackageScope`AtomShape[75]]], 8, {}], 
              "DataColumnCount" -> 0, "InitialData" -> 
              TypeSystem`PackageScope`CacheHandle[625829357], "Type" -> 
              TypeSystem`Assoc[
                TypeSystem`Atom[String], 
                TypeSystem`Atom[
                 Quantity[1, "Kilograms"]], 8], "HandleQ" -> True, 
              "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
              TypeSystem`PackageScope`CacheHandle[625829357]], 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                 Style[
                  Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Mercury", 
                    Style[
                    "Mercury", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 716944218][{
                    
                    Key["Mercury"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Venus", 
                    Style[
                    "Venus", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 716944218][{
                    
                    Key["Venus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Earth", 
                    Style[
                    "Earth", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 716944218][{
                    
                    Key["Earth"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "7.3459006322855173653772`4.995678626217362*^22", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Mars", 
                    Style[
                    "Mars", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 716944218][{
                    
                    Key["Mars"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "6.096610829762369`2.8853273743447083*^15", "\"kg\""}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Jupiter", 
                    Style[
                    "Jupiter", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 716944218][{
                    
                    Key["Jupiter"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "3.22135986335441`1.9995659225206872*^14", "\"kg\""}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Saturn", 
                    Style[
                    "Saturn", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 716944218][{
                    
                    Key["Saturn"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "8.240688022534537`1.999565922520683*^15", "\"kg\""}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Uranus", 
                    Style[
                    "Uranus", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 716944218][{
                    
                    Key["Uranus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "3.56597045338767194`2.995678626217367*^17", "\"kg\""}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Neptune", 
                    Style[
                    "Neptune", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 716944218][{
                    
                    Key["Neptune"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "4.345090048245482605`1.999565922520685*^18", "\"kg\""}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                   BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                   Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                   BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                  LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                  False, ShowAutoStyles -> False]], 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
               TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
              Dynamic[
               TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
               TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                  Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                  
                  Module[{
                   TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 716944218][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                  TypeSystem`SparseGrid[
                   TypeSystem`H["(data no longer present)"]], 
                  If[GeneralUtilities`$DebugMode, 
                   
                   Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
              DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`alignBar[
              TypeSystem`NestedGrid`PackagePrivate`$state$$][
               TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                TypeSystem`PackageScope`Pathbar[
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 716944218]]]],
               TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
              Dynamic[
               Replace[
                MouseAnnotation[Null], {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[716944218][
                  Null] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[716944218][
                  
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0, 
              FrameMargins -> 0, Alignment -> Top, 
              ImageSize -> {Automatic, 14}]}, 
           DynamicBox[
            ToBoxes[
             Column[
              If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                 TypeSystem`NestedGrid`PackagePrivate`alignBar[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$][
                 TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
               TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                 TypeSystem`NestedGrid`PackagePrivate`alignBar[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$][
                 TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
              Spacings -> 
              If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                0, {{}, {0, 0.05, 0}}]], StandardForm], 
            ImageSizeCache -> {336., {204.125, 216.875}}, 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
           TypeSystem`NestedGrid`PackagePrivate`deleteState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           DynamicModuleValues :> {}, Initialization :> 
           Block[{$ContextPath = $ContextPath}, 
             Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("Dataset[<>]"& )]], "ExerciseOutput",
       ExpressionUUID->"9e541be0-0793-4b4d-b00b-905d0122b404"],
      Apply[TextCell, 
       Cell[
        BoxData[
         TemplateBox[{
           TagBox[
            
            DynamicModuleBox[{
             TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
              Data`UnorderedAssociation[
               "RowCount" -> 8, "Length" -> 8, "InitialType" -> 
                TypeSystem`Assoc[
                  TypeSystem`Atom[String], 
                  TypeSystem`Atom[
                   Quantity[1, "Kilograms"]], 8], "Shape" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[67.20000000000002], 
                    TypeSystem`PackageScope`AtomShape[75]]], 8, {}], 
                "InitialData" -> 
                TypeSystem`PackageScope`CacheHandle[625829357], "Type" -> 
                TypeSystem`Assoc[
                  TypeSystem`Atom[String], 
                  TypeSystem`Atom[
                   Quantity[1, "Kilograms"]], 8], "HandleQ" -> True, 
                "RowTarget" -> 20, "Data" -> 
                TypeSystem`PackageScope`CacheHandle[625829357]], 
              TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
              DynamicModule[{
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                   Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Mercury", 
                    Style[
                    "Mercury", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 716944218][{
                    
                    Key["Mercury"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Venus", 
                    Style[
                    "Venus", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 716944218][{
                    
                    Key["Venus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Earth", 
                    Style[
                    "Earth", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 716944218][{
                    
                    Key["Earth"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{"7.3459006322855173653772`4.995678626217362*^22", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Mars", 
                    Style[
                    "Mars", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 716944218][{
                    
                    Key["Mars"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{"6.096610829762369`2.8853273743447083*^15", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Jupiter", 
                    Style[
                    "Jupiter", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 716944218][{
                    
                    Key["Jupiter"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{"3.22135986335441`1.9995659225206872*^14", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Saturn", 
                    Style[
                    "Saturn", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 716944218][{
                    
                    Key["Saturn"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"8.240688022534537`1.999565922520683*^15", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Uranus", 
                    Style[
                    "Uranus", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 716944218][{
                    
                    Key["Uranus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{"3.56597045338767194`2.995678626217367*^17", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Neptune", 
                    Style[
                    "Neptune", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 716944218][{
                    
                    Key["Neptune"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    
                    RowBox[{"4.345090048245482605`1.999565922520685*^18", 
                    "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                 TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                 TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 716944218][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                  TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                 TrackedSymbols :> {
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                DynamicModuleValues :> {}], 
              TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
              TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`alignBar[
                TypeSystem`NestedGrid`PackagePrivate`$state$$][
                 TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                  TypeSystem`PackageScope`Pathbar[
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    716944218]]]], 
                TrackedSymbols :> {
                 TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
              TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                Dynamic[
                 Replace[
                  MouseAnnotation[Null], {
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][Null] -> "", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    716944218][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                   Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                 TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0,
                 FrameMargins -> 0, Alignment -> Top, 
                ImageSize -> {Automatic, 14}]}, 
             DynamicBox[
              ToBoxes[
               Column[
                If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                  TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                  TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                   TypeSystem`NestedGrid`PackagePrivate`alignBar[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$][
                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                 TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                  TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                  TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                   TypeSystem`NestedGrid`PackagePrivate`alignBar[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$][
                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                Spacings -> 
                If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                  0, {{}, {0, 0.05, 0}}]], StandardForm], 
              ImageSizeCache -> {191., {103., 110.}}, 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
             TypeSystem`NestedGrid`PackagePrivate`deleteState[
              TypeSystem`NestedGrid`PackagePrivate`$state$$], 
             DynamicModuleValues :> {}, Initialization :> 
             Block[{$ContextPath = $ContextPath}, 
               Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
           "CopyTag", DisplayFunction -> (#& ), 
          InterpretationFunction -> ("Dataset[<>]"& )]], "ExerciseOutput", 
        Selectable -> False, Copyable -> False, Editable -> False, 
        ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->
  Automatic,ExpressionUUID->"4b0f303e-4a81-4bd3-82a7-38732b033105"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\:5bf9\:4e8e\:6bcf\:9897\:884c\:661f\:ff0c\:521b\:5efa\:8d28\:91cf\:5927\
\:4e8e 0.0001 \:4e2a\:5730\:7403\:8d28\:91cf\:7684\:536b\:661f\:5217\:8868\
\:3002",
 StyleBox[ButtonBox["\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "45.7", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellChangeTimes->{{3.837562844543149*^9, 3.8375628473192253`*^9}},
 CellTags->
  "LastCellOfAPage",ExpressionUUID->"05ea2a8c-84d5-4473-896b-450babd0658f"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"\:671f\:671b\:8f93\:51fa", "\:ff1a"}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       TemplateBox[{
         TagBox[
          
          DynamicModuleBox[{
           TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
            Data`UnorderedAssociation[
             "DisplayedRowCount" -> 20, "RowCount" -> 8, "Length" -> 8, 
              "InitialType" -> TypeSystem`Assoc[
                TypeSystem`Atom[String], 
                TypeSystem`Vector[
                 TypeSystem`Atom[String], TypeSystem`AnyLength], 8], 
              "DisplayedColumnCount" -> 20, "DataRowCount" -> 0, "Shape" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`KeyValueShape[
                  TypeSystem`PackageScope`AtomShape[67.20000000000002], 
                  TypeSystem`PackageScope`UnknownShape]], 8, {}], 
              "DataColumnCount" -> 0, "InitialData" -> 
              TypeSystem`PackageScope`CacheHandle[951283531], "Type" -> 
              TypeSystem`Assoc[
                TypeSystem`Atom[String], 
                TypeSystem`Vector[
                 TypeSystem`Atom[String], TypeSystem`AnyLength], 8], 
              "HandleQ" -> True, "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
              TypeSystem`PackageScope`CacheHandle[951283531]], 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                 Style[
                  Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Mercury", 
                    Style[
                    "Mercury", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Mercury"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], {}}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Venus", 
                    Style[
                    "Venus", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Venus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], {}}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Earth", 
                    Style[
                    "Earth", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Earth"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"Moon"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Moon"}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Earth"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"]]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Mars", 
                    Style[
                    "Mars", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Mars"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], {}}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Jupiter", 
                    Style[
                    "Jupiter", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Jupiter"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"Io", "Europa", "Ganymede", "Callisto"}, 
                    ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"Io", "Europa", "Ganymede", "Callisto"}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Jupiter"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"]]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Saturn", 
                    Style[
                    "Saturn", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Saturn"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"Tethys", "Dione", "Rhea", "Titan", "Iapetus"}, 
                    ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"Tethys", "Dione", "Rhea", "Titan", "Iapetus"}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Saturn"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"]]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Uranus", 
                    Style[
                    "Uranus", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Uranus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"Ariel", "Umbriel", "Titania", "Oberon"}, 
                    ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"Ariel", "Umbriel", "Titania", "Oberon"}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Uranus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"]]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Neptune", 
                    Style[
                    "Neptune", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Neptune"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"Triton"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Triton"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Neptune"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"]]}}, BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                   Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                   BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                  LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                  False, ShowAutoStyles -> False]], 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
               TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
              Dynamic[
               TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
               TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                  Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                  
                  Module[{
                   TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                  TypeSystem`SparseGrid[
                   TypeSystem`H["(data no longer present)"]], 
                  If[GeneralUtilities`$DebugMode, 
                   
                   Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
              DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`alignBar[
              TypeSystem`NestedGrid`PackagePrivate`$state$$][
               TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                TypeSystem`PackageScope`Pathbar[
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  1219396726]]]], 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
              Dynamic[
               Replace[
                MouseAnnotation[Null], {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1219396726][
                  Null] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1219396726][
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0, 
              FrameMargins -> 0, Alignment -> Top, 
              ImageSize -> {Automatic, 14}]}, 
           DynamicBox[
            ToBoxes[
             Column[
              If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                 TypeSystem`NestedGrid`PackagePrivate`alignBar[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$][
                 TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
               TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                 TypeSystem`NestedGrid`PackagePrivate`alignBar[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$][
                 TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
              Spacings -> 
              If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                0, {{}, {0, 0.05, 0}}]], StandardForm], 
            ImageSizeCache -> {586., {204.125, 216.875}}, 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
           TypeSystem`NestedGrid`PackagePrivate`deleteState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           DynamicModuleValues :> {}, Initialization :> 
           Block[{$ContextPath = $ContextPath}, 
             Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("Dataset[<>]"& )]], "ExerciseOutput",
       ExpressionUUID->"e426562b-35f5-497f-a824-7b49d08f4dda"],
      Apply[TextCell, 
       Cell[
        BoxData[
         TemplateBox[{
           TagBox[
            
            DynamicModuleBox[{
             TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
              Data`UnorderedAssociation[
               "RowCount" -> 8, "Length" -> 8, "InitialType" -> 
                TypeSystem`Assoc[
                  TypeSystem`Atom[String], 
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 8], 
                "Shape" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[67.20000000000002], 
                    TypeSystem`PackageScope`UnknownShape]], 8, {}], 
                "InitialData" -> 
                TypeSystem`PackageScope`CacheHandle[951283531], "Type" -> 
                TypeSystem`Assoc[
                  TypeSystem`Atom[String], 
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 8], 
                "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
                TypeSystem`PackageScope`CacheHandle[951283531]], 
              TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
              DynamicModule[{
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                   Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Mercury", 
                    Style[
                    "Mercury", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Mercury"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Mercury"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], {}}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Venus", 
                    Style[
                    "Venus", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Venus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Venus"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], {}}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Earth", 
                    Style[
                    "Earth", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Earth"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"Moon"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Moon"}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Earth"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Earth"]]], "Mouse"]]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Mars", 
                    Style[
                    "Mars", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Mars"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Mars"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], {}}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Jupiter", 
                    Style[
                    "Jupiter", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Jupiter"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"Io", "Europa", "Ganymede", "Callisto"}, 
                    ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"Io", "Europa", "Ganymede", "Callisto"}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Jupiter"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Jupiter"]]], "Mouse"]]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Saturn", 
                    Style[
                    "Saturn", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Saturn"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"Tethys", "Dione", "Rhea", "Titan", "Iapetus"}, 
                    ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"Tethys", "Dione", "Rhea", "Titan", "Iapetus"}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Saturn"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Saturn"]]], "Mouse"]]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Uranus", 
                    Style[
                    "Uranus", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Uranus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"Ariel", "Umbriel", "Titania", "Oberon"}, 
                    ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"Ariel", "Umbriel", "Titania", "Oberon"}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Uranus"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Uranus"]]], "Mouse"]]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Neptune", 
                    Style[
                    "Neptune", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Neptune"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"Triton"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Triton"}, ShowStringCharacters -> False], 
                    FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][{
                    Key["Neptune"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    GeneralUtilities`Slice[
                    Key["Neptune"]]], "Mouse"]]}}, BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                 TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                 TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1219396726][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                  TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                 TrackedSymbols :> {
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                DynamicModuleValues :> {}], 
              TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
              TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`alignBar[
                TypeSystem`NestedGrid`PackagePrivate`$state$$][
                 TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                  TypeSystem`PackageScope`Pathbar[
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1219396726]]]], 
                TrackedSymbols :> {
                 TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
              TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                Dynamic[
                 Replace[
                  MouseAnnotation[Null], {
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][Null] -> "", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1219396726][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                   Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                 TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0,
                 FrameMargins -> 0, Alignment -> Top, 
                ImageSize -> {Automatic, 14}]}, 
             DynamicBox[
              ToBoxes[
               Column[
                If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                  TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                  TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                   TypeSystem`NestedGrid`PackagePrivate`alignBar[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$][
                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                 TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                  TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                  TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                   TypeSystem`NestedGrid`PackagePrivate`alignBar[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$][
                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                Spacings -> 
                If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                  0, {{}, {0, 0.05, 0}}]], StandardForm], 
              ImageSizeCache -> {314., {100., 107.}}, 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
             TypeSystem`NestedGrid`PackagePrivate`deleteState[
              TypeSystem`NestedGrid`PackagePrivate`$state$$], 
             DynamicModuleValues :> {}, Initialization :> 
             Block[{$ContextPath = $ContextPath}, 
               Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
           "CopyTag", DisplayFunction -> (#& ), 
          InterpretationFunction -> ("Dataset[<>]"& )]], "ExerciseOutput", 
        Selectable -> False, Copyable -> False, Editable -> False, 
        ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->
  Automatic,ExpressionUUID->"51020751-c1ea-4fdf-a8e6-9b1d14e4a2df"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\:521b\:5efa\:4e00\:4e2a\:4e2d\:7f8e\:6d32(Central America)\:56fd\:5bb6\
\:7684\:8bcd\:4e91\:ff0c\:56fd\:5bb6\:7684\:540d\:79f0\:5927\:5c0f\:4e0e\:7ef4\
\:57fa\:767e\:79d1\:4e0a\:5173\:4e8e\:5b83\:4eec\:7684\:6587\:7ae0\:7684\:957f\
\:5ea6\:6210\:6b63\:6bd4\:3002",
 StyleBox[ButtonBox["\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "45.8", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellChangeTimes->{{3.837562852275464*^9, 
  3.8375628552021184`*^9}},ExpressionUUID->"081e9bd2-9149-4700-b7da-\
9658ade5c25e"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"\:671f\:671b\:8f93\:51fa\:793a\:4f8b", "\:ff1a"}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       GraphicsBox[{{}, {InsetBox[
           StyleBox["\<\"Guatemala\"\>",
            StripOnInput->False,
            FontFamily->"Helvetica",
            FontSize->Scaled[0.19886363636363638`],
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->"Plain",
            FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}], 
          InsetBox[
           StyleBox["\<\"El Salvador\"\>",
            StripOnInput->False,
            FontFamily->"Helvetica",
            FontSize->Scaled[0.18423365121141416`],
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->"Plain",
            FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0., -54.5}], 
          InsetBox[
           StyleBox["\<\"Nicaragua\"\>",
            StripOnInput->False,
            FontFamily->"Helvetica",
            FontSize->Scaled[0.13436183774798602`],
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->"Plain",
            FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {0., 46.5}], 
          InsetBox[
           StyleBox["\<\"Panama\"\>",
            StripOnInput->False,
            FontFamily->"Helvetica",
            FontSize->Scaled[0.11573041976356105`],
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->"Plain",
            FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {11., 73.5}], 
          InsetBox[
           StyleBox["\<\"Belize\"\>",
            StripOnInput->False,
            FontFamily->"Helvetica",
            FontSize->Scaled[0.12020666764786093`],
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->"Plain",
            
            FontColor->RGBColor[
             0.922526, 0.385626, 0.209179]], {-123., 83.5}], InsetBox[
           StyleBox["\<\"Costa Rica\"\>",
            StripOnInput->False,
            FontFamily->"Helvetica",
            FontSize->Scaled[0.0399548073468363],
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->"Plain",
            FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {4., -83.5}], 
          InsetBox[
           StyleBox["\<\"Honduras\"\>",
            StripOnInput->False,
            FontFamily->"Helvetica",
            FontSize->Scaled[0.02840909090909091],
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->"Plain",
            
            FontColor->RGBColor[
             0.363898, 0.618501, 0.782349]], {27., -27.5}]}},
        Method->{
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
        PlotRange->{{-180.5, 171.5}, {-90., 105.}}]], "ExerciseOutput",
       ExpressionUUID->"33107c0d-94eb-4b7d-b314-320c23dbf903"],
      Apply[TextCell, 
       Cell[
        BoxData[
         GraphicsBox[{{}, {
            InsetBox[
             StyleBox[
             "\"Guatemala\"", StripOnInput -> False, FontFamily -> 
              "Helvetica", FontSize -> Scaled[0.19886363636363638`], 
              FontWeight -> Plain, FontSlant -> Plain, FontTracking -> 
              "Plain", FontColor -> RGBColor[0.368417, 0.506779, 0.709798]], {
             0, 0}], 
            InsetBox[
             StyleBox[
             "\"El Salvador\"", StripOnInput -> False, FontFamily -> 
              "Helvetica", FontSize -> Scaled[0.18423365121141416`], 
              FontWeight -> Plain, FontSlant -> Plain, FontTracking -> 
              "Plain", FontColor -> RGBColor[0.880722, 0.611041, 0.142051]], {
             0., -54.5}], 
            InsetBox[
             StyleBox[
             "\"Nicaragua\"", StripOnInput -> False, FontFamily -> 
              "Helvetica", FontSize -> Scaled[0.13436183774798602`], 
              FontWeight -> Plain, FontSlant -> Plain, FontTracking -> 
              "Plain", FontColor -> RGBColor[0.560181, 0.691569, 0.194885]], {
             0., 46.5}], 
            InsetBox[
             StyleBox[
             "\"Panama\"", StripOnInput -> False, FontFamily -> "Helvetica", 
              FontSize -> Scaled[0.11573041976356105`], FontWeight -> Plain, 
              FontSlant -> Plain, FontTracking -> "Plain", FontColor -> 
              RGBColor[0.528488, 0.470624, 0.701351]], {11., 73.5}], 
            InsetBox[
             StyleBox[
             "\"Belize\"", StripOnInput -> False, FontFamily -> "Helvetica", 
              FontSize -> Scaled[0.12020666764786093`], FontWeight -> Plain, 
              FontSlant -> Plain, FontTracking -> "Plain", FontColor -> 
              RGBColor[0.922526, 0.385626, 0.209179]], {-123., 83.5}], 
            InsetBox[
             StyleBox[
             "\"Costa Rica\"", StripOnInput -> False, FontFamily -> 
              "Helvetica", FontSize -> Scaled[0.0399548073468363], FontWeight -> 
              Plain, FontSlant -> Plain, FontTracking -> "Plain", FontColor -> 
              RGBColor[0.772079, 0.431554, 0.102387]], {4., -83.5}], 
            InsetBox[
             StyleBox[
             "\"Honduras\"", StripOnInput -> False, FontFamily -> "Helvetica",
               FontSize -> Scaled[0.02840909090909091], FontWeight -> Plain, 
              FontSlant -> Plain, FontTracking -> "Plain", FontColor -> 
              RGBColor[0.363898, 0.618501, 0.782349]], {27., -27.5}]}}, 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
            Automatic}, PlotRange -> {{-180.5, 171.5}, {-90., 105.}}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->
  Automatic,ExpressionUUID->"081a95c7-c788-466b-8140-d344811a61dd"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\:5728 Fireballs & Bolides \:6570\:636e\:96c6\:4e2d\:627e\:51fa\:6700\:5927\
\:7684\:89c2\:6d4b\:9ad8\:5ea6(Altitude)\:3002",
 StyleBox[ButtonBox["\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "45.9", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellChangeTimes->{{3.8375628605518723`*^9, 
  3.837562865324817*^9}},ExpressionUUID->"5b7c6476-fce5-4bc0-aa5b-\
0bf16febb604"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"\:671f\:671b\:8f93\:51fa", "\:ff1a"}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       TemplateBox[{"66.6`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]], "ExerciseOutput",ExpressionUUID->
       "845efa40-fe02-476f-b8be-fe78cd273bb2"],
      Apply[TextCell, 
       Cell[
        BoxData[
         TemplateBox[{"66.6`", "\"km\"", "kilometers", "\"Kilometers\""}, 
          "Quantity"]], "ExerciseOutput", Selectable -> False, Copyable -> 
        False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->
  Automatic,ExpressionUUID->"ebc0463a-8631-4d0e-a003-285d3ea199e5"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\:5728 Fireballs & Bolides \:6570\:636e\:96c6\:4e2d\:627e\:51fa 5 \:4e2a\
\:6700\:5927\:89c2\:6d4b\:9ad8\:5ea6\:7684\:6570\:636e\:96c6\:3002",
 StyleBox[ButtonBox["\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "45.10", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellChangeTimes->{{3.837562872163592*^9, 
  3.8375628749967775`*^9}},ExpressionUUID->"2a28a26a-8434-4ec1-9105-\
0f25b8319d30"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"\:671f\:671b\:8f93\:51fa", "\:ff1a"}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       TemplateBox[{
         TagBox[
          
          DynamicModuleBox[{
           TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
            Data`UnorderedAssociation[
             "DisplayedRowCount" -> 20, "RowCount" -> 5, "Length" -> 5, 
              "InitialType" -> TypeSystem`Vector[
                TypeSystem`Atom[
                 Quantity[1, "Kilometers"]], 5], "DisplayedColumnCount" -> 20,
               "DataRowCount" -> 0, "Shape" -> TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`AtomShape[75]], 5, {}], 
              "DataColumnCount" -> 0, "InitialData" -> 
              TypeSystem`PackageScope`CacheHandle[797530512], "Type" -> 
              TypeSystem`Vector[
                TypeSystem`Atom[
                 Quantity[1, "Kilometers"]], 5], "HandleQ" -> True, 
              "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
              TypeSystem`PackageScope`CacheHandle[797530512]], 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                 Style[
                  Grid[{{
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"66.6`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    110624157][
                    GeneralUtilities`Slice[1]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"59.3`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    110624157][
                    GeneralUtilities`Slice[2]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"50", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    110624157][
                    GeneralUtilities`Slice[3]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"45.5`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    110624157][
                    GeneralUtilities`Slice[4]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"44", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    110624157][
                    GeneralUtilities`Slice[5]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                   BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                   Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                   BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                  LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                  False, ShowAutoStyles -> False]], 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
               TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
              Dynamic[
               TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
               TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                  Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                  
                  Module[{
                   TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 110624157][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                  TypeSystem`SparseGrid[
                   TypeSystem`H["(data no longer present)"]], 
                  If[GeneralUtilities`$DebugMode, 
                   
                   Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
              DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`alignBar[
              TypeSystem`NestedGrid`PackagePrivate`$state$$][
               TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                TypeSystem`PackageScope`Pathbar[
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 110624157]]]],
               TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
              Dynamic[
               Replace[
                MouseAnnotation[Null], {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[110624157][
                  Null] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[110624157][
                  
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0, 
              FrameMargins -> 0, Alignment -> Top, 
              ImageSize -> {Automatic, 14}]}, 
           DynamicBox[
            ToBoxes[
             Column[
              If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                 TypeSystem`NestedGrid`PackagePrivate`alignBar[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$][
                 TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
               TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                 TypeSystem`NestedGrid`PackagePrivate`alignBar[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$][
                 TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
              Spacings -> 
              If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                0, {{}, {0, 0.05, 0}}]], StandardForm], 
            ImageSizeCache -> {120., {131.125, 143.875}}, 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
           TypeSystem`NestedGrid`PackagePrivate`deleteState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           DynamicModuleValues :> {}, Initialization :> 
           Block[{$ContextPath = $ContextPath}, 
             Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("Dataset[<>]"& )]], "ExerciseOutput",
       ExpressionUUID->"b3f17579-c458-4556-bc32-9462e56cfaf5"],
      Apply[TextCell, 
       Cell[
        BoxData[
         TemplateBox[{
           TagBox[
            
            DynamicModuleBox[{
             TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
              Data`UnorderedAssociation[
               "RowCount" -> 5, "Length" -> 5, "InitialType" -> 
                TypeSystem`Vector[
                  TypeSystem`Atom[
                   Quantity[1, "Kilometers"]], 5], "Shape" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`AtomShape[75]], 5, {}], 
                "InitialData" -> 
                TypeSystem`PackageScope`CacheHandle[797530512], "Type" -> 
                TypeSystem`Vector[
                  TypeSystem`Atom[
                   Quantity[1, "Kilometers"]], 5], "HandleQ" -> True, 
                "RowTarget" -> 20, "Data" -> 
                TypeSystem`PackageScope`CacheHandle[797530512]], 
              TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
              DynamicModule[{
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                   Style[
                    Grid[{{
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"66.6`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    110624157][
                    GeneralUtilities`Slice[1]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"59.3`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    110624157][
                    GeneralUtilities`Slice[2]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"50", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    110624157][
                    GeneralUtilities`Slice[3]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"45.5`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    110624157][
                    GeneralUtilities`Slice[4]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"44", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    110624157][
                    GeneralUtilities`Slice[5]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                 TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                 TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 110624157][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                  TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                 TrackedSymbols :> {
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                DynamicModuleValues :> {}], 
              TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
              TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`alignBar[
                TypeSystem`NestedGrid`PackagePrivate`$state$$][
                 TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                  TypeSystem`PackageScope`Pathbar[
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    110624157]]]], 
                TrackedSymbols :> {
                 TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
              TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                Dynamic[
                 Replace[
                  MouseAnnotation[Null], {
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    110624157][Null] -> "", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    110624157][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                   Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                 TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0,
                 FrameMargins -> 0, Alignment -> Top, 
                ImageSize -> {Automatic, 14}]}, 
             DynamicBox[
              ToBoxes[
               Column[
                If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                  TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                  TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                   TypeSystem`NestedGrid`PackagePrivate`alignBar[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$][
                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                 TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                  TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                  TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                   TypeSystem`NestedGrid`PackagePrivate`alignBar[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$][
                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                Spacings -> 
                If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                  0, {{}, {0, 0.05, 0}}]], StandardForm], 
              ImageSizeCache -> {86., {64., 71.}}, 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
             TypeSystem`NestedGrid`PackagePrivate`deleteState[
              TypeSystem`NestedGrid`PackagePrivate`$state$$], 
             DynamicModuleValues :> {}, Initialization :> 
             Block[{$ContextPath = $ContextPath}, 
               Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
           "CopyTag", DisplayFunction -> (#& ), 
          InterpretationFunction -> ("Dataset[<>]"& )]], "ExerciseOutput", 
        Selectable -> False, Copyable -> False, Editable -> False, 
        ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->
  Automatic,ExpressionUUID->"9585da62-11c5-4fb1-9c0f-450c1f84782e"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\:5728 Fireballs & Bolides \:6570\:636e\:96c6\:4e2d\:ff0c\:5bf9\:8fde\:7eed\
\:7684\:5cf0\:503c\:4eae\:5ea6\:65f6\:95f4\:7684\:5dee\:503c\:521b\:5efa\:4e00\
\:4e2a\:76f4\:65b9\:56fe\:3002",
 StyleBox[ButtonBox["\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "45.11", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellChangeTimes->{{3.8375628821360874`*^9, 
  3.8375628854880095`*^9}},ExpressionUUID->"b0d8c9aa-21d8-4b9e-bea1-\
96535e829ed2"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"\:671f\:671b\:8f93\:51fa", "\:ff1a"}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       GraphicsBox[{
         {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
          EdgeForm[{Opacity[0.609], Thickness[Small]}], {}, 
          {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
           EdgeForm[{Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{0., 0}, {10., 47.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{36.65652522017613, 
                79.88347751371828}, {-143.64192363550808`, 116.5}}],
              StatusArea[#, 47]& ,
              TagBoxNote->"47"],
             StyleBox["47", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[47, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{10., 0}, {20., 24.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{78.88347751371828, 
                122.11042980726043`}, {-16.827790792599828`, 
                116.50000000000001`}}],
              StatusArea[#, 24]& ,
              TagBoxNote->"24"],
             StyleBox["24", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[24, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{20., 0}, {30., 6.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{121.11042980726043`, 164.33738210080256`}, {
                82.41805230185005, 116.50000000000001`}}],
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{30., 0}, {40., 7.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{163.33738210080256`, 206.5643343943447}, {
                76.90439435215839, 116.50000000000001`}}],
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{40., 0}, {50., 3.}, "RoundingRadius" -> 0]},
               ImageSizeCache->{{205.5643343943447, 248.79128668788684`}, {
                98.95902615092504, 116.50000000000001`}}],
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{50., 0}, {60., 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{247.79128668788684`, 291.018238981429}, {
                109.98634205030835`, 116.50000000000001`}}],
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{60., 0}, {70., 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{290.018238981429, 333.24519127497115`}, {
                109.98634205030835`, 116.50000000000001`}}],
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{390., 0}, {400., 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1683.5076646683196`, 1726.7346169618618`}, {
                109.98634205030835`, 116.50000000000001`}}],
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{480., 0}, {490., 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2063.5502353101992`, 2106.7771876037414`}, {
                109.98634205030835`, 116.50000000000001`}}],
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {}], 
             "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{-2.05, 0},
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        PlotRange->{{0, 102.5}, {All, All}},
        PlotRangePadding->{{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}},
        Ticks->{Automatic, Automatic}]], "ExerciseOutput",ExpressionUUID->
       "4e067446-9785-4805-b742-ac433c55f761"],
      Apply[TextCell, 
       Cell[
        BoxData[
         GraphicsBox[{{
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
            EdgeForm[{
              Opacity[0.609], 
              Thickness[Small]}], {}, {
             RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
             EdgeForm[{
               Opacity[0.609], 
               Thickness[Small]}], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0., 0}, {10., 47.}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{19.04463570856685, 
                  40.49407818938077}, {-72.83794052814244, 
                  56.226365648408205`}}], StatusArea[#, 47]& , TagBoxNote -> 
                "47"], 
               StyleBox["47", {}, StripOnInput -> False]], Annotation[#, 
               Style[47, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{10., 0}, {20., 24.}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{39.99407818938077, 
                  61.44352067019469}, {-9.923492824724029, 
                  56.22636564840821}}], StatusArea[#, 24]& , TagBoxNote -> 
                "24"], 
               StyleBox["24", {}, StripOnInput -> False]], Annotation[#, 
               Style[24, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{20., 0}, {30., 6.}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{60.94352067019469, 82.39296315100862}, {
                  39.31390103012515, 56.22636564840821}}], StatusArea[#, 6]& ,
                 TagBoxNote -> "6"], 
               StyleBox["6", {}, StripOnInput -> False]], Annotation[#, 
               Style[6, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{30., 0}, {40., 7.}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{81.89296315100862, 
                  103.34240563182252`}, {36.578490260411314`, 
                  56.22636564840821}}], StatusArea[#, 7]& , TagBoxNote -> 
                "7"], 
               StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
               Style[7, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{40., 0}, {50., 3.}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{102.84240563182252`, 
                  124.29184811263644`}, {47.52013333926668, 
                  56.22636564840821}}], StatusArea[#, 3]& , TagBoxNote -> 
                "3"], 
               StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
               Style[3, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{50., 0}, {60., 1.}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{123.79184811263644`, 
                  145.24129059345037`}, {52.99095487869437, 
                  56.22636564840821}}], StatusArea[#, 1]& , TagBoxNote -> 
                "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{60., 0}, {70., 1.}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{144.74129059345037`, 
                  166.19073307426427`}, {52.99095487869437, 
                  56.22636564840821}}], StatusArea[#, 1]& , TagBoxNote -> 
                "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{390., 0}, {400., 1.}, "RoundingRadius" -> 0]},
                  ImageSizeCache -> {{836.0728924603096, 857.5223349411235}, {
                  52.99095487869437, 56.22636564840821}}], StatusArea[#, 1]& ,
                 TagBoxNote -> "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{480., 0}, {490., 1.}, "RoundingRadius" -> 0]},
                  ImageSizeCache -> {{1024.617874787635, 
                  1046.0673172684487`}, {52.99095487869437, 
                  56.22636564840821}}], StatusArea[#, 1]& , TagBoxNote -> 
                "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], 
               "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}}},
           AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
          Axes -> {True, True}, AxesLabel -> {None, None}, 
          AxesOrigin -> {-2.05, 0}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{0, 102.5}, {All, All}}, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->
  Automatic,ExpressionUUID->"2ca6c9b5-ed20-4b99-aef4-89005e3ade55"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\:7ed8\:5236\:51fa Fireballs & Bolides \:6570\:636e\:96c6\:4e2d\:524d 10 \
\:4e2a\:6761\:76ee\:7684\:6700\:8fd1\:57ce\:5e02\:ff0c\:5e76\:4e3a\:6bcf\:4e2a\
\:57ce\:5e02\:6dfb\:52a0\:6807\:7b7e\:3002",
 StyleBox[ButtonBox["\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "45.12", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellChangeTimes->{{3.8375628910675974`*^9, 
  3.837562894611844*^9}},ExpressionUUID->"f0ed566e-acf3-4a03-8fd8-\
b6b498805805"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"\:671f\:671b\:8f93\:51fa", "\:ff1a"}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       GraphicsBox[{{
          {Texture[
            FormBox[
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1: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
o5f5d5fYZX7meNrzVZz0ULuNOcLxFMsgX4BsYNXmUWxAjFl4vrJ8XgOui+vk
WaS90/RaeyzPwdB9+yP4iZWTxzqgOSc5r/hH7a8pPpZ5N+f3j42X0Lkr/4/z
InZTtTxlK8Q6HG1jW/sDpX0/rUHcm++8X/+56foVjyL/huqWTvFlHGFcm2aY
K/JrK04Geab5gpyU7FZOl9aFGOPNcfh7YMzxnnRl6Q1/9MElvlrrCt8lu525
pjq72gNgjdG+Aq/a09fnFbMnW4RzjfGCMc9f9XmUtzXH/eu7VnGv3n56rDiC
3K/CM+M6HV+9D5iXyAzmD7I9+rIUKycfHPMqyZLlzoe4PXTItjmlvUfNc85P
c135vHF8LpmTy/ex/1Pr+Sn3lGeS5x5preZn7hM/c76st6zL3Ec9U/lJ8vtu
+/74aD9fscrAmoBNh27La5xbMaeG/zP+JX+1JyC58PxujnD8hx+W48LTXL56
ue/G9+Nv43s1ZiHFEV69rE8n/zv++NwHH+c95x73AqTf1BrbXNvjrL7fXtH9
ZAw8vusNoBz5I/pIjwS6aD4GmbPM4bVq5mjt0f/z+gLaf2SNUE7mFvRn7RHM
aUdMvY8Pf3z10i+pvVP5cKJtJNtM+VWPnl78sKrNtfX8HTP/+GnKR8aWUz16
bHxQrN3L2NlfX/zesa4YP7fND+2t8xmOD9F2jLl2is1RHdmYRyzdIJH04XhN
0m9q32dxe70f3q+Rt2VKdlTMt1QORu17uwQpP/4Y14ZurzwbnqHid5hTW7D3
NI/xWcsW4NwYY7X20GQzcN+09qj++JR1RbFPU8Zlk6xGHwDdy9rP1WwH2dHa
d2dtZ26xDqA7KtZdtW+in1/7bKwj2qvv+j7WGmyK/BzQURVrLb+C5hTHbdL1
OTfpCar5p8/yXdq3iH4vfs/7qimovQHmdY0Ypm//aYpL2LIOoNxJxUxyrzQ2
1B+Q58V93oLsMM0gAxT/EnV3/DVz+PSxEVTrsfz9zTq4bNe874TGXg1dl3NQ
bSjV8maPROuV1hTtYSonSH537TM2zQvsKD0DzSHZOQ8/nK5XKGZZvlvO0Xv5
BrBlGA99ZQBjlLGJ7Q1dx2dsK36PsRdjhBibypvjmFH+Ka8f3z/jX7/jfe31
RRuT74nnynzk7xRTWLJZo09MexbyX6+dt/b6n6c1EzlaW9Y3obxJPQPWKvUC
2mLst7kPsiDuDzMveI5z2IU8f46lutryB0kPUK8BxQVr/56aEcxDzgFdvvY4
131RbONcvgbpClE3kE2Sf5b3uH8ffPbs5q0J/hj5UNDtYo1L+ei8P3deJH/b
xqx0UtW2j/vr/J8xFWv5MZ4UB44dwBiOY5q/yceb9hRi/J9e+Xs+o9ospRjj
Jv8Ax+Rc8lggHV++gtgnKM59xRuuIddUiyT2E669BgrlY0Q9IN4j9BbvE24f
1SuKz5ZnONf4Zo6WZJ5q6TF3+X7t76meh2KNWRukL7AmSHevPf5rEGtNvvXk
/jPq8rdqz5Nn3pSXLB2DZyDfgPQT1nXP6WOj+mYl/Zaxh32Prt6nro16bMT3
ODbzOH+/LZda+gN2AbYAcpH/R9nM//O/k92hvQzJKeWjD51/8nVoDnJs1TZY
Ql/GHxfrjrxxV7d0K30EZPsrx1+5ofod93jO+7LXvAGtu4pJmbO3zVTYH1Nv
oOhrS89u3P3mulRjq7SOME44Nq9x/jPWNadKMv4s/bP6wP2JdgjPUTU3VK9Y
a5Xi9tQPlbna5r9o0g2iPsazKo3fGCdea3yrPoz2iRhTMe98rfNK8c7pu/fm
T9EegMZT3LtTXpDq6/IZrft9KM1jyfCYN6h9qtJ9LcX05328+HuNecmq5y3n
IJSX0LXeKCZC+5KqcTNnnJtqkSuPCR8K94jxXWvtkR3CuUiXkr8YXU17/7zO
ZS9sRV72QbHT8qkqp5w5pDgx+Um0NjNmal6falkqbk17zg8/vOSK913DWDv4
27YxxPfw2aZx3LcP9tmRvb52nTHZQrGHSpPNiPxlDYs9GJYcy3wX8w85kmo0
L283qA+N9m+iLq0etXpf++XqX6Mcyxr2jWL1hv4dc1yxXsimmFMS+/kMmcOM
H8XWaO8gfufDu9pC6ATqqRPHHPe35JuXvcW4UKyO4hdVh0frnc6da1Eds67r
0O9iX0DOJY9pHANjV75QyQrVNKy5HxD3QmWrKR6QZ4M8K+luR0N50sqhevzT
y7OJe2OleBPdL/ULYGwrz3Vruo56WacY96uXdbGbfM5d/jXWPP7+iHWvzH0Y
N7F3G/IDeVeSeYoNIz4h+ZLSeq+1jzoQirvUaw37mu+Ne8RjyNeE2HdCvhbl
Xyq+Oq+z0ZSbF1EtiFgzj/8zpxVXr+fCz+rTon252Cs0ohi+qK9LNuTyuYko
x6RTptpA6VWxwzq+amux9vA7Pv883L+Ur5TGEZ/LxwbPLfoXVadOa5nuleIK
VP+761k/D89P8mCOmFr1kldPGc5R+3O153V+D1VvpLa8WgqNDV6lh2lc9B3v
XeuBfLSqrZN8b9Pj8F//8FKTsrTuyj5rum754/L9J9mCt/6Cu5wyjs+a0WQX
KpZW9pL2tbYU42LmhbGNz7CpHotiDXiPsa/1l7HUR8Zq7WVOMg6X0qHVr24L
/inVV0E+SH79rz+/2LVCefiqT186lmwWflYOf/y9bJVYH1c6As9VekVbzppk
pOL25C9XHU711eJVuYTaO1XvbtlLqrvN+eTfw+8//831y/NWfpHWnPjstFcd
/SBxz0b7meoHx7U27Q9o/ZZ+NecYRAZon3StnICYYxXnKOOD+4BuXurdcDQY
j4pPi7Wp11wD5EMkr6XJ3ol6Pucax7R+J91e/n7GtPI3+J32LITWZJ41194n
/k5xMcj50tqt/Wu+T704eV+9uWuvq2YZhsZuyrYc+33ytU/1rXOMPexJKVc+
t2+X3B+KPk7FCWiNlF7AOkP8GmuX1hX1+dVzVm0q1pnYc0uv0u34PvYCYl5/
G+iSkuFNuQ15rY4oz6K9o/0D1T/uehbqOajcxLE2HLUWY1/BXIdZ6rnyPJAh
6F996zkcDcWcagxtod+z9EzGYL7PwvzjM5pP6mPBc1S8f9N6sJY/nnOTbzL2
2dF+cZ/4G2OGwJhiHW6qQdFG7DljH9V9FL+nHFL5z1VnR/UuWEtlb0yZ3316
dES0p6L/N/X6LT371E/4vp3L5+X37ZIHiimUfTPUnyu5Ix/z0vE+t/X6R8yT
o4IMle27tIxEHg75DuXDxrGiHBXVvGSs1pCninHQ9cjPoH02r6WmBqn/W9KH
VfNgiC6g/SrkkPXU/rAWcM9rzHvZs/IlyC5/ONB/jeyW71c1A7DP3/n46pX6
Xx/83+Tf0Odi7gFjJ49vbAPbLe4zz3lfYnyjajzGmo5DUZ8/fD2xxvKrfSSu
X/p4mmJLtgB74nm8yBrjlPWF+/fmk0sea4wn1BiT30p7cMo32lLfafQZzpO6
NfIPbil2xRwT+chKc4F1Oc89acvl1hzTvp/WM+baVvKx98Ia+yiSsaohrOdL
T2D1JWV97YpRV6/w+P9cHuTjCznPGFEtRPnu5QOIPQuH6JzyPc1x7xQHppha
9SqdKoc1HxQDr30P7e9If8n7sHFtQ/stryH7OfcxshSZp/uquJUxz6mkI6p/
hXwSpXiq2nPcmNowNxRfoppupblM7rri45ir6jGp/b6Sriqbbkt6trlPrFHD
3oNiBWOcfuwVlOt8ymNS/b0hdmCqbZxiFFXrjPE1RcaiN6j23pixxzml3o3L
+Pa5NvIe0a2G+MbQjZQTvgVYN5TfM/Qe84zze8I6MkYuyx4B6WrI/dQz23aH
Mcr5inHKygUv6c7Rj6bclTY7EH2gaR2Qj8E6dz2a9kq178jzVq5C/hy1D4F/
lTEQa0Xws2IXVKMlxQGkdbivLsDnSjWKx8olnc+Ycce9QCdZWn72lXnqEbSU
PjIGat7EmpFDYF2J9Z+4rim+bvWQwTejcSfbw2uOMZd4KOXB9bGvlLeWalx1
fx7bkfmnXHjZOOgTpXp0Zj1YB7GJZevLrs97/CqXWnv0/KwemardFOU0z5Vn
3VSbTT1K8lgG1cTL+yLMpQNwXjFnqi/qn7RGnSnVWyKuBn0j9pXDL8fc2ZK/
Hx+N+lKrx9wQ+aoxpz0UxtTcsUEa27XnmzFbZsw6yzp/ye3qV0+Iz6A7aH+z
9nWfnVgjr00HTLn9lx5CqmmWfy7VOb6vN5bqCanmX4yjS3mMV7f+dmTenDFu
eR+lNuQDSfWRt2Nn1ybWlRhbQ1V5I/HZqmfTHGN6an0xY7ZMUx/WKbDeja29
qpifJtuEnCjV4qudA2wuIHuH9uflGaMrRP8Psl17AaB9dsWLqq6S6rA8CONG
MVmqoa46+PgJdLw55Rd2fF9Zw3lsNcZ+6DWPyd/N4RjEJk6Jp0Q2l/SpueKB
OS/OkfFUe34ZM5bS/EJGM5cZ22PlKMdlreYY6PGswbwu1UujrW+iqcecfeYY
N1Ef6NMLuUuu40dQLeu5x6TiwuK4LPU17vKJ7ImpPoxYA3LKPnpTz0qe9ZDj
8OxYW0p7SeicqjtSe54Z0wfFO6mGe6pffvWyvwtjWjX7h/rN2edlLqQa+Ov5
MpeqVaE96xiPWPv57Ylkgy0nZ/rYcsrFRg+59BC4HwO+lPxNtVyvXsk3U2yg
zm2vvXOHIhugay4rL3RKLirPW3Wq4/HRtdrmcXwu+n/cs8zrSsa66MZsGeyl
0nqsHu7qx4eN3rR/qbkR/QL8P+Xmzb929l2X+e7Yw0/nOuY+qQ6OfMnKi+Ya
Y78Zx/i20yd2c4wM0c99c6w0ZtUjJdbPUe5+nhe2JMhA5pvqKdeWy2vBXkuf
Wl7vfJLqzjb58/rOO/lWVPPom3frBDEmvM93qF/Fw1B7X3tFMW7kzbs4Scf4
mb1BfFGfXt+sp9Jl1U9GdXdYI1NM/eU4/H/pvOA2f2KsAaCecuw5MEd5HbPX
J58xNojeUx8s6tNwj5KedPVyj0Q5X/xN7Dty9hiEOXrs5s9bPzMOecZ9z4Vn
kscLAmNGvq8t5bgfCfV26vt5ydrSc6RvVKxJ3/XMm3KOJOMVXxh73YF1e7MF
5LuMPZ9Y9xTrhMzhFZnFeH7rJ8mekezR38e815y8Th5jn7WbebvnfqHoBH19
9mlf5LJW6V439axv+17FoXPPS/nFZ4lTUL3auXLrIl39fUrziPPRPgDPJ+8X
YR1gOuhl6ufI+FefiSHyn78t1YJQ7g+0yWfmV6wdlX+3evCVelMaswU0hofu
S6p3JLpAn33FvIYme/i8p16Te85J4hqUP6aedMgN1WeJ91t1Tllb8FPOeR6s
Q+qfrbjzM/kGGF9LxAEwxsfUb2nbV2b8owMsFbdwZJD9zC3mj2IzpW+19a8v
EWuAoEPkvQra4u4ZEzpOKV+Y4yoWxP1szdZYMm4KsPdVSyP/bvwJqp1Tez1Z
CuRG7Peimu/oCaolt0Q8GHoAvhtsYuBen8XPKD1MPZ3G3t8H2Svr+Nz3ED2t
zV9myvB88RuqDh73MtoWY3MD1d+TWAnWLOkSTbqfeusxz/M8AMafej9jHwz1
IxmzFMj9IX3HxsC86LI9kVFbzEeaI6eANUp97bVvorUEFAe55BqZ+txdet6f
Ma9AtZ1Zj4eMtT/64Oplf17ZgnP3K2N+DPVZm8u+17ufXs26r6J4ZNUSVy0J
fJN57H36rsv5xOMw188418z2QWdder1h3vTZe2ZOban+Z77GjPkb/HzIWvVY
idenWmNr+Xzlf1EMx9njjdDHkn+gew7wmdiTFjm9RP4Vx6RnsPcBhoFeJnmt
Hg+KQeoTg1yCZ8wzkR7BcRR3K92POcSclj7fdG61x7oxEWwg/O1rzM0+NUmZ
V+gJR1j3kPmsC6ofn+L5Lr9P/WPr+HlTf+K034A+kteoPSvqS6t6fnlPPvX8
RcYs3dsZXVk13obGsJ8J9W/QXGPeMbZVP1Q2h3Iwhx6fe4+cV+9i1XTmuSDz
2XNQ/HPTMfR75++ZLSBfPzF65J6O1Y2H0CdvppSfq1ic2utMH5jjyPhHT5Mc
YR3imhTzXfv88nWNnAP8Eqxpyts4U2xgF9yLB9k9q3F/1L9gq36xWuOXucbY
jX5F9XOWHRGfV1PvzzaUj4MvAV2Z/MA/+Sj5glhD9Uz4HPOceaT6HLc1pH/c
b+0zZi3kE1PP0hR3fj9mf0651ZTvwjxhXql/delvFXOzNRmqea+1CJuA+5nb
9UvWeJt67sRLK6+J9cx7lK+Sx2OsGbOlnniSJ+hq6vtee+zUhn2Y0n6i5Lvm
YF6nibWvK75Y8xXd4vUP79fViDoFP/OMzu47M/tDMWeMc+1jqk6fcvnmyp/G
T1Y6hz3mPKs2waUn4D7jtbCRbvea754Be86MCfbEvZ4lGP/op6pXjZ631nc3
xcswZ2uPndog32Osv3h0F8OMb6sp11X7BLkehf3BfqhyND0HzBlBJjAPlJ82
x3xFPsb5pPhr9Pg5js8extK1zCX3uTeq71F7HZwKdQVVf1Z727I5a4/DLcBc
iHFd3/xB/X3cuebknmHdiD1C+RndVTVDkOVdezV5vhP31b56c3aYN/Jz4g+Y
a87GGMAlao8rL0v/z/O125DPD38v+/byiet3R65JwPXG+rSsrY8/STFPjge4
1HJlbNTquao+Aqrbv+faWHNATS3WJtYUfo5znPGruNtSH1/+H2M7mdv4eGqP
M2O2AGsMcSvKk57LztXauXbPUe1nyIfLe/wffwH7369n/Tdqr201yK8b+6mr
x+3ZqBX7h69a/evUC+qs47Qv2tNU7IT8A4J7qBoY9vMbk2B9UeyM/Jyvz9BL
DflKDMAcx1pC3plXUX8S7QVM6YdqXkX7atioAvtTdeFVp5H/M294HsxJ5Bm/
49l4/JbhvhADwNhVDfOIPrdU325j9gxrveaI7B1y2abMScWWe83aDzwz1VFh
TGAnOc55OtT4196X8lqQ58h//NWx3nxE+TM8j5THdnXXE7L+WNk6qVdn8gmo
H4bzXIy5T+xfofgaXsfmHLG3JhvG7A/kS6xz9oNPl699swas/6p/qPquS36f
ejyqfox0a+1Fa67k9a+Uh5bvPUh+pR7z9cfJ1iBWQzm56Feq42eMaUY9K9gb
5//Kpx2zxmjPvfZaYKahGkzoAcgr5BE+odpjdSxcx+tZzJhq+c7t31DcHnI6
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
YY74rza++G3StW33bxtiMpD1XptME/h88OcTw0PMHvN6yfEiXQJZTY0Sxugc
a1LNXBWuBZvL/c5MbeaaT02wVriurzFmCugA5AvzOrV/FXpLbVsEvQm7yLGH
piZL2v7OqzHGzAE9iLFV5GuYkoewlToVnAd7GraPTA2WqP8aOXN+v33oxiwH
+sDe1yXWCOyv939mHcCsz5I5/7b9zZmx/rf8/W3LRcjtGuL9rn91fZu3siWf
u+qus15yXug1zkswS8P8YczNLfeZZxz3G4/rX6Mx5riwhiEv8aMTE6C8lTef
XOQq7y0doziF0hpMnGPt8zLHZ2o9b8Yuc0u1fJ0PboypBT706EcnZ3DLa1Ke
z6icW9tOZg2mxNAAY7X2NRhjjGiqOfDdD+qfW+lcY91V9jNqn5M5D0NraeQ1
Yl37tR9b9T0aczSYa9jPuQ2N/N/KPFSPbJ0P+YjsU1Bbq/a5mXPwhz8cbvvj
L0BnJV4Vv79jVo0xWwM5ijwlJoC1irg/ZGzt8wLqF7CWsn4+/mnqi8C5PrIt
ZVaEXFr279/5+Kp37xc+j85quW+M2TJ5PzN8nbXPCbs/9jlWnJ/XU7M26J/4
74f082Ls4gNwfooxZsvEnibPv6zf6we7KdYtpH6y4/xMDRiL6uVCT56+8n9r
ubPGGFNC+c3E1GPnaM+9Bvj8kfdaR5997r1TU4+UN3t18+0/HdZPq+YcMsaY
odSM+aNfQayxxj4/Pv9HE2r+ks9o3cFMgdi/x58k/3++T9YE+qvHnTHGtINf
v1TXZ66+A1vJYzD7hPHJWISu+v/sWcW+G8YYY8o01SVmH8L2k9kC5MTgl+qq
/09/ytp9Mo1p4kF4tX5qtsBr76a+KvhLlVfFHisxALXPzRjGIbF/jNE+vf/w
Y6G3en01czG3HWT5b7YGef2stcQAoBPUPh9jgHXytXf7y39RO3/GGGP2gn39
ZotQB1P9smJOShvkCG65j4Yxxhhj2nnjSapDQQ5ql9zHP4D/qvY5G1MTbLm3
73K2yJ2pfT7GGDMG1aIoxajmsEdQ+3yNqQ37t7e1sj9xDqxZB8ezmCUgl4+a
/237/+SqsNY5bsUYY/rjfCmzZeTLVG3Mpjq/Q475IKP2NRpjzNqk2Or652FM
E4xR5D/7+sQAlGoA4Bfo6+dMtYTTfgI5AuwtvP20/nUaY4wx5lXYA/jeh9cv
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
                "], {{0, 256}, {512, 
                0}}, {0, 255}, ColorFunction -> RGBColor], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> False, 
                MetaInformation -> 
                Association[
                 "Exif" -> {"Software" -> "Wolfram Language"}, 
                  "GeoGraphicsMetaInformation" -> {
                   "Software" -> "Wolfram Language", "TileSources" -> 
                    "Wolfram Knowledgebase with data from OpenStreetMap"}]], 
               Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
              ImageSizeRaw -> {512, 256}, PlotRange -> {{0, 512}, {0, 256}}], 
             TraditionalForm]], 
           PolygonBox[{{{-105.13399999999999`, -90.}, {254.866, -90.}, {
            254.866, 90.}, {-105.13399999999999`, 90.}}},
            
            VertexTextureCoordinates->{{{0., 0.}, {1., 0.}, {1., 1.}, {0., 
             1.}}}]}, 
          TagBox[
           TooltipBox[
            {Opacity[0], 
             PolygonBox[{{182.866, -54.}, {254.866, -54.}, {254.866, -90.}, {
              182.866, -90.}, {182.866, -54.}}]},
            "\"Wolfram Knowledgebase with data from OpenStreetMap\"",
            TooltipStyle->"TextStyling"],
           
           Annotation[#, "Wolfram Knowledgebase with data from OpenStreetMap",
             "Tooltip"]& ], {
           {RGBColor[0.790588, 0.201176, 0.], PointSize[Large], Opacity[1], 
            EdgeForm[{Opacity[0.4], Thickness[Tiny]}], FaceForm[{RGBColor[
            1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
             StyleBox["\<\"\[FilledCircle]\"\>",
              StripOnInput->False,
              FontSize->10.88], {177.48, 64.75}], 
            {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
             1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
              StyleBox["\<\"\[FilledCircle]\"\>",
               StripOnInput->False,
               FontSize->10.88], {120.32000000000001, -4.54}]}, 
            {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
             1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
              StyleBox["\<\"\[FilledCircle]\"\>",
               StripOnInput->False,
               FontSize->10.88], {-36.508, -54.2815}]}, 
            {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
             1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
              StyleBox["\<\"\[FilledCircle]\"\>",
               StripOnInput->False,
               FontSize->10.88], {186.24, -15.97}]}, 
            {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
             1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
              StyleBox["\<\"\[FilledCircle]\"\>",
               StripOnInput->False,
               FontSize->10.88], {-21.97, 70.48}]}, 
            {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
             1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
              StyleBox["\<\"\[FilledCircle]\"\>",
               StripOnInput->False,
               FontSize->10.88], {28.78, -21.82}]}, 
            {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
             1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
              StyleBox["\<\"\[FilledCircle]\"\>",
               StripOnInput->False,
               FontSize->10.88], {147.88, 45.230000000000004}]}, 
            {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
             1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
              StyleBox["\<\"\[FilledCircle]\"\>",
               StripOnInput->False,
               FontSize->10.88], {183.639, -44.027}]}, 
            {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
             1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
              StyleBox["\<\"\[FilledCircle]\"\>",
               StripOnInput->False,
               FontSize->10.88], {106.68, 35.53}]}, 
            {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
             1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
              StyleBox["\<\"\[FilledCircle]\"\>",
               StripOnInput->False,
               FontSize->10.88], {41.86, 36.32}], 
             {Opacity[1]}}}, {InsetBox[
             PaneBox[
              StyleBox[
               StyleBox["\<\"Bone\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                FontColor->GrayLevel[0],
                $CellContext`LineColor -> GrayLevel[0],
                $CellContext`FrontFaceColor -> GrayLevel[0],
                $CellContext`BackFaceColor -> GrayLevel[0],
                $CellContext`GraphicsColor -> GrayLevel[0]],
               StripOnInput->False,
               FontWeight->Bold,
               FontColor->GrayLevel[0],
               $CellContext`LineColor -> GrayLevel[0],
               $CellContext`FrontFaceColor -> GrayLevel[0],
               $CellContext`BackFaceColor -> GrayLevel[0],
               $CellContext`GraphicsColor -> 
               GrayLevel[
                0]]], {120.32000000000001, -4.54}, \
{-0.9620000000000001, -0.9620000000000001}], InsetBox[
             PaneBox[
              StyleBox[
               StyleBox["\<\"Bone\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                FontColor->GrayLevel[0],
                $CellContext`LineColor -> GrayLevel[0],
                $CellContext`FrontFaceColor -> GrayLevel[0],
                $CellContext`BackFaceColor -> GrayLevel[0],
                $CellContext`GraphicsColor -> GrayLevel[0]],
               StripOnInput->False,
               FontWeight->Bold,
               FontColor->GrayLevel[0],
               $CellContext`LineColor -> GrayLevel[0],
               $CellContext`FrontFaceColor -> GrayLevel[0],
               $CellContext`BackFaceColor -> GrayLevel[0],
               $CellContext`GraphicsColor -> 
               GrayLevel[
                0]]], {480.32, -4.54}, \
{-0.9620000000000001, -0.9620000000000001}], InsetBox[
             PaneBox[
              StyleBox[
               StyleBox["\<\"Kobojango\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                FontColor->GrayLevel[0],
                $CellContext`LineColor -> GrayLevel[0],
                $CellContext`FrontFaceColor -> GrayLevel[0],
                $CellContext`BackFaceColor -> GrayLevel[0],
                $CellContext`GraphicsColor -> GrayLevel[0]],
               StripOnInput->False,
               FontWeight->Bold,
               FontColor->GrayLevel[0],
               $CellContext`LineColor -> GrayLevel[0],
               $CellContext`FrontFaceColor -> GrayLevel[0],
               $CellContext`BackFaceColor -> GrayLevel[0],
               $CellContext`GraphicsColor -> 
               GrayLevel[
                0]]], {28.78, -21.82}, \
{-0.9620000000000001, 0.9620000000000001}], InsetBox[
             PaneBox[
              StyleBox[
               StyleBox["\<\"Kobojango\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                FontColor->GrayLevel[0],
                $CellContext`LineColor -> GrayLevel[0],
                $CellContext`FrontFaceColor -> GrayLevel[0],
                $CellContext`BackFaceColor -> GrayLevel[0],
                $CellContext`GraphicsColor -> GrayLevel[0]],
               StripOnInput->False,
               FontWeight->Bold,
               FontColor->GrayLevel[0],
               $CellContext`LineColor -> GrayLevel[0],
               $CellContext`FrontFaceColor -> GrayLevel[0],
               $CellContext`BackFaceColor -> GrayLevel[0],
               $CellContext`GraphicsColor -> 
               GrayLevel[
                0]]], {388.78, -21.82}, \
{-0.9620000000000001, 0.9620000000000001}], InsetBox[
             PaneBox[
              StyleBox[
               StyleBox["\<\"Kurilsk\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                FontColor->GrayLevel[0],
                $CellContext`LineColor -> GrayLevel[0],
                $CellContext`FrontFaceColor -> GrayLevel[0],
                $CellContext`BackFaceColor -> GrayLevel[0],
                $CellContext`GraphicsColor -> GrayLevel[0]],
               StripOnInput->False,
               FontWeight->Bold,
               FontColor->GrayLevel[0],
               $CellContext`LineColor -> GrayLevel[0],
               $CellContext`FrontFaceColor -> GrayLevel[0],
               $CellContext`BackFaceColor -> GrayLevel[0],
               $CellContext`GraphicsColor -> 
               GrayLevel[
                0]]], {147.88, 45.230000000000004}, \
{-0.9620000000000001, -0.9620000000000001}], InsetBox[
             PaneBox[
              StyleBox[
               StyleBox["\<\"Kurilsk\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                FontColor->GrayLevel[0],
                $CellContext`LineColor -> GrayLevel[0],
                $CellContext`FrontFaceColor -> GrayLevel[0],
                $CellContext`BackFaceColor -> GrayLevel[0],
                $CellContext`GraphicsColor -> GrayLevel[0]],
               StripOnInput->False,
               FontWeight->Bold,
               FontColor->GrayLevel[0],
               $CellContext`LineColor -> GrayLevel[0],
               $CellContext`FrontFaceColor -> GrayLevel[0],
               $CellContext`BackFaceColor -> GrayLevel[0],
               $CellContext`GraphicsColor -> 
               GrayLevel[
                0]]], {507.88, 45.230000000000004}, \
{-0.9620000000000001, -0.9620000000000001}], InsetBox[
             PaneBox[
              StyleBox[
               StyleBox["\<\"Hihifo\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                FontColor->GrayLevel[0],
                $CellContext`LineColor -> GrayLevel[0],
                $CellContext`FrontFaceColor -> GrayLevel[0],
                $CellContext`BackFaceColor -> GrayLevel[0],
                $CellContext`GraphicsColor -> GrayLevel[0]],
               StripOnInput->False,
               FontWeight->Bold,
               FontColor->GrayLevel[0],
               $CellContext`LineColor -> GrayLevel[0],
               $CellContext`FrontFaceColor -> GrayLevel[0],
               $CellContext`BackFaceColor -> GrayLevel[0],
               $CellContext`GraphicsColor -> 
               GrayLevel[
                0]]], {-173.76, -15.97}, \
{0.9620000000000001, -0.9620000000000001}], InsetBox[
             PaneBox[
              StyleBox[
               StyleBox["\<\"Hihifo\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                FontColor->GrayLevel[0],
                $CellContext`LineColor -> GrayLevel[0],
                $CellContext`FrontFaceColor -> GrayLevel[0],
                $CellContext`BackFaceColor -> GrayLevel[0],
                $CellContext`GraphicsColor -> GrayLevel[0]],
               StripOnInput->False,
               FontWeight->Bold,
               FontColor->GrayLevel[0],
               $CellContext`LineColor -> GrayLevel[0],
               $CellContext`FrontFaceColor -> GrayLevel[0],
               $CellContext`BackFaceColor -> GrayLevel[0],
               $CellContext`GraphicsColor -> 
               GrayLevel[
                0]]], {186.24, -15.97}, \
{0.9620000000000001, -0.9620000000000001}], InsetBox[
             PaneBox[
              StyleBox[
               StyleBox["\<\"Pingliang\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                FontColor->GrayLevel[0],
                $CellContext`LineColor -> GrayLevel[0],
                $CellContext`FrontFaceColor -> GrayLevel[0],
                $CellContext`BackFaceColor -> GrayLevel[0],
                $CellContext`GraphicsColor -> GrayLevel[0]],
               StripOnInput->False,
               FontWeight->Bold,
               FontColor->GrayLevel[0],
               $CellContext`LineColor -> GrayLevel[0],
               $CellContext`FrontFaceColor -> GrayLevel[0],
               $CellContext`BackFaceColor -> GrayLevel[0],
               $CellContext`GraphicsColor -> GrayLevel[0]]], {106.68, 35.53}, 
             {-0.9620000000000001, -0.9620000000000001}], InsetBox[
             PaneBox[
              StyleBox[
               StyleBox["\<\"Pingliang\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                FontColor->GrayLevel[0],
                $CellContext`LineColor -> GrayLevel[0],
                $CellContext`FrontFaceColor -> GrayLevel[0],
                $CellContext`BackFaceColor -> GrayLevel[0],
                $CellContext`GraphicsColor -> GrayLevel[0]],
               StripOnInput->False,
               FontWeight->Bold,
               FontColor->GrayLevel[0],
               $CellContext`LineColor -> GrayLevel[0],
               $CellContext`FrontFaceColor -> GrayLevel[0],
               $CellContext`BackFaceColor -> GrayLevel[0],
               $CellContext`GraphicsColor -> 
               GrayLevel[
                0]]], {466.68, 35.53}, \
{-0.9620000000000001, -0.9620000000000001}], InsetBox[
             PaneBox[
              StyleBox[
               StyleBox["\<\"Illoqqortoormiut\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                FontColor->GrayLevel[0],
                $CellContext`LineColor -> GrayLevel[0],
                $CellContext`FrontFaceColor -> GrayLevel[0],
                $CellContext`BackFaceColor -> GrayLevel[0],
                $CellContext`GraphicsColor -> GrayLevel[0]],
               StripOnInput->False,
               FontWeight->Bold,
               FontColor->GrayLevel[0],
               $CellContext`LineColor -> GrayLevel[0],
               $CellContext`FrontFaceColor -> GrayLevel[0],
               $CellContext`BackFaceColor -> GrayLevel[0],
               $CellContext`GraphicsColor -> 
               GrayLevel[
                0]]], {-21.97, 70.48}, \
{0.9620000000000001, -0.9620000000000001}], InsetBox[
             PaneBox[
              StyleBox[
               StyleBox["\<\"Illoqqortoormiut\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                FontColor->GrayLevel[0],
                $CellContext`LineColor -> GrayLevel[0],
                $CellContext`FrontFaceColor -> GrayLevel[0],
                $CellContext`BackFaceColor -> GrayLevel[0],
                $CellContext`GraphicsColor -> GrayLevel[0]],
               StripOnInput->False,
               FontWeight->Bold,
               FontColor->GrayLevel[0],
               $CellContext`LineColor -> GrayLevel[0],
               $CellContext`FrontFaceColor -> GrayLevel[0],
               $CellContext`BackFaceColor -> GrayLevel[0],
               $CellContext`GraphicsColor -> 
               GrayLevel[
                0]]], {338.03, 70.48}, \
{0.9620000000000001, -0.9620000000000001}], InsetBox[
             PaneBox[
              StyleBox[
               StyleBox["\<\"Owenga\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                FontColor->GrayLevel[0],
                $CellContext`LineColor -> GrayLevel[0],
                $CellContext`FrontFaceColor -> GrayLevel[0],
                $CellContext`BackFaceColor -> GrayLevel[0],
                $CellContext`GraphicsColor -> GrayLevel[0]],
               StripOnInput->False,
               FontWeight->Bold,
               FontColor->GrayLevel[0],
               $CellContext`LineColor -> GrayLevel[0],
               $CellContext`FrontFaceColor -> GrayLevel[0],
               $CellContext`BackFaceColor -> GrayLevel[0],
               $CellContext`GraphicsColor -> 
               GrayLevel[
                0]]], {-176.361, -44.027}, \
{-0.9620000000000001, -0.9620000000000001}], InsetBox[
             PaneBox[
              StyleBox[
               StyleBox["\<\"Owenga\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                FontColor->GrayLevel[0],
                $CellContext`LineColor -> GrayLevel[0],
                $CellContext`FrontFaceColor -> GrayLevel[0],
                $CellContext`BackFaceColor -> GrayLevel[0],
                $CellContext`GraphicsColor -> GrayLevel[0]],
               StripOnInput->False,
               FontWeight->Bold,
               FontColor->GrayLevel[0],
               $CellContext`LineColor -> GrayLevel[0],
               $CellContext`FrontFaceColor -> GrayLevel[0],
               $CellContext`BackFaceColor -> GrayLevel[0],
               $CellContext`GraphicsColor -> 
               GrayLevel[
                0]]], {183.639, -44.027}, \
{-0.9620000000000001, -0.9620000000000001}], InsetBox[
             PaneBox[
              StyleBox[
               StyleBox["\<\"Grytviken\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                FontColor->GrayLevel[0],
                $CellContext`LineColor -> GrayLevel[0],
                $CellContext`FrontFaceColor -> GrayLevel[0],
                $CellContext`BackFaceColor -> GrayLevel[0],
                $CellContext`GraphicsColor -> GrayLevel[0]],
               StripOnInput->False,
               FontWeight->Bold,
               FontColor->GrayLevel[0],
               $CellContext`LineColor -> GrayLevel[0],
               $CellContext`FrontFaceColor -> GrayLevel[0],
               $CellContext`BackFaceColor -> GrayLevel[0],
               $CellContext`GraphicsColor -> 
               GrayLevel[
                0]]], {-36.508, -54.2815}, \
{0.9620000000000001, 0.9620000000000001}], InsetBox[
             PaneBox[
              StyleBox[
               StyleBox["\<\"Grytviken\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                FontColor->GrayLevel[0],
                $CellContext`LineColor -> GrayLevel[0],
                $CellContext`FrontFaceColor -> GrayLevel[0],
                $CellContext`BackFaceColor -> GrayLevel[0],
                $CellContext`GraphicsColor -> GrayLevel[0]],
               StripOnInput->False,
               FontWeight->Bold,
               FontColor->GrayLevel[0],
               $CellContext`LineColor -> GrayLevel[0],
               $CellContext`FrontFaceColor -> GrayLevel[0],
               $CellContext`BackFaceColor -> GrayLevel[0],
               $CellContext`GraphicsColor -> 
               GrayLevel[
                0]]], {323.492, -54.2815}, \
{0.9620000000000001, 0.9620000000000001}], InsetBox[
             PaneBox[
              StyleBox[
               StyleBox["\<\"Sinjar\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                FontColor->GrayLevel[0],
                $CellContext`LineColor -> GrayLevel[0],
                $CellContext`FrontFaceColor -> GrayLevel[0],
                $CellContext`BackFaceColor -> GrayLevel[0],
                $CellContext`GraphicsColor -> GrayLevel[0]],
               StripOnInput->False,
               FontWeight->Bold,
               FontColor->GrayLevel[0],
               $CellContext`LineColor -> GrayLevel[0],
               $CellContext`FrontFaceColor -> GrayLevel[0],
               $CellContext`BackFaceColor -> GrayLevel[0],
               $CellContext`GraphicsColor -> 
               GrayLevel[
                0]]], {41.86, 36.32}, \
{-0.9620000000000001, 0.9620000000000001}], InsetBox[
             PaneBox[
              StyleBox[
               StyleBox["\<\"Sinjar\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                FontColor->GrayLevel[0],
                $CellContext`LineColor -> GrayLevel[0],
                $CellContext`FrontFaceColor -> GrayLevel[0],
                $CellContext`BackFaceColor -> GrayLevel[0],
                $CellContext`GraphicsColor -> GrayLevel[0]],
               StripOnInput->False,
               FontWeight->Bold,
               FontColor->GrayLevel[0],
               $CellContext`LineColor -> GrayLevel[0],
               $CellContext`FrontFaceColor -> GrayLevel[0],
               $CellContext`BackFaceColor -> GrayLevel[0],
               $CellContext`GraphicsColor -> 
               GrayLevel[
                0]]], {401.86, 36.32}, \
{-0.9620000000000001, 0.9620000000000001}], InsetBox[
             PaneBox[
              StyleBox[
               StyleBox["\<\"Anadyr\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                FontColor->GrayLevel[0],
                $CellContext`LineColor -> GrayLevel[0],
                $CellContext`FrontFaceColor -> GrayLevel[0],
                $CellContext`BackFaceColor -> GrayLevel[0],
                $CellContext`GraphicsColor -> GrayLevel[0]],
               StripOnInput->False,
               FontWeight->Bold,
               FontColor->GrayLevel[0],
               $CellContext`LineColor -> GrayLevel[0],
               $CellContext`FrontFaceColor -> GrayLevel[0],
               $CellContext`BackFaceColor -> GrayLevel[0],
               $CellContext`GraphicsColor -> 
               GrayLevel[
                0]]], {177.48, 64.75}, \
{0.9620000000000001, -0.9620000000000001}], InsetBox[
             PaneBox[
              StyleBox[
               StyleBox["\<\"Anadyr\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                FontColor->GrayLevel[0],
                $CellContext`LineColor -> GrayLevel[0],
                $CellContext`FrontFaceColor -> GrayLevel[0],
                $CellContext`BackFaceColor -> GrayLevel[0],
                $CellContext`GraphicsColor -> GrayLevel[0]],
               StripOnInput->False,
               FontWeight->Bold,
               FontColor->GrayLevel[0],
               $CellContext`LineColor -> GrayLevel[0],
               $CellContext`FrontFaceColor -> GrayLevel[0],
               $CellContext`BackFaceColor -> GrayLevel[0],
               $CellContext`GraphicsColor -> GrayLevel[0]]], {537.48, 64.75}, 
             {0.9620000000000001, -0.9620000000000001}]}}}, {}},
        CoordinatesToolOptions:>{
         "DisplayFunction" -> (
           GeoGraphics`GeoGridPositionDisplay[#, "Equirectangular", 
            "ITRF00"]& ), 
          "CopiedValueFunction" -> (
           GeoGraphics`GeoGridPositionCopiedValue[#, "Equirectangular", 
            "ITRF00"]& )},
        DefaultBaseStyle->"GeoGraphics",
        ImageSize->{430.3203125, Automatic},
        LabelStyle->Automatic,
        Method->{"OriginalInput" -> HoldForm[
            GeoGraphics[{{{
                RGBColor[1., 0.607843, 0.], 
                EdgeForm[{
                  Thickness[Tiny], 
                  Opacity[0.4]}], 
                PointSize[Large], 
                FaceForm[{
                  Opacity[0.5]}], 
                GeoStyling[None], 
                Directive[
                 Directive[
                  Opacity[1], 
                  RGBColor[0.790588, 0.201176, 0.]], 
                 FaceForm[{
                   Opacity[0.5], 
                   RGBColor[1., 0.607843, 0.]}]], 
                Inset[
                 Style["\[FilledCircle]", FontSize -> 10.88], 
                 GeoPosition[{64.75, 177.48}]], 
                Directive[
                 Directive[
                  Opacity[1], 
                  RGBColor[0.790588, 0.201176, 0.]], 
                 FaceForm[{
                   Opacity[0.5], 
                   RGBColor[1., 0.607843, 0.]}]], 
                Inset[
                 Style["\[FilledCircle]", FontSize -> 10.88], 
                 GeoPosition[{-4.54, 120.32000000000001`}]], 
                Directive[
                 Directive[
                  Opacity[1], 
                  RGBColor[0.790588, 0.201176, 0.]], 
                 FaceForm[{
                   Opacity[0.5], 
                   RGBColor[1., 0.607843, 0.]}]], 
                Inset[
                 Style["\[FilledCircle]", FontSize -> 10.88], 
                 GeoPosition[{-54.2815, -36.508}]], 
                Directive[
                 Directive[
                  Opacity[1], 
                  RGBColor[0.790588, 0.201176, 0.]], 
                 FaceForm[{
                   Opacity[0.5], 
                   RGBColor[1., 0.607843, 0.]}]], 
                Inset[
                 Style["\[FilledCircle]", FontSize -> 10.88], 
                 GeoPosition[{-15.97, -173.76}]], 
                Directive[
                 Directive[
                  Opacity[1], 
                  RGBColor[0.790588, 0.201176, 0.]], 
                 FaceForm[{
                   Opacity[0.5], 
                   RGBColor[1., 0.607843, 0.]}]], 
                Inset[
                 Style["\[FilledCircle]", FontSize -> 10.88], 
                 GeoPosition[{70.48, -21.97}]], 
                Directive[
                 Directive[
                  Opacity[1], 
                  RGBColor[0.790588, 0.201176, 0.]], 
                 FaceForm[{
                   Opacity[0.5], 
                   RGBColor[1., 0.607843, 0.]}]], 
                Inset[
                 Style["\[FilledCircle]", FontSize -> 10.88], 
                 GeoPosition[{-21.82, 28.78}]], 
                Directive[
                 Directive[
                  Opacity[1], 
                  RGBColor[0.790588, 0.201176, 0.]], 
                 FaceForm[{
                   Opacity[0.5], 
                   RGBColor[1., 0.607843, 0.]}]], 
                Inset[
                 Style["\[FilledCircle]", FontSize -> 10.88], 
                 GeoPosition[{45.230000000000004`, 147.88}]], 
                Directive[
                 Directive[
                  Opacity[1], 
                  RGBColor[0.790588, 0.201176, 0.]], 
                 FaceForm[{
                   Opacity[0.5], 
                   RGBColor[1., 0.607843, 0.]}]], 
                Inset[
                 Style["\[FilledCircle]", FontSize -> 10.88], 
                 GeoPosition[{-44.027, -176.361}]], 
                Directive[
                 Directive[
                  Opacity[1], 
                  RGBColor[0.790588, 0.201176, 0.]], 
                 FaceForm[{
                   Opacity[0.5], 
                   RGBColor[1., 0.607843, 0.]}]], 
                Inset[
                 Style["\[FilledCircle]", FontSize -> 10.88], 
                 GeoPosition[{35.53, 106.68}]], 
                Directive[
                 Directive[
                  Opacity[1], 
                  RGBColor[0.790588, 0.201176, 0.]], 
                 FaceForm[{
                   Opacity[0.5], 
                   RGBColor[1., 0.607843, 0.]}]], 
                Inset[
                 Style["\[FilledCircle]", FontSize -> 10.88], 
                 GeoPosition[{36.32, 41.86}]], 
                Opacity[1]}}, {{{{}, {}}, {{}, {
                  Text[
                   Pane[
                    Style[
                    Style["Bone", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                   
                   GeoPosition[{-4.54, 
                    120.32000000000001`}], {-0.9620000000000001, \
-0.9620000000000001}], 
                  Text[
                   Pane[
                    Style[
                    Style["Kobojango", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                   GeoPosition[{-21.82, 28.78}], {-0.9620000000000001, 
                   0.9620000000000001}], 
                  Text[
                   Pane[
                    Style[
                    Style["Kurilsk", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                   
                   GeoPosition[{45.230000000000004`, 
                    147.88}], {-0.9620000000000001, -0.9620000000000001}], 
                  Text[
                   Pane[
                    Style[
                    Style["Hihifo", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                   GeoPosition[{-15.97, -173.76}], {
                   0.9620000000000001, -0.9620000000000001}], 
                  Text[
                   Pane[
                    Style[
                    Style["Pingliang", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                   
                   GeoPosition[{35.53, 
                    106.68}], {-0.9620000000000001, -0.9620000000000001}], 
                  Text[
                   Pane[
                    Style[
                    Style["Illoqqortoormiut", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                   GeoPosition[{70.48, -21.97}], {
                   0.9620000000000001, -0.9620000000000001}], 
                  Text[
                   Pane[
                    Style[
                    Style["Owenga", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                   
                   GeoPosition[{-44.027, -176.361}], {-0.9620000000000001, \
-0.9620000000000001}], 
                  Text[
                   Pane[
                    Style[
                    Style["Grytviken", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                   GeoPosition[{-54.2815, -36.508}], {0.9620000000000001, 
                   0.9620000000000001}], 
                  Text[
                   Pane[
                    Style[
                    Style["Sinjar", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                   GeoPosition[{36.32, 41.86}], {-0.9620000000000001, 
                   0.9620000000000001}], 
                  Text[
                   Pane[
                    Style[
                    Style["Anadyr", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                   GeoPosition[{64.75, 177.48}], {
                   0.9620000000000001, -0.9620000000000001}]}}}, {{{}}, \
{{}}}}}, GeoBackground -> GeoStyling["GeoPlotMap"], LabelStyle -> Automatic, 
             PlotRangeClipping -> False]], 
          "BasicGeoRange" -> {{-54.2815, 70.48}, {-36.507999999999996`, 
           186.24}}, 
          "GeoGraphicsOptions" -> {
           GeoBackground -> GeoStyling["StreetMapNoLabels"], GeoCenter -> 
            GeoPosition[{0., 74.86600000000001}], GeoGridLines -> None, 
            GeoGridLinesStyle -> GrayLevel[0.4, 0.3], GeoModel -> "ITRF00", 
            GeoProjection -> "Equirectangular", 
            GeoRange -> {{-90., 90.}, {-105.13399999999999`, 254.866}}, 
            GeoRangePadding -> None, GeoServer -> {Automatic}, GeoZoomLevel -> 
            1, MetaInformation -> {
             "Software" -> "Wolfram Language", "TileSources" -> 
              "Wolfram Knowledgebase with data from OpenStreetMap"}}},
        PlotRange->{{-105.13399999999999`, 254.866}, {-90., 90.}},
        PlotRangeClipping->False,
        PlotRangePadding->None]], "ExerciseOutput",ExpressionUUID->
       "ca2ae246-161d-46b1-9e22-777d83108546"],
      Apply[TextCell, 
       Cell[
        BoxData[
         GraphicsBox[{{{{{{
                Texture[
                 FormBox[
                  GraphicsBox[
                   TagBox[
                    RasterBox[CompressedData["
1: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
o5f5d5fYZX7meNrzVZz0ULuNOcLxFMsgX4BsYNXmUWxAjFl4vrJ8XgOui+vk
WaS90/RaeyzPwdB9+yP4iZWTxzqgOSc5r/hH7a8pPpZ5N+f3j42X0Lkr/4/z
InZTtTxlK8Q6HG1jW/sDpX0/rUHcm++8X/+56foVjyL/huqWTvFlHGFcm2aY
K/JrK04Geab5gpyU7FZOl9aFGOPNcfh7YMzxnnRl6Q1/9MElvlrrCt8lu525
pjq72gNgjdG+Aq/a09fnFbMnW4RzjfGCMc9f9XmUtzXH/eu7VnGv3n56rDiC
3K/CM+M6HV+9D5iXyAzmD7I9+rIUKycfHPMqyZLlzoe4PXTItjmlvUfNc85P
c135vHF8LpmTy/ex/1Pr+Sn3lGeS5x5preZn7hM/c76st6zL3Ec9U/lJ8vtu
+/74aD9fscrAmoBNh27La5xbMaeG/zP+JX+1JyC58PxujnD8hx+W48LTXL56
ue/G9+Nv43s1ZiHFEV69rE8n/zv++NwHH+c95x73AqTf1BrbXNvjrL7fXtH9
ZAw8vusNoBz5I/pIjwS6aD4GmbPM4bVq5mjt0f/z+gLaf2SNUE7mFvRn7RHM
aUdMvY8Pf3z10i+pvVP5cKJtJNtM+VWPnl78sKrNtfX8HTP/+GnKR8aWUz16
bHxQrN3L2NlfX/zesa4YP7fND+2t8xmOD9F2jLl2is1RHdmYRyzdIJH04XhN
0m9q32dxe70f3q+Rt2VKdlTMt1QORu17uwQpP/4Y14ZurzwbnqHid5hTW7D3
NI/xWcsW4NwYY7X20GQzcN+09qj++JR1RbFPU8Zlk6xGHwDdy9rP1WwH2dHa
d2dtZ26xDqA7KtZdtW+in1/7bKwj2qvv+j7WGmyK/BzQURVrLb+C5hTHbdL1
OTfpCar5p8/yXdq3iH4vfs/7qimovQHmdY0Ypm//aYpL2LIOoNxJxUxyrzQ2
1B+Q58V93oLsMM0gAxT/EnV3/DVz+PSxEVTrsfz9zTq4bNe874TGXg1dl3NQ
bSjV8maPROuV1hTtYSonSH537TM2zQvsKD0DzSHZOQ8/nK5XKGZZvlvO0Xv5
BrBlGA99ZQBjlLGJ7Q1dx2dsK36PsRdjhBibypvjmFH+Ka8f3z/jX7/jfe31
RRuT74nnynzk7xRTWLJZo09MexbyX6+dt/b6n6c1EzlaW9Y3obxJPQPWKvUC
2mLst7kPsiDuDzMveI5z2IU8f46lutryB0kPUK8BxQVr/56aEcxDzgFdvvY4
131RbONcvgbpClE3kE2Sf5b3uH8ffPbs5q0J/hj5UNDtYo1L+ei8P3deJH/b
xqx0UtW2j/vr/J8xFWv5MZ4UB44dwBiOY5q/yceb9hRi/J9e+Xs+o9ospRjj
Jv8Ax+Rc8lggHV++gtgnKM59xRuuIddUiyT2E669BgrlY0Q9IN4j9BbvE24f
1SuKz5ZnONf4Zo6WZJ5q6TF3+X7t76meh2KNWRukL7AmSHevPf5rEGtNvvXk
/jPq8rdqz5Nn3pSXLB2DZyDfgPQT1nXP6WOj+mYl/Zaxh32Prt6nro16bMT3
ODbzOH+/LZda+gN2AbYAcpH/R9nM//O/k92hvQzJKeWjD51/8nVoDnJs1TZY
Ql/GHxfrjrxxV7d0K30EZPsrx1+5ofod93jO+7LXvAGtu4pJmbO3zVTYH1Nv
oOhrS89u3P3mulRjq7SOME44Nq9x/jPWNadKMv4s/bP6wP2JdgjPUTU3VK9Y
a5Xi9tQPlbna5r9o0g2iPsazKo3fGCdea3yrPoz2iRhTMe98rfNK8c7pu/fm
T9EegMZT3LtTXpDq6/IZrft9KM1jyfCYN6h9qtJ9LcX05328+HuNecmq5y3n
IJSX0LXeKCZC+5KqcTNnnJtqkSuPCR8K94jxXWvtkR3CuUiXkr8YXU17/7zO
ZS9sRV72QbHT8qkqp5w5pDgx+Um0NjNmal6falkqbk17zg8/vOSK913DWDv4
27YxxPfw2aZx3LcP9tmRvb52nTHZQrGHSpPNiPxlDYs9GJYcy3wX8w85kmo0
L283qA+N9m+iLq0etXpf++XqX6Mcyxr2jWL1hv4dc1yxXsimmFMS+/kMmcOM
H8XWaO8gfufDu9pC6ATqqRPHHPe35JuXvcW4UKyO4hdVh0frnc6da1Eds67r
0O9iX0DOJY9pHANjV75QyQrVNKy5HxD3QmWrKR6QZ4M8K+luR0N50sqhevzT
y7OJe2OleBPdL/ULYGwrz3Vruo56WacY96uXdbGbfM5d/jXWPP7+iHWvzH0Y
N7F3G/IDeVeSeYoNIz4h+ZLSeq+1jzoQirvUaw37mu+Ne8RjyNeE2HdCvhbl
Xyq+Oq+z0ZSbF1EtiFgzj/8zpxVXr+fCz+rTon252Cs0ohi+qK9LNuTyuYko
x6RTptpA6VWxwzq+amux9vA7Pv883L+Ur5TGEZ/LxwbPLfoXVadOa5nuleIK
VP+761k/D89P8mCOmFr1kldPGc5R+3O153V+D1VvpLa8WgqNDV6lh2lc9B3v
XeuBfLSqrZN8b9Pj8F//8FKTsrTuyj5rum754/L9J9mCt/6Cu5wyjs+a0WQX
KpZW9pL2tbYU42LmhbGNz7CpHotiDXiPsa/1l7HUR8Zq7WVOMg6X0qHVr24L
/inVV0E+SH79rz+/2LVCefiqT186lmwWflYOf/y9bJVYH1c6As9VekVbzppk
pOL25C9XHU711eJVuYTaO1XvbtlLqrvN+eTfw+8//831y/NWfpHWnPjstFcd
/SBxz0b7meoHx7U27Q9o/ZZ+NecYRAZon3StnICYYxXnKOOD+4BuXurdcDQY
j4pPi7Wp11wD5EMkr6XJ3ol6Pucax7R+J91e/n7GtPI3+J32LITWZJ41194n
/k5xMcj50tqt/Wu+T704eV+9uWuvq2YZhsZuyrYc+33ytU/1rXOMPexJKVc+
t2+X3B+KPk7FCWiNlF7AOkP8GmuX1hX1+dVzVm0q1pnYc0uv0u34PvYCYl5/
G+iSkuFNuQ15rY4oz6K9o/0D1T/uehbqOajcxLE2HLUWY1/BXIdZ6rnyPJAh
6F996zkcDcWcagxtod+z9EzGYL7PwvzjM5pP6mPBc1S8f9N6sJY/nnOTbzL2
2dF+cZ/4G2OGwJhiHW6qQdFG7DljH9V9FL+nHFL5z1VnR/UuWEtlb0yZ3316
dES0p6L/N/X6LT371E/4vp3L5+X37ZIHiimUfTPUnyu5Ix/z0vE+t/X6R8yT
o4IMle27tIxEHg75DuXDxrGiHBXVvGSs1pCninHQ9cjPoH02r6WmBqn/W9KH
VfNgiC6g/SrkkPXU/rAWcM9rzHvZs/IlyC5/ONB/jeyW71c1A7DP3/n46pX6
Xx/83+Tf0Odi7gFjJ49vbAPbLe4zz3lfYnyjajzGmo5DUZ8/fD2xxvKrfSSu
X/p4mmJLtgB74nm8yBrjlPWF+/fmk0sea4wn1BiT30p7cMo32lLfafQZzpO6
NfIPbil2xRwT+chKc4F1Oc89acvl1hzTvp/WM+baVvKx98Ia+yiSsaohrOdL
T2D1JWV97YpRV6/w+P9cHuTjCznPGFEtRPnu5QOIPQuH6JzyPc1x7xQHppha
9SqdKoc1HxQDr30P7e9If8n7sHFtQ/stryH7OfcxshSZp/uquJUxz6mkI6p/
hXwSpXiq2nPcmNowNxRfoppupblM7rri45ir6jGp/b6Sriqbbkt6trlPrFHD
3oNiBWOcfuwVlOt8ymNS/b0hdmCqbZxiFFXrjPE1RcaiN6j23pixxzml3o3L
+Pa5NvIe0a2G+MbQjZQTvgVYN5TfM/Qe84zze8I6MkYuyx4B6WrI/dQz23aH
Mcr5inHKygUv6c7Rj6bclTY7EH2gaR2Qj8E6dz2a9kq178jzVq5C/hy1D4F/
lTEQa0Xws2IXVKMlxQGkdbivLsDnSjWKx8olnc+Ycce9QCdZWn72lXnqEbSU
PjIGat7EmpFDYF2J9Z+4rim+bvWQwTejcSfbw2uOMZd4KOXB9bGvlLeWalx1
fx7bkfmnXHjZOOgTpXp0Zj1YB7GJZevLrs97/CqXWnv0/KwemardFOU0z5Vn
3VSbTT1K8lgG1cTL+yLMpQNwXjFnqi/qn7RGnSnVWyKuBn0j9pXDL8fc2ZK/
Hx+N+lKrx9wQ+aoxpz0UxtTcsUEa27XnmzFbZsw6yzp/ye3qV0+Iz6A7aH+z
9nWfnVgjr00HTLn9lx5CqmmWfy7VOb6vN5bqCanmX4yjS3mMV7f+dmTenDFu
eR+lNuQDSfWRt2Nn1ybWlRhbQ1V5I/HZqmfTHGN6an0xY7ZMUx/WKbDeja29
qpifJtuEnCjV4qudA2wuIHuH9uflGaMrRP8Psl17AaB9dsWLqq6S6rA8CONG
MVmqoa46+PgJdLw55Rd2fF9Zw3lsNcZ+6DWPyd/N4RjEJk6Jp0Q2l/SpueKB
OS/OkfFUe34ZM5bS/EJGM5cZ22PlKMdlreYY6PGswbwu1UujrW+iqcecfeYY
N1Ef6NMLuUuu40dQLeu5x6TiwuK4LPU17vKJ7ImpPoxYA3LKPnpTz0qe9ZDj
8OxYW0p7SeicqjtSe54Z0wfFO6mGe6pffvWyvwtjWjX7h/rN2edlLqQa+Ov5
MpeqVaE96xiPWPv57Ylkgy0nZ/rYcsrFRg+59BC4HwO+lPxNtVyvXsk3U2yg
zm2vvXOHIhugay4rL3RKLirPW3Wq4/HRtdrmcXwu+n/cs8zrSsa66MZsGeyl
0nqsHu7qx4eN3rR/qbkR/QL8P+Xmzb929l2X+e7Yw0/nOuY+qQ6OfMnKi+Ya
Y78Zx/i20yd2c4wM0c99c6w0ZtUjJdbPUe5+nhe2JMhA5pvqKdeWy2vBXkuf
Wl7vfJLqzjb58/rOO/lWVPPom3frBDEmvM93qF/Fw1B7X3tFMW7kzbs4Scf4
mb1BfFGfXt+sp9Jl1U9GdXdYI1NM/eU4/H/pvOA2f2KsAaCecuw5MEd5HbPX
J58xNojeUx8s6tNwj5KedPVyj0Q5X/xN7Dty9hiEOXrs5s9bPzMOecZ9z4Vn
kscLAmNGvq8t5bgfCfV26vt5ydrSc6RvVKxJ3/XMm3KOJOMVXxh73YF1e7MF
5LuMPZ9Y9xTrhMzhFZnFeH7rJ8mekezR38e815y8Th5jn7WbebvnfqHoBH19
9mlf5LJW6V439axv+17FoXPPS/nFZ4lTUL3auXLrIl39fUrziPPRPgDPJ+8X
YR1gOuhl6ufI+FefiSHyn78t1YJQ7g+0yWfmV6wdlX+3evCVelMaswU0hofu
S6p3JLpAn33FvIYme/i8p16Te85J4hqUP6aedMgN1WeJ91t1Tllb8FPOeR6s
Q+qfrbjzM/kGGF9LxAEwxsfUb2nbV2b8owMsFbdwZJD9zC3mj2IzpW+19a8v
EWuAoEPkvQra4u4ZEzpOKV+Y4yoWxP1szdZYMm4KsPdVSyP/bvwJqp1Tez1Z
CuRG7Peimu/oCaolt0Q8GHoAvhtsYuBen8XPKD1MPZ3G3t8H2Svr+Nz3ED2t
zV9myvB88RuqDh73MtoWY3MD1d+TWAnWLOkSTbqfeusxz/M8AMafej9jHwz1
IxmzFMj9IX3HxsC86LI9kVFbzEeaI6eANUp97bVvorUEFAe55BqZ+txdet6f
Ma9AtZ1Zj4eMtT/64Oplf17ZgnP3K2N+DPVZm8u+17ufXs26r6J4ZNUSVy0J
fJN57H36rsv5xOMw188418z2QWdder1h3vTZe2ZOban+Z77GjPkb/HzIWvVY
idenWmNr+Xzlf1EMx9njjdDHkn+gew7wmdiTFjm9RP4Vx6RnsPcBhoFeJnmt
Hg+KQeoTg1yCZ8wzkR7BcRR3K92POcSclj7fdG61x7oxEWwg/O1rzM0+NUmZ
V+gJR1j3kPmsC6ofn+L5Lr9P/WPr+HlTf+K034A+kteoPSvqS6t6fnlPPvX8
RcYs3dsZXVk13obGsJ8J9W/QXGPeMbZVP1Q2h3Iwhx6fe4+cV+9i1XTmuSDz
2XNQ/HPTMfR75++ZLSBfPzF65J6O1Y2H0CdvppSfq1ic2utMH5jjyPhHT5Mc
YR3imhTzXfv88nWNnAP8Eqxpyts4U2xgF9yLB9k9q3F/1L9gq36xWuOXucbY
jX5F9XOWHRGfV1PvzzaUj4MvAV2Z/MA/+Sj5glhD9Uz4HPOceaT6HLc1pH/c
b+0zZi3kE1PP0hR3fj9mf0651ZTvwjxhXql/delvFXOzNRmqea+1CJuA+5nb
9UvWeJt67sRLK6+J9cx7lK+Sx2OsGbOlnniSJ+hq6vtee+zUhn2Y0n6i5Lvm
YF6nibWvK75Y8xXd4vUP79fViDoFP/OMzu47M/tDMWeMc+1jqk6fcvnmyp/G
T1Y6hz3mPKs2waUn4D7jtbCRbvea754Be86MCfbEvZ4lGP/op6pXjZ631nc3
xcswZ2uPndog32Osv3h0F8OMb6sp11X7BLkehf3BfqhyND0HzBlBJjAPlJ82
x3xFPsb5pPhr9Pg5js8extK1zCX3uTeq71F7HZwKdQVVf1Z727I5a4/DLcBc
iHFd3/xB/X3cuebknmHdiD1C+RndVTVDkOVdezV5vhP31b56c3aYN/Jz4g+Y
a87GGMAlao8rL0v/z/O125DPD38v+/byiet3R65JwPXG+rSsrY8/STFPjge4
1HJlbNTquao+Aqrbv+faWHNATS3WJtYUfo5znPGruNtSH1/+H2M7mdv4eGqP
M2O2AGsMcSvKk57LztXauXbPUe1nyIfLe/wffwH7369n/Tdqr201yK8b+6mr
x+3ZqBX7h69a/evUC+qs47Qv2tNU7IT8A4J7qBoY9vMbk2B9UeyM/Jyvz9BL
DflKDMAcx1pC3plXUX8S7QVM6YdqXkX7atioAvtTdeFVp5H/M294HsxJ5Bm/
49l4/JbhvhADwNhVDfOIPrdU325j9gxrveaI7B1y2abMScWWe83aDzwz1VFh
TGAnOc55OtT4196X8lqQ58h//NWx3nxE+TM8j5THdnXXE7L+WNk6qVdn8gmo
H4bzXIy5T+xfofgaXsfmHLG3JhvG7A/kS6xz9oNPl699swas/6p/qPquS36f
ejyqfox0a+1Fa67k9a+Uh5bvPUh+pR7z9cfJ1iBWQzm56Feq42eMaUY9K9gb
5//Kpx2zxmjPvfZaYKahGkzoAcgr5BE+odpjdSxcx+tZzJhq+c7t31DcHnI6
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
YY74rza++G3StW33bxtiMpD1XptME/h88OcTw0PMHvN6yfEiXQJZTY0Sxugc
a1LNXBWuBZvL/c5MbeaaT02wVriurzFmCugA5AvzOrV/FXpLbVsEvQm7yLGH
piZL2v7OqzHGzAE9iLFV5GuYkoewlToVnAd7GraPTA2WqP8aOXN+v33oxiwH
+sDe1yXWCOyv939mHcCsz5I5/7b9zZmx/rf8/W3LRcjtGuL9rn91fZu3siWf
u+qus15yXug1zkswS8P8YczNLfeZZxz3G4/rX6Mx5riwhiEv8aMTE6C8lTef
XOQq7y0doziF0hpMnGPt8zLHZ2o9b8Yuc0u1fJ0PboypBT706EcnZ3DLa1Ke
z6icW9tOZg2mxNAAY7X2NRhjjGiqOfDdD+qfW+lcY91V9jNqn5M5D0NraeQ1
Yl37tR9b9T0aczSYa9jPuQ2N/N/KPFSPbJ0P+YjsU1Bbq/a5mXPwhz8cbvvj
L0BnJV4Vv79jVo0xWwM5ijwlJoC1irg/ZGzt8wLqF7CWsn4+/mnqi8C5PrIt
ZVaEXFr279/5+Kp37xc+j85quW+M2TJ5PzN8nbXPCbs/9jlWnJ/XU7M26J/4
74f082Ls4gNwfooxZsvEnibPv6zf6we7KdYtpH6y4/xMDRiL6uVCT56+8n9r
ubPGGFNC+c3E1GPnaM+9Bvj8kfdaR5997r1TU4+UN3t18+0/HdZPq+YcMsaY
odSM+aNfQayxxj4/Pv9HE2r+ks9o3cFMgdi/x58k/3++T9YE+qvHnTHGtINf
v1TXZ66+A1vJYzD7hPHJWISu+v/sWcW+G8YYY8o01SVmH8L2k9kC5MTgl+qq
/09/ytp9Mo1p4kF4tX5qtsBr76a+KvhLlVfFHisxALXPzRjGIbF/jNE+vf/w
Y6G3en01czG3HWT5b7YGef2stcQAoBPUPh9jgHXytXf7y39RO3/GGGP2gn39
ZotQB1P9smJOShvkCG65j4Yxxhhj2nnjSapDQQ5ql9zHP4D/qvY5G1MTbLm3
73K2yJ2pfT7GGDMG1aIoxajmsEdQ+3yNqQ37t7e1sj9xDqxZB8ezmCUgl4+a
/237/+SqsNY5bsUYY/rjfCmzZeTLVG3Mpjq/Q475IKP2NRpjzNqk2Or652FM
E4xR5D/7+sQAlGoA4Bfo6+dMtYTTfgI5AuwtvP20/nUaY4wx5lXYA/jeh9cv
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
                    "], {{0, 256}, {
                    512, 0}}, {0, 255}, ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> False, 
                    MetaInformation -> 
                    Association[
                    "Exif" -> {"Software" -> "Wolfram Language"}, 
                    "GeoGraphicsMetaInformation" -> {
                    "Software" -> "Wolfram Language", "TileSources" -> 
                    "Wolfram Knowledgebase with data from OpenStreetMap"}]], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                    ImageSizeRaw -> {512, 256}, 
                   PlotRange -> {{0, 512}, {0, 256}}], TraditionalForm]], 
                
                PolygonBox[{{{-105.13399999999999`, -90.}, {254.866, -90.}, {
                 254.866, 90.}, {-105.13399999999999`, 90.}}}, 
                 VertexTextureCoordinates -> {{{0., 0.}, {1., 0.}, {1., 1.}, {
                  0., 1.}}}]}}}}, 
            TagBox[
             TooltipBox[{{{{
                  Opacity[0], 
                  
                  PolygonBox[{{182.866, -54.}, {254.866, -54.}, {
                   254.866, -90.}, {182.866, -90.}, {182.866, -54.}}]}}}}, 
              "\"Wolfram Knowledgebase with data from OpenStreetMap\"", 
              TooltipStyle -> "TextStyling"], 
             Annotation[#, 
              "Wolfram Knowledgebase with data from OpenStreetMap", 
              "Tooltip"]& ], {{{{{{{{
                    RGBColor[0.790588, 0.201176, 0.], 
                    PointSize[Large], 
                    Opacity[1], 
                    EdgeForm[{
                    Opacity[0.4], 
                    Thickness[Tiny]}], 
                    FaceForm[{
                    RGBColor[1., 0.607843, 0.], 
                    Opacity[0.5]}], 
                    InsetBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 
                    10.88], {177.48, 64.75}], {{{
                    RGBColor[0.790588, 0.201176, 0.], 
                    Opacity[1], 
                    FaceForm[{
                    RGBColor[1., 0.607843, 0.], 
                    Opacity[0.5]}], 
                    InsetBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 
                    10.88], {120.32000000000001`, -4.54}]}}}, {{{
                    RGBColor[0.790588, 0.201176, 0.], 
                    Opacity[1], 
                    FaceForm[{
                    RGBColor[1., 0.607843, 0.], 
                    Opacity[0.5]}], 
                    InsetBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 
                    10.88], {-36.508, -54.2815}]}}}, {{{
                    RGBColor[0.790588, 0.201176, 0.], 
                    Opacity[1], 
                    FaceForm[{
                    RGBColor[1., 0.607843, 0.], 
                    Opacity[0.5]}], 
                    InsetBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 
                    10.88], {186.24, -15.97}]}}}, {{{
                    RGBColor[0.790588, 0.201176, 0.], 
                    Opacity[1], 
                    FaceForm[{
                    RGBColor[1., 0.607843, 0.], 
                    Opacity[0.5]}], 
                    InsetBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 
                    10.88], {-21.97, 70.48}]}}}, {{{
                    RGBColor[0.790588, 0.201176, 0.], 
                    Opacity[1], 
                    FaceForm[{
                    RGBColor[1., 0.607843, 0.], 
                    Opacity[0.5]}], 
                    InsetBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 
                    10.88], {28.78, -21.82}]}}}, {{{
                    RGBColor[0.790588, 0.201176, 0.], 
                    Opacity[1], 
                    FaceForm[{
                    RGBColor[1., 0.607843, 0.], 
                    Opacity[0.5]}], 
                    InsetBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 
                    10.88], {147.88, 45.230000000000004`}]}}}, {{{
                    RGBColor[0.790588, 0.201176, 0.], 
                    Opacity[1], 
                    FaceForm[{
                    RGBColor[1., 0.607843, 0.], 
                    Opacity[0.5]}], 
                    InsetBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 
                    10.88], {183.639, -44.027}]}}}, {{{
                    RGBColor[0.790588, 0.201176, 0.], 
                    Opacity[1], 
                    FaceForm[{
                    RGBColor[1., 0.607843, 0.], 
                    Opacity[0.5]}], 
                    InsetBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 
                    10.88], {106.68, 35.53}]}}}, {{{
                    RGBColor[0.790588, 0.201176, 0.], 
                    Opacity[1], 
                    FaceForm[{
                    RGBColor[1., 0.607843, 0.], 
                    Opacity[0.5]}], 
                    InsetBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 
                    10.88], {41.86, 36.32}], {{{
                    Opacity[1]}}}}}}}}}}}, {{{{
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Bone\"", StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {
                    120.32000000000001`, -4.54}, {-0.9620000000000001, \
-0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Bone\"", StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {
                    480.32, -4.54}, {-0.9620000000000001, \
-0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Kobojango\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {
                    28.78, -21.82}, {-0.9620000000000001, 
                    0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Kobojango\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {
                    388.78, -21.82}, {-0.9620000000000001, 
                    0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Kurilsk\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {147.88, 
                    45.230000000000004`}, {-0.9620000000000001, \
-0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Kurilsk\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {507.88, 
                    45.230000000000004`}, {-0.9620000000000001, \
-0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Hihifo\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> 
                    GrayLevel[0]]], {-173.76, -15.97}, {
                    0.9620000000000001, -0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Hihifo\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {
                    186.24, -15.97}, {
                    0.9620000000000001, -0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Pingliang\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {106.68, 
                    35.53}, {-0.9620000000000001, -0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Pingliang\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {466.68, 
                    35.53}, {-0.9620000000000001, -0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Illoqqortoormiut\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {-21.97, 
                    70.48}, {0.9620000000000001, -0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Illoqqortoormiut\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {338.03, 
                    70.48}, {0.9620000000000001, -0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Owenga\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> 
                    GrayLevel[
                    0]]], {-176.361, -44.027}, {-0.9620000000000001, \
-0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Owenga\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {
                    183.639, -44.027}, {-0.9620000000000001, \
-0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Grytviken\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> 
                    GrayLevel[0]]], {-36.508, -54.2815}, {0.9620000000000001, 
                    0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Grytviken\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {
                    323.492, -54.2815}, {0.9620000000000001, 
                    0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Sinjar\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {41.86, 
                    36.32}, {-0.9620000000000001, 0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Sinjar\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {401.86, 
                    36.32}, {-0.9620000000000001, 0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Anadyr\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {177.48, 
                    64.75}, {0.9620000000000001, -0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Anadyr\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {537.48, 
                    64.75}, {
                    0.9620000000000001, -0.9620000000000001}]}}}}}}}}, {}}, 
          CoordinatesToolOptions :> {
           "DisplayFunction" -> (
             GeoGraphics`GeoGridPositionDisplay[#, "Equirectangular", 
              "ITRF00"]& ), 
            "CopiedValueFunction" -> (
             GeoGraphics`GeoGridPositionCopiedValue[#, "Equirectangular", 
              "ITRF00"]& )}, DefaultBaseStyle -> "GeoGraphics", 
          ImageSize -> {430.3203125, Automatic}, LabelStyle -> Automatic, 
          Method -> {"OriginalInput" -> HoldForm[
              GeoGraphics[{{{
                  RGBColor[1., 0.607843, 0.], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    Opacity[0.4]}], 
                  PointSize[Large], 
                  FaceForm[{
                    Opacity[0.5]}], 
                  GeoStyling[None], 
                  Directive[
                   Directive[
                    Opacity[1], 
                    RGBColor[0.790588, 0.201176, 0.]], 
                   FaceForm[{
                    Opacity[0.5], 
                    RGBColor[1., 0.607843, 0.]}]], 
                  Inset[
                   Style["\[FilledCircle]", FontSize -> 10.88], 
                   GeoPosition[{64.75, 177.48}]], 
                  Directive[
                   Directive[
                    Opacity[1], 
                    RGBColor[0.790588, 0.201176, 0.]], 
                   FaceForm[{
                    Opacity[0.5], 
                    RGBColor[1., 0.607843, 0.]}]], 
                  Inset[
                   Style["\[FilledCircle]", FontSize -> 10.88], 
                   GeoPosition[{-4.54, 120.32000000000001`}]], 
                  Directive[
                   Directive[
                    Opacity[1], 
                    RGBColor[0.790588, 0.201176, 0.]], 
                   FaceForm[{
                    Opacity[0.5], 
                    RGBColor[1., 0.607843, 0.]}]], 
                  Inset[
                   Style["\[FilledCircle]", FontSize -> 10.88], 
                   GeoPosition[{-54.2815, -36.508}]], 
                  Directive[
                   Directive[
                    Opacity[1], 
                    RGBColor[0.790588, 0.201176, 0.]], 
                   FaceForm[{
                    Opacity[0.5], 
                    RGBColor[1., 0.607843, 0.]}]], 
                  Inset[
                   Style["\[FilledCircle]", FontSize -> 10.88], 
                   GeoPosition[{-15.97, -173.76}]], 
                  Directive[
                   Directive[
                    Opacity[1], 
                    RGBColor[0.790588, 0.201176, 0.]], 
                   FaceForm[{
                    Opacity[0.5], 
                    RGBColor[1., 0.607843, 0.]}]], 
                  Inset[
                   Style["\[FilledCircle]", FontSize -> 10.88], 
                   GeoPosition[{70.48, -21.97}]], 
                  Directive[
                   Directive[
                    Opacity[1], 
                    RGBColor[0.790588, 0.201176, 0.]], 
                   FaceForm[{
                    Opacity[0.5], 
                    RGBColor[1., 0.607843, 0.]}]], 
                  Inset[
                   Style["\[FilledCircle]", FontSize -> 10.88], 
                   GeoPosition[{-21.82, 28.78}]], 
                  Directive[
                   Directive[
                    Opacity[1], 
                    RGBColor[0.790588, 0.201176, 0.]], 
                   FaceForm[{
                    Opacity[0.5], 
                    RGBColor[1., 0.607843, 0.]}]], 
                  Inset[
                   Style["\[FilledCircle]", FontSize -> 10.88], 
                   GeoPosition[{45.230000000000004`, 147.88}]], 
                  Directive[
                   Directive[
                    Opacity[1], 
                    RGBColor[0.790588, 0.201176, 0.]], 
                   FaceForm[{
                    Opacity[0.5], 
                    RGBColor[1., 0.607843, 0.]}]], 
                  Inset[
                   Style["\[FilledCircle]", FontSize -> 10.88], 
                   GeoPosition[{-44.027, -176.361}]], 
                  Directive[
                   Directive[
                    Opacity[1], 
                    RGBColor[0.790588, 0.201176, 0.]], 
                   FaceForm[{
                    Opacity[0.5], 
                    RGBColor[1., 0.607843, 0.]}]], 
                  Inset[
                   Style["\[FilledCircle]", FontSize -> 10.88], 
                   GeoPosition[{35.53, 106.68}]], 
                  Directive[
                   Directive[
                    Opacity[1], 
                    RGBColor[0.790588, 0.201176, 0.]], 
                   FaceForm[{
                    Opacity[0.5], 
                    RGBColor[1., 0.607843, 0.]}]], 
                  Inset[
                   Style["\[FilledCircle]", FontSize -> 10.88], 
                   GeoPosition[{36.32, 41.86}]], 
                  Opacity[1]}}, {{{{}, {}}, {{}, {
                    Text[
                    Pane[
                    Style[
                    Style["Bone", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                    
                    GeoPosition[{-4.54, 
                    120.32000000000001`}], {-0.9620000000000001, \
-0.9620000000000001}], 
                    Text[
                    Pane[
                    Style[
                    Style["Kobojango", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                    GeoPosition[{-21.82, 28.78}], {-0.9620000000000001, 
                    0.9620000000000001}], 
                    Text[
                    Pane[
                    Style[
                    Style["Kurilsk", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                    
                    GeoPosition[{45.230000000000004`, 
                    147.88}], {-0.9620000000000001, -0.9620000000000001}], 
                    Text[
                    Pane[
                    Style[
                    Style["Hihifo", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                    GeoPosition[{-15.97, -173.76}], {
                    0.9620000000000001, -0.9620000000000001}], 
                    Text[
                    Pane[
                    Style[
                    Style["Pingliang", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                    
                    GeoPosition[{35.53, 
                    106.68}], {-0.9620000000000001, -0.9620000000000001}], 
                    Text[
                    Pane[
                    Style[
                    Style["Illoqqortoormiut", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                    GeoPosition[{70.48, -21.97}], {
                    0.9620000000000001, -0.9620000000000001}], 
                    Text[
                    Pane[
                    Style[
                    Style["Owenga", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                    
                    GeoPosition[{-44.027, -176.361}], {-0.9620000000000001, \
-0.9620000000000001}], 
                    Text[
                    Pane[
                    Style[
                    Style["Grytviken", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                    GeoPosition[{-54.2815, -36.508}], {0.9620000000000001, 
                    0.9620000000000001}], 
                    Text[
                    Pane[
                    Style[
                    Style["Sinjar", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                    GeoPosition[{36.32, 41.86}], {-0.9620000000000001, 
                    0.9620000000000001}], 
                    Text[
                    Pane[
                    Style[
                    Style["Anadyr", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                    GeoPosition[{64.75, 177.48}], {
                    0.9620000000000001, -0.9620000000000001}]}}}, {{{}}, \
{{}}}}}, GeoBackground -> GeoStyling["GeoPlotMap"], LabelStyle -> Automatic, 
               PlotRangeClipping -> False]], 
            "BasicGeoRange" -> {{-54.2815, 70.48}, {-36.507999999999996`, 
             186.24}}, 
            "GeoGraphicsOptions" -> {
             GeoBackground -> GeoStyling["StreetMapNoLabels"], GeoCenter -> 
              GeoPosition[{0., 74.86600000000001}], GeoGridLines -> None, 
              GeoGridLinesStyle -> GrayLevel[0.4, 0.3], GeoModel -> "ITRF00", 
              GeoProjection -> "Equirectangular", 
              GeoRange -> {{-90., 90.}, {-105.13399999999999`, 254.866}}, 
              GeoRangePadding -> None, GeoServer -> {Automatic}, GeoZoomLevel -> 
              1, MetaInformation -> {
               "Software" -> "Wolfram Language", "TileSources" -> 
                "Wolfram Knowledgebase with data from OpenStreetMap"}}}, 
          PlotRange -> {{-105.13399999999999`, 254.866}, {-90., 90.}}, 
          PlotRangeClipping -> False, PlotRangePadding -> None]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->
  Automatic,ExpressionUUID->"ae333836-055f-4d82-895e-db537087398d"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\:7ed8\:5236\:51fa Fireballs & Bolides \:6570\:636e\:96c6\:4e2d\:9ad8\:5ea6\
\:6700\:5927\:7684 10 \:4e2a\:6761\:76ee\:7684\:6700\:8fd1\:57ce\:5e02\:ff0c\
\:5e76\:4e3a\:6bcf\:4e2a\:57ce\:5e02\:6dfb\:52a0\:6807\:7b7e\:3002",
 StyleBox[ButtonBox["\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "45.13", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellChangeTimes->{{3.837562899424305*^9, 
  3.8375629016990204`*^9}},ExpressionUUID->"248f00bf-c68e-469b-885d-\
7e92a5dc29ba"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"\:671f\:671b\:8f93\:51fa", "\:ff1a"}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       GraphicsBox[{{
          {Texture[
            FormBox[
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJztnUuPZdd5npXLIMP8hfyLTDPM1EF+gI0oRiYKIAcI8mvcEGSADiRYMkK4
GYBsckCKok2aahGtJsUwkqoYWBdbtkUbNFpAp59a9fb5atW+39bae7+Dp0/1
qVP77Mta67us7/Jvfu+//s5//udf+cpX/uBfvfjnd373v/+7r3/9d//Hf/jX
L/7zH7/2B//l97/21f/077/23776+1/9+r/9vX/x4s2v/LMXvPj8v3zx8ofv
XD03xhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYY
Y4wxx+bBC77zwfXzVx9fveD6hm+9f/38j//i+ub973549fyPvn9185p+vn7+
jXevi50r3//Ke+mc//TD6+f/+6Or5289vbp55f+vfXT9/PUnV88fvrieJ9fX
z3/688Tf/X3iH774/M7rz/8mwc9//bfpZ/3N9S+vn3/2V9fPP/rZ9fPvf3r9
/O1Prp9/+/3yz8wYY4yJIB+R0chC5CBy/BvvJrmOPJOc+6d//PwlyEHJPX7+
7ZcJyUh+5nN6X/+P8hL4+fNfpe9562mCc3jQcb6cG7qFzl3vI2P5W877f/5F
kuvwg58mWaxXXQ/w3fEcdJ3xvJ99ma5X1x5/NwTdr2dfXq4fHQHdwHqBMcaY
NcEuf/1JskWRg5/+vyTzkEO8fvGbZtmG3IryfQ5Rd5D+oO//+PPr5+9/dnuO
H1/d/PzBT9K5SkZHHYTjIT/5O5CdzWejLsLxudb3P7t6/t6nVzd2+RxZnh8b
XYJX2f58P/C+dAr8CehWXBvnwnucB3oMoLOgB6B3odfwrKQLPbz1r/B76Tym
DvAnoV/mzwU/F8+L35c+R2PMucD2RWYgQ7F3kT/IHtYl3s9tYMlh2fLRzs/l
nmSb5PEY+xcdQzY38hr59uaPkt+dn3mP8+Q11zl0XkO+awldZS66R/l18B7y
X3qLnkH0i+TXrb9BF7K/YD0e3M6dJrn9ynvJL8b41FhF32Q+SWd7+Djtf3Ec
9Do+n/S45c9xji7IeXHenCP/51j8Hx2VNQPQa7p8cMaYukC+sz5hWyJHclmI
jEEXQI6wb499zTrGXEcWYZsCn+H3vMexZK8CegLyqM9+1u+1V47OobWSc+Q7
0APm2uF7Iu6N5PJd8l8+A56LYir2uA4jW5CZ7Csh/3iVDwOZKJmj9x6Ev2s6
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
5fk+uZ4f578m7Kv35RFOgXGDjd/Xn6D0czJmCLX47vroyhkz9ynpAxhT30+0
6Sv4dIfI6tjPpa9/jBkO9xJ7Gnlfaz+JrnG4xjggzwGfFDn/Q/SBJVgr787z
5NzsYU5PkSemXA+osfv1yO42W7KrV0B+DMcjLwv3s+Y+EkNYK2+EHCr5GJCh
a/r9t8L1e85Hm8+1Fji/10f6f02iZA/Arj3YfA3pqldsv8/2yOYvHUOyBIx/
ZPQa8aPqZbzGPoMxa8OcqK0WEPIevRr/Gkzt8W0SpeIAxtRpbqtZRA3AvcQ1
H4mj1QyHtetHnNEuPuM1H4maasXg/8XXaB/uspSS/2PX2yb/P7Gppe/fGaHW
Qun1YGliD6LasVz1/dmCGuY5dgaywnWl14HY+RLPdazfvmkfqmQe15nB/1Z6
XVgDYp1dP8yYRGn7/1e/tr2/NuhUW+3jYsPj95+yZ4O+IJ8z55vqBpa/f2eD
8VKDXbAW6JnUEratYc5OyT7xqVZX+XtwBraI8cRmnLumIu+x+S33y4F9TP2E
2ntIz8H1pIy5urHVSs1BfHGlr/8sbFEP2DmaxwAdDh1sL3XBpuC4EjOUI9dy
Kln7B19x6es/C1vEAFj+HwdqKRwt/j+X/0de12vA+yt1g++95BxXz8vS9+EM
bNGjxf15j8VRYwCF447MmSkd4/PRzywvtgRday0dgHg9x1Ufi9r6SC9N7fqq
7WezJtTzLjX33MevDMjopX0+zqk6Lnuv/dsFNY6WvFeW12ZPlIr9R154rpRj
yTUdXeJb71v2H5XaevsuOW69Bpkzs/XeP9/HngM1B0pf+5mhVvlSz9R+nGNT
uj7IWgztKWXMUdm6dzf7bZb9dUDsxdznSU6hbajjs3QeIHYA8SIl+46N6U1h
zBHZsi8cPn/H29YDuU9z/D/sHZW+BrMNc/pHYGMg69EhGDN5vS966OJDYi3a
qkYl497xKubsbJnfU3us7dkg9unZxLXTNfnPxdgYAMYI8vzhD8d9T9O+FDrB
knqBeo2UvqfGrMEYf+xW+jZ6hmtt1AUxe2Psfz7Lc6QuTOlzN9tBzujYeNGp
+mGqO3jRAZ7dHmvJfcpSfqsH7zg/wKzH2LFFr5UtZP/1Ly33a4U9UOkA2pMl
LgD7CLD7WC/x0XrtOifI3yY9MfmBks2OLskrPiVe534ncSXIfI67pPznOKXq
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
McYYY4wxxhhjjDHGGGOMMcYYY4wx9/n/qrXSJg==
                "], {{0, 256}, {512, 
                0}}, {0, 255}, ColorFunction -> RGBColor], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> False, 
                MetaInformation -> 
                Association[
                 "Exif" -> {"Software" -> "Wolfram Language"}, 
                  "GeoGraphicsMetaInformation" -> {
                   "Software" -> "Wolfram Language", "TileSources" -> 
                    "Wolfram Knowledgebase with data from OpenStreetMap"}]], 
               Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
              ImageSizeRaw -> {512, 256}, PlotRange -> {{0, 512}, {0, 256}}], 
             TraditionalForm]], 
           PolygonBox[{{-188.3705, -90.}, {171.6295, -90.}, {171.6295, 
            90.}, {-188.3705, 90.}},
            
            VertexTextureCoordinates->{{0., 0.}, {1., 0.}, {1., 1.}, {0., 
             1.}}]}, 
          TagBox[
           TooltipBox[
            {Opacity[0], 
             PolygonBox[{{99.62950000000001, -54.}, {171.6295, -54.}, {
              171.6295, -90.}, {99.62950000000001, -90.}, {
              99.62950000000001, -54.}}]},
            "\"Wolfram Knowledgebase with data from OpenStreetMap\"",
            TooltipStyle->"TextStyling"],
           
           Annotation[#, "Wolfram Knowledgebase with data from OpenStreetMap",
             "Tooltip"]& ], {{
            {RGBColor[0.790588, 0.201176, 0.], PointSize[Large], Opacity[1], 
             EdgeForm[{Opacity[0.4], Thickness[Tiny]}], FaceForm[{RGBColor[
             1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
              StyleBox["\<\"\[FilledCircle]\"\>",
               StripOnInput->False,
               FontSize->10.88], {117.88, -35.02}], 
             {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{
              RGBColor[1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
               StyleBox["\<\"\[FilledCircle]\"\>",
                StripOnInput->False,
                FontSize->10.88], {26.830000000000002, 45.75}]}, 
             {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{
              RGBColor[1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
               StyleBox["\<\"\[FilledCircle]\"\>",
                StripOnInput->False,
                FontSize->10.88], {159.62, -8.16}]}, 
             {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{
              RGBColor[1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
               StyleBox["\<\"\[FilledCircle]\"\>",
                StripOnInput->False,
                FontSize->10.88], {-109.9, 22.88}]}, 
             {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{
              RGBColor[1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
               StyleBox["\<\"\[FilledCircle]\"\>",
                StripOnInput->False,
                FontSize->10.88], {-66.9, -4.87}]}, 
             {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{
              RGBColor[1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
               StyleBox["\<\"\[FilledCircle]\"\>",
                StripOnInput->False,
                FontSize->10.88], {35.33, 44.92}]}, 
             {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{
              RGBColor[1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
               StyleBox["\<\"\[FilledCircle]\"\>",
                StripOnInput->False,
                FontSize->10.88], {-176.361, -44.027}]}, 
             {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{
              RGBColor[1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
               StyleBox["\<\"\[FilledCircle]\"\>",
                StripOnInput->False,
                FontSize->10.88], {-165.83, -10.88}]}, 
             {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{
              RGBColor[1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
               StyleBox["\<\"\[FilledCircle]\"\>",
                StripOnInput->False,
                FontSize->10.88], {-64.28, -27.8}]}, 
             {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{
              RGBColor[1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
               StyleBox["\<\"\[FilledCircle]\"\>",
                StripOnInput->False,
                FontSize->10.88], {96.83, -12.17}], 
              {Opacity[1]}}}, {{{{}, {}}, {{}, {InsetBox[
                 PaneBox[
                  StyleBox[
                   StyleBox["\<\"Albany\"\>",
                    StripOnInput->False,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0],
                    $CellContext`LineColor -> GrayLevel[0],
                    $CellContext`FrontFaceColor -> GrayLevel[0],
                    $CellContext`BackFaceColor -> GrayLevel[0],
                    $CellContext`GraphicsColor -> GrayLevel[0]],
                   StripOnInput->False,
                   FontWeight->Bold,
                   FontColor->GrayLevel[0],
                   $CellContext`LineColor -> GrayLevel[0],
                   $CellContext`FrontFaceColor -> GrayLevel[0],
                   $CellContext`BackFaceColor -> GrayLevel[0],
                   $CellContext`GraphicsColor -> 
                   GrayLevel[
                    0]]], {117.88, -35.02}, \
{-0.9620000000000001, -0.9620000000000001}], InsetBox[
                 PaneBox[
                  StyleBox[
                   StyleBox["\<\"Ordzhonikidze\"\>",
                    StripOnInput->False,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0],
                    $CellContext`LineColor -> GrayLevel[0],
                    $CellContext`FrontFaceColor -> GrayLevel[0],
                    $CellContext`BackFaceColor -> GrayLevel[0],
                    $CellContext`GraphicsColor -> GrayLevel[0]],
                   StripOnInput->False,
                   FontWeight->Bold,
                   FontColor->GrayLevel[0],
                   $CellContext`LineColor -> GrayLevel[0],
                   $CellContext`FrontFaceColor -> GrayLevel[0],
                   $CellContext`BackFaceColor -> GrayLevel[0],
                   $CellContext`GraphicsColor -> 
                   GrayLevel[
                    0]]], {35.33, 44.92}, \
{0.9620000000000001, 0.9620000000000001}], InsetBox[
                 PaneBox[
                  StyleBox[
                   StyleBox["\<\"Buala\"\>",
                    StripOnInput->False,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0],
                    $CellContext`LineColor -> GrayLevel[0],
                    $CellContext`FrontFaceColor -> GrayLevel[0],
                    $CellContext`BackFaceColor -> GrayLevel[0],
                    $CellContext`GraphicsColor -> GrayLevel[0]],
                   StripOnInput->False,
                   FontWeight->Bold,
                   FontColor->GrayLevel[0],
                   $CellContext`LineColor -> GrayLevel[0],
                   $CellContext`FrontFaceColor -> GrayLevel[0],
                   $CellContext`BackFaceColor -> GrayLevel[0],
                   $CellContext`GraphicsColor -> 
                   GrayLevel[
                    0]]], {159.62, -8.16}, \
{-0.9620000000000001, -0.9620000000000001}], InsetBox[
                 PaneBox[
                  StyleBox[
                   StyleBox["\<\"Andreiasu de Jos\"\>",
                    StripOnInput->False,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0],
                    $CellContext`LineColor -> GrayLevel[0],
                    $CellContext`FrontFaceColor -> GrayLevel[0],
                    $CellContext`BackFaceColor -> GrayLevel[0],
                    $CellContext`GraphicsColor -> GrayLevel[0]],
                   StripOnInput->False,
                   FontWeight->Bold,
                   FontColor->GrayLevel[0],
                   $CellContext`LineColor -> GrayLevel[0],
                   $CellContext`FrontFaceColor -> GrayLevel[0],
                   $CellContext`BackFaceColor -> GrayLevel[0],
                   $CellContext`GraphicsColor -> 
                   GrayLevel[
                    0]]], {26.830000000000002, 45.75}, \
{-0.9620000000000001, -0.9620000000000001}], InsetBox[
                 PaneBox[
                  StyleBox[
                   StyleBox["\<\"Owenga\"\>",
                    StripOnInput->False,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0],
                    $CellContext`LineColor -> GrayLevel[0],
                    $CellContext`FrontFaceColor -> GrayLevel[0],
                    $CellContext`BackFaceColor -> GrayLevel[0],
                    $CellContext`GraphicsColor -> GrayLevel[0]],
                   StripOnInput->False,
                   FontWeight->Bold,
                   FontColor->GrayLevel[0],
                   $CellContext`LineColor -> GrayLevel[0],
                   $CellContext`FrontFaceColor -> GrayLevel[0],
                   $CellContext`BackFaceColor -> GrayLevel[0],
                   $CellContext`GraphicsColor -> 
                   GrayLevel[
                    0]]], {-176.361, -44.027}, \
{-0.9620000000000001, 0.9620000000000001}], InsetBox[
                 PaneBox[
                  StyleBox[
                   StyleBox["\<\"Cabo San Lucas\"\>",
                    StripOnInput->False,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0],
                    $CellContext`LineColor -> GrayLevel[0],
                    $CellContext`FrontFaceColor -> GrayLevel[0],
                    $CellContext`BackFaceColor -> GrayLevel[0],
                    $CellContext`GraphicsColor -> GrayLevel[0]],
                   StripOnInput->False,
                   FontWeight->Bold,
                   FontColor->GrayLevel[0],
                   $CellContext`LineColor -> GrayLevel[0],
                   $CellContext`FrontFaceColor -> GrayLevel[0],
                   $CellContext`BackFaceColor -> GrayLevel[0],
                   $CellContext`GraphicsColor -> 
                   GrayLevel[
                    0]]], {-109.9, 22.88}, \
{-0.9620000000000001, -0.9620000000000001}], InsetBox[
                 PaneBox[
                  StyleBox[
                   StyleBox["\<\"Santiago del Estero\"\>",
                    StripOnInput->False,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0],
                    $CellContext`LineColor -> GrayLevel[0],
                    $CellContext`FrontFaceColor -> GrayLevel[0],
                    $CellContext`BackFaceColor -> GrayLevel[0],
                    $CellContext`GraphicsColor -> GrayLevel[0]],
                   StripOnInput->False,
                   FontWeight->Bold,
                   FontColor->GrayLevel[0],
                   $CellContext`LineColor -> GrayLevel[0],
                   $CellContext`FrontFaceColor -> GrayLevel[0],
                   $CellContext`BackFaceColor -> GrayLevel[0],
                   $CellContext`GraphicsColor -> 
                   GrayLevel[
                    0]]], {-64.28, -27.8}, \
{0.9620000000000001, 0.9620000000000001}], InsetBox[
                 PaneBox[
                  StyleBox[
                   StyleBox["\<\"Roto\"\>",
                    StripOnInput->False,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0],
                    $CellContext`LineColor -> GrayLevel[0],
                    $CellContext`FrontFaceColor -> GrayLevel[0],
                    $CellContext`BackFaceColor -> GrayLevel[0],
                    $CellContext`GraphicsColor -> GrayLevel[0]],
                   StripOnInput->False,
                   FontWeight->Bold,
                   FontColor->GrayLevel[0],
                   $CellContext`LineColor -> GrayLevel[0],
                   $CellContext`FrontFaceColor -> GrayLevel[0],
                   $CellContext`BackFaceColor -> GrayLevel[0],
                   $CellContext`GraphicsColor -> 
                   GrayLevel[
                    0]]], {-165.83, -10.88}, \
{-0.9620000000000001, -0.9620000000000001}], InsetBox[
                 PaneBox[
                  StyleBox[
                   StyleBox["\<\"West Island\"\>",
                    StripOnInput->False,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0],
                    $CellContext`LineColor -> GrayLevel[0],
                    $CellContext`FrontFaceColor -> GrayLevel[0],
                    $CellContext`BackFaceColor -> GrayLevel[0],
                    $CellContext`GraphicsColor -> GrayLevel[0]],
                   StripOnInput->False,
                   FontWeight->Bold,
                   FontColor->GrayLevel[0],
                   $CellContext`LineColor -> GrayLevel[0],
                   $CellContext`FrontFaceColor -> GrayLevel[0],
                   $CellContext`BackFaceColor -> GrayLevel[0],
                   $CellContext`GraphicsColor -> 
                   GrayLevel[
                    0]]], {96.83, -12.17}, \
{-0.9620000000000001, 0.9620000000000001}], InsetBox[
                 PaneBox[
                  StyleBox[
                   StyleBox["\<\"Carauari\"\>",
                    StripOnInput->False,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0],
                    $CellContext`LineColor -> GrayLevel[0],
                    $CellContext`FrontFaceColor -> GrayLevel[0],
                    $CellContext`BackFaceColor -> GrayLevel[0],
                    $CellContext`GraphicsColor -> GrayLevel[0]],
                   StripOnInput->False,
                   FontWeight->Bold,
                   FontColor->GrayLevel[0],
                   $CellContext`LineColor -> GrayLevel[0],
                   $CellContext`FrontFaceColor -> GrayLevel[0],
                   $CellContext`BackFaceColor -> GrayLevel[0],
                   $CellContext`GraphicsColor -> 
                   GrayLevel[
                    0]]], {-66.9, -4.87}, \
{0.9620000000000001, 0.9620000000000001}]}}}, {{}, {}}}}, {}}}, {}},
        CoordinatesToolOptions:>{
         "DisplayFunction" -> (
           GeoGraphics`GeoGridPositionDisplay[#, "Equirectangular", 
            "ITRF00"]& ), 
          "CopiedValueFunction" -> (
           GeoGraphics`GeoGridPositionCopiedValue[#, "Equirectangular", 
            "ITRF00"]& )},
        DefaultBaseStyle->"GeoGraphics",
        ImageSize->{443.69921875, Automatic},
        LabelStyle->Automatic,
        Method->{"OriginalInput" -> HoldForm[
            GeoGraphics[{{{
                RGBColor[1., 0.607843, 0.], 
                EdgeForm[{
                  Thickness[Tiny], 
                  Opacity[0.4]}], 
                PointSize[Large], 
                FaceForm[{
                  Opacity[0.5]}], 
                GeoStyling[None], 
                Directive[
                 Directive[
                  Opacity[1], 
                  RGBColor[0.790588, 0.201176, 0.]], 
                 FaceForm[{
                   Opacity[0.5], 
                   RGBColor[1., 0.607843, 0.]}]], 
                Inset[
                 Style["\[FilledCircle]", FontSize -> 10.88], 
                 GeoPosition[{-35.02, 117.88}]], 
                Directive[
                 Directive[
                  Opacity[1], 
                  RGBColor[0.790588, 0.201176, 0.]], 
                 FaceForm[{
                   Opacity[0.5], 
                   RGBColor[1., 0.607843, 0.]}]], 
                Inset[
                 Style["\[FilledCircle]", FontSize -> 10.88], 
                 GeoPosition[{45.75, 26.830000000000002`}]], 
                Directive[
                 Directive[
                  Opacity[1], 
                  RGBColor[0.790588, 0.201176, 0.]], 
                 FaceForm[{
                   Opacity[0.5], 
                   RGBColor[1., 0.607843, 0.]}]], 
                Inset[
                 Style["\[FilledCircle]", FontSize -> 10.88], 
                 GeoPosition[{-8.16, 159.62}]], 
                Directive[
                 Directive[
                  Opacity[1], 
                  RGBColor[0.790588, 0.201176, 0.]], 
                 FaceForm[{
                   Opacity[0.5], 
                   RGBColor[1., 0.607843, 0.]}]], 
                Inset[
                 Style["\[FilledCircle]", FontSize -> 10.88], 
                 GeoPosition[{22.88, -109.9}]], 
                Directive[
                 Directive[
                  Opacity[1], 
                  RGBColor[0.790588, 0.201176, 0.]], 
                 FaceForm[{
                   Opacity[0.5], 
                   RGBColor[1., 0.607843, 0.]}]], 
                Inset[
                 Style["\[FilledCircle]", FontSize -> 10.88], 
                 GeoPosition[{-4.87, -66.9}]], 
                Directive[
                 Directive[
                  Opacity[1], 
                  RGBColor[0.790588, 0.201176, 0.]], 
                 FaceForm[{
                   Opacity[0.5], 
                   RGBColor[1., 0.607843, 0.]}]], 
                Inset[
                 Style["\[FilledCircle]", FontSize -> 10.88], 
                 GeoPosition[{44.92, 35.33}]], 
                Directive[
                 Directive[
                  Opacity[1], 
                  RGBColor[0.790588, 0.201176, 0.]], 
                 FaceForm[{
                   Opacity[0.5], 
                   RGBColor[1., 0.607843, 0.]}]], 
                Inset[
                 Style["\[FilledCircle]", FontSize -> 10.88], 
                 GeoPosition[{-44.027, -176.361}]], 
                Directive[
                 Directive[
                  Opacity[1], 
                  RGBColor[0.790588, 0.201176, 0.]], 
                 FaceForm[{
                   Opacity[0.5], 
                   RGBColor[1., 0.607843, 0.]}]], 
                Inset[
                 Style["\[FilledCircle]", FontSize -> 10.88], 
                 GeoPosition[{-10.88, -165.83}]], 
                Directive[
                 Directive[
                  Opacity[1], 
                  RGBColor[0.790588, 0.201176, 0.]], 
                 FaceForm[{
                   Opacity[0.5], 
                   RGBColor[1., 0.607843, 0.]}]], 
                Inset[
                 Style["\[FilledCircle]", FontSize -> 10.88], 
                 GeoPosition[{-27.8, -64.28}]], 
                Directive[
                 Directive[
                  Opacity[1], 
                  RGBColor[0.790588, 0.201176, 0.]], 
                 FaceForm[{
                   Opacity[0.5], 
                   RGBColor[1., 0.607843, 0.]}]], 
                Inset[
                 Style["\[FilledCircle]", FontSize -> 10.88], 
                 GeoPosition[{-12.17, 96.83}]], 
                Opacity[1]}}, {{{{}, {}}, {{}, {
                  Text[
                   Pane[
                    Style[
                    Style["Albany", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                   
                   GeoPosition[{-35.02, 
                    117.88}], {-0.9620000000000001, -0.9620000000000001}], 
                  Text[
                   Pane[
                    Style[
                    Style["Ordzhonikidze", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                   GeoPosition[{44.92, 35.33}], {0.9620000000000001, 
                   0.9620000000000001}], 
                  Text[
                   Pane[
                    Style[
                    Style["Buala", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                   
                   GeoPosition[{-8.16, 
                    159.62}], {-0.9620000000000001, -0.9620000000000001}], 
                  Text[
                   Pane[
                    Style[
                    Style["Andreiasu de Jos", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                   GeoPosition[{45.75, 
                    26.830000000000002`}], {-0.9620000000000001, \
-0.9620000000000001}], 
                  Text[
                   Pane[
                    Style[
                    Style["Owenga", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                   GeoPosition[{-44.027, -176.361}], {-0.9620000000000001, 
                   0.9620000000000001}], 
                  Text[
                   Pane[
                    Style[
                    Style["Cabo San Lucas", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                   
                   GeoPosition[{
                    22.88, -109.9}], {-0.9620000000000001, \
-0.9620000000000001}], 
                  Text[
                   Pane[
                    Style[
                    Style["Santiago del Estero", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                   GeoPosition[{-27.8, -64.28}], {0.9620000000000001, 
                   0.9620000000000001}], 
                  Text[
                   Pane[
                    Style[
                    Style["Roto", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                   
                   GeoPosition[{-10.88, -165.83}], {-0.9620000000000001, \
-0.9620000000000001}], 
                  Text[
                   Pane[
                    Style[
                    Style["West Island", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                   GeoPosition[{-12.17, 96.83}], {-0.9620000000000001, 
                   0.9620000000000001}], 
                  Text[
                   Pane[
                    Style[
                    Style["Carauari", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                   GeoPosition[{-4.87, -66.9}], {0.9620000000000001, 
                   0.9620000000000001}]}}}, {{{}}, {{}}}}}, GeoBackground -> 
             GeoStyling["GeoPlotMap"], LabelStyle -> Automatic, 
             PlotRangeClipping -> False]], 
          "BasicGeoRange" -> {{-44.027, 45.75}, {-176.361, 159.62}}, 
          "GeoGraphicsOptions" -> {
           GeoBackground -> GeoStyling["StreetMapNoLabels"], GeoCenter -> 
            GeoPosition[{0., -8.370499999999993}], GeoGridLines -> None, 
            GeoGridLinesStyle -> GrayLevel[0.4, 0.3], GeoModel -> "ITRF00", 
            GeoProjection -> "Equirectangular", 
            GeoRange -> {{-90., 90.}, {-188.3705, 171.6295}}, GeoRangePadding -> 
            None, GeoServer -> {Automatic}, GeoZoomLevel -> 1, 
            MetaInformation -> {
             "Software" -> "Wolfram Language", "TileSources" -> 
              "Wolfram Knowledgebase with data from OpenStreetMap"}}},
        PlotRange->{{-188.3705, 171.6295}, {-90., 90.}},
        PlotRangeClipping->False,
        PlotRangePadding->None]], "ExerciseOutput",ExpressionUUID->
       "eceffb74-caf7-44ff-a6d4-9a2f16dab55a"],
      Apply[TextCell, 
       Cell[
        BoxData[
         GraphicsBox[{{{{{{
                Texture[
                 FormBox[
                  GraphicsBox[
                   TagBox[
                    RasterBox[CompressedData["
1:eJztnUuPZdd5npXLIMP8hfyLTDPM1EF+gI0oRiYKIAcI8mvcEGSADiRYMkK4
GYBsckCKok2aahGtJsUwkqoYWBdbtkUbNFpAp59a9fb5atW+39bae7+Dp0/1
qVP77Mta67us7/Jvfu+//s5//udf+cpX/uBfvfjnd373v/+7r3/9d//Hf/jX
L/7zH7/2B//l97/21f/077/23776+1/9+r/9vX/x4s2v/LMXvPj8v3zx8ofv
XD03xhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYY
Y4wxx+bBC77zwfXzVx9fveD6hm+9f/38j//i+ub973549fyPvn9185p+vn7+
jXevi50r3//Ke+mc//TD6+f/+6Or5289vbp55f+vfXT9/PUnV88fvrieJ9fX
z3/688Tf/X3iH774/M7rz/8mwc9//bfpZ/3N9S+vn3/2V9fPP/rZ9fPvf3r9
/O1Prp9/+/3yz8wYY4yJIB+R0chC5CBy/BvvJrmOPJOc+6d//PwlyEHJPX7+
7ZcJyUh+5nN6X/+P8hL4+fNfpe9562mCc3jQcb6cG7qFzl3vI2P5W877f/5F
kuvwg58mWaxXXQ/w3fEcdJ3xvJ99ma5X1x5/NwTdr2dfXq4fHQHdwHqBMcaY
NcEuf/1JskWRg5/+vyTzkEO8fvGbZtmG3IryfQ5Rd5D+oO//+PPr5+9/dnuO
H1/d/PzBT9K5SkZHHYTjIT/5O5CdzWejLsLxudb3P7t6/t6nVzd2+RxZnh8b
XYJX2f58P/C+dAr8CehWXBvnwnucB3oMoLOgB6B3odfwrKQLPbz1r/B76Tym
DvAnoV/mzwU/F8+L35c+R2PMucD2RWYgQ7F3kT/IHtYl3s9tYMlh2fLRzs/l
nmSb5PEY+xcdQzY38hr59uaPkt+dn3mP8+Q11zl0XkO+awldZS66R/l18B7y
X3qLnkH0i+TXrb9BF7K/YD0e3M6dJrn9ynvJL8b41FhF32Q+SWd7+Djtf3Ec
9Do+n/S45c9xji7IeXHenCP/51j8Hx2VNQPQa7p8cMaYukC+sz5hWyJHclmI
jEEXQI6wb499zTrGXEcWYZsCn+H3vMexZK8CegLyqM9+1u+1V47OobWSc+Q7
0APm2uF7Iu6N5PJd8l8+A56LYir2uA4jW5CZ7Csh/3iVDwOZKJmj9x6Ev2s6
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
5fk+uZ4f578m7Kv35RFOgXGDjd/Xn6D0czJmCLX47vroyhkz9ynpAxhT30+0
6Sv4dIfI6tjPpa9/jBkO9xJ7Gnlfaz+JrnG4xjggzwGfFDn/Q/SBJVgr787z
5NzsYU5PkSemXA+osfv1yO42W7KrV0B+DMcjLwv3s+Y+EkNYK2+EHCr5GJCh
a/r9t8L1e85Hm8+1Fji/10f6f02iZA/Arj3YfA3pqldsv8/2yOYvHUOyBIx/
ZPQa8aPqZbzGPoMxa8OcqK0WEPIevRr/Gkzt8W0SpeIAxtRpbqtZRA3AvcQ1
H4mj1QyHtetHnNEuPuM1H4maasXg/8XXaB/uspSS/2PX2yb/P7Gppe/fGaHW
Qun1YGliD6LasVz1/dmCGuY5dgaywnWl14HY+RLPdazfvmkfqmQe15nB/1Z6
XVgDYp1dP8yYRGn7/1e/tr2/NuhUW+3jYsPj95+yZ4O+IJ8z55vqBpa/f2eD
8VKDXbAW6JnUEratYc5OyT7xqVZX+XtwBraI8cRmnLumIu+x+S33y4F9TP2E
2ntIz8H1pIy5urHVSs1BfHGlr/8sbFEP2DmaxwAdDh1sL3XBpuC4EjOUI9dy
Kln7B19x6es/C1vEAFj+HwdqKRwt/j+X/0de12vA+yt1g++95BxXz8vS9+EM
bNGjxf15j8VRYwCF447MmSkd4/PRzywvtgRday0dgHg9x1Ufi9r6SC9N7fqq
7WezJtTzLjX33MevDMjopX0+zqk6Lnuv/dsFNY6WvFeW12ZPlIr9R154rpRj
yTUdXeJb71v2H5XaevsuOW69Bpkzs/XeP9/HngM1B0pf+5mhVvlSz9R+nGNT
uj7IWgztKWXMUdm6dzf7bZb9dUDsxdznSU6hbajjs3QeIHYA8SIl+46N6U1h
zBHZsi8cPn/H29YDuU9z/D/sHZW+BrMNc/pHYGMg69EhGDN5vS966OJDYi3a
qkYl497xKubsbJnfU3us7dkg9unZxLXTNfnPxdgYAMYI8vzhD8d9T9O+FDrB
knqBeo2UvqfGrMEYf+xW+jZ6hmtt1AUxe2Psfz7Lc6QuTOlzN9tBzujYeNGp
+mGqO3jRAZ7dHmvJfcpSfqsH7zg/wKzH2LFFr5UtZP/1Ly33a4U9UOkA2pMl
LgD7CLD7WC/x0XrtOifI3yY9MfmBks2OLskrPiVe534ncSXIfI67pPznOKXq
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
McYYY4wxxhhjjDHGGGOMMcYYY4wx9/n/qrXSJg==
                    "], {{0, 256}, {
                    512, 0}}, {0, 255}, ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> False, 
                    MetaInformation -> 
                    Association[
                    "Exif" -> {"Software" -> "Wolfram Language"}, 
                    "GeoGraphicsMetaInformation" -> {
                    "Software" -> "Wolfram Language", "TileSources" -> 
                    "Wolfram Knowledgebase with data from OpenStreetMap"}]], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                    ImageSizeRaw -> {512, 256}, 
                   PlotRange -> {{0, 512}, {0, 256}}], TraditionalForm]], 
                
                PolygonBox[{{-188.3705, -90.}, {171.6295, -90.}, {171.6295, 
                 90.}, {-188.3705, 90.}}, 
                 VertexTextureCoordinates -> {{0., 0.}, {1., 0.}, {1., 1.}, {
                  0., 1.}}]}}}}, 
            TagBox[
             TooltipBox[{{{{
                  Opacity[0], 
                  
                  PolygonBox[{{99.62950000000001, -54.}, {171.6295, -54.}, {
                   171.6295, -90.}, {99.62950000000001, -90.}, {
                   99.62950000000001, -54.}}]}}}}, 
              "\"Wolfram Knowledgebase with data from OpenStreetMap\"", 
              TooltipStyle -> "TextStyling"], 
             Annotation[#, 
              "Wolfram Knowledgebase with data from OpenStreetMap", 
              "Tooltip"]& ], {{{{{{{{
                    RGBColor[0.790588, 0.201176, 0.], 
                    PointSize[Large], 
                    Opacity[1], 
                    EdgeForm[{
                    Opacity[0.4], 
                    Thickness[Tiny]}], 
                    FaceForm[{
                    RGBColor[1., 0.607843, 0.], 
                    Opacity[0.5]}], 
                    InsetBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 
                    10.88], {117.88, -35.02}], {{{
                    RGBColor[0.790588, 0.201176, 0.], 
                    Opacity[1], 
                    FaceForm[{
                    RGBColor[1., 0.607843, 0.], 
                    Opacity[0.5]}], 
                    InsetBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 
                    10.88], {26.830000000000002`, 45.75}]}}}, {{{
                    RGBColor[0.790588, 0.201176, 0.], 
                    Opacity[1], 
                    FaceForm[{
                    RGBColor[1., 0.607843, 0.], 
                    Opacity[0.5]}], 
                    InsetBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 
                    10.88], {159.62, -8.16}]}}}, {{{
                    RGBColor[0.790588, 0.201176, 0.], 
                    Opacity[1], 
                    FaceForm[{
                    RGBColor[1., 0.607843, 0.], 
                    Opacity[0.5]}], 
                    InsetBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 
                    10.88], {-109.9, 22.88}]}}}, {{{
                    RGBColor[0.790588, 0.201176, 0.], 
                    Opacity[1], 
                    FaceForm[{
                    RGBColor[1., 0.607843, 0.], 
                    Opacity[0.5]}], 
                    InsetBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 
                    10.88], {-66.9, -4.87}]}}}, {{{
                    RGBColor[0.790588, 0.201176, 0.], 
                    Opacity[1], 
                    FaceForm[{
                    RGBColor[1., 0.607843, 0.], 
                    Opacity[0.5]}], 
                    InsetBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 
                    10.88], {35.33, 44.92}]}}}, {{{
                    RGBColor[0.790588, 0.201176, 0.], 
                    Opacity[1], 
                    FaceForm[{
                    RGBColor[1., 0.607843, 0.], 
                    Opacity[0.5]}], 
                    InsetBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 
                    10.88], {-176.361, -44.027}]}}}, {{{
                    RGBColor[0.790588, 0.201176, 0.], 
                    Opacity[1], 
                    FaceForm[{
                    RGBColor[1., 0.607843, 0.], 
                    Opacity[0.5]}], 
                    InsetBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 
                    10.88], {-165.83, -10.88}]}}}, {{{
                    RGBColor[0.790588, 0.201176, 0.], 
                    Opacity[1], 
                    FaceForm[{
                    RGBColor[1., 0.607843, 0.], 
                    Opacity[0.5]}], 
                    InsetBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 
                    10.88], {-64.28, -27.8}]}}}, {{{
                    RGBColor[0.790588, 0.201176, 0.], 
                    Opacity[1], 
                    FaceForm[{
                    RGBColor[1., 0.607843, 0.], 
                    Opacity[0.5]}], 
                    InsetBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 
                    10.88], {96.83, -12.17}], {{{
                    Opacity[1]}}}}}}}}}}}, {{{{}, {}}, {{}, {
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Albany\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {
                    117.88, -35.02}, {-0.9620000000000001, \
-0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Ordzhonikidze\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {35.33, 
                    44.92}, {0.9620000000000001, 0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Buala\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {
                    159.62, -8.16}, {-0.9620000000000001, \
-0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Andreiasu de Jos\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {
                    26.830000000000002`, 
                    45.75}, {-0.9620000000000001, -0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Owenga\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> 
                    GrayLevel[0]]], {-176.361, -44.027}, {-0.9620000000000001,
                     0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Cabo San Lucas\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {-109.9, 
                    22.88}, {-0.9620000000000001, -0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Santiago del Estero\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> 
                    GrayLevel[0]]], {-64.28, -27.8}, {0.9620000000000001, 
                    0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Roto\"", StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> 
                    GrayLevel[
                    0]]], {-165.83, -10.88}, {-0.9620000000000001, \
-0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"West Island\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]]], {
                    96.83, -12.17}, {-0.9620000000000001, 
                    0.9620000000000001}], 
                   InsetBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    "\"Carauari\"", StripOnInput -> 
                    False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
                    StripOnInput -> False, $CellContext`LineColor -> 
                    GrayLevel[0], $CellContext`FrontFaceColor -> 
                    GrayLevel[0], $CellContext`BackFaceColor -> 
                    GrayLevel[0], $CellContext`GraphicsColor -> GrayLevel[0], 
                    FontWeight -> Bold, FontColor -> 
                    GrayLevel[0]]], {-66.9, -4.87}, {0.9620000000000001, 
                    0.9620000000000001}]}}}, {{{}}, {{}}}}}, {}}}}, {}}, 
          CoordinatesToolOptions :> {
           "DisplayFunction" -> (
             GeoGraphics`GeoGridPositionDisplay[#, "Equirectangular", 
              "ITRF00"]& ), 
            "CopiedValueFunction" -> (
             GeoGraphics`GeoGridPositionCopiedValue[#, "Equirectangular", 
              "ITRF00"]& )}, DefaultBaseStyle -> "GeoGraphics", 
          ImageSize -> {443.69921875, Automatic}, LabelStyle -> Automatic, 
          Method -> {"OriginalInput" -> HoldForm[
              GeoGraphics[{{{
                  RGBColor[1., 0.607843, 0.], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    Opacity[0.4]}], 
                  PointSize[Large], 
                  FaceForm[{
                    Opacity[0.5]}], 
                  GeoStyling[None], 
                  Directive[
                   Directive[
                    Opacity[1], 
                    RGBColor[0.790588, 0.201176, 0.]], 
                   FaceForm[{
                    Opacity[0.5], 
                    RGBColor[1., 0.607843, 0.]}]], 
                  Inset[
                   Style["\[FilledCircle]", FontSize -> 10.88], 
                   GeoPosition[{-35.02, 117.88}]], 
                  Directive[
                   Directive[
                    Opacity[1], 
                    RGBColor[0.790588, 0.201176, 0.]], 
                   FaceForm[{
                    Opacity[0.5], 
                    RGBColor[1., 0.607843, 0.]}]], 
                  Inset[
                   Style["\[FilledCircle]", FontSize -> 10.88], 
                   GeoPosition[{45.75, 26.830000000000002`}]], 
                  Directive[
                   Directive[
                    Opacity[1], 
                    RGBColor[0.790588, 0.201176, 0.]], 
                   FaceForm[{
                    Opacity[0.5], 
                    RGBColor[1., 0.607843, 0.]}]], 
                  Inset[
                   Style["\[FilledCircle]", FontSize -> 10.88], 
                   GeoPosition[{-8.16, 159.62}]], 
                  Directive[
                   Directive[
                    Opacity[1], 
                    RGBColor[0.790588, 0.201176, 0.]], 
                   FaceForm[{
                    Opacity[0.5], 
                    RGBColor[1., 0.607843, 0.]}]], 
                  Inset[
                   Style["\[FilledCircle]", FontSize -> 10.88], 
                   GeoPosition[{22.88, -109.9}]], 
                  Directive[
                   Directive[
                    Opacity[1], 
                    RGBColor[0.790588, 0.201176, 0.]], 
                   FaceForm[{
                    Opacity[0.5], 
                    RGBColor[1., 0.607843, 0.]}]], 
                  Inset[
                   Style["\[FilledCircle]", FontSize -> 10.88], 
                   GeoPosition[{-4.87, -66.9}]], 
                  Directive[
                   Directive[
                    Opacity[1], 
                    RGBColor[0.790588, 0.201176, 0.]], 
                   FaceForm[{
                    Opacity[0.5], 
                    RGBColor[1., 0.607843, 0.]}]], 
                  Inset[
                   Style["\[FilledCircle]", FontSize -> 10.88], 
                   GeoPosition[{44.92, 35.33}]], 
                  Directive[
                   Directive[
                    Opacity[1], 
                    RGBColor[0.790588, 0.201176, 0.]], 
                   FaceForm[{
                    Opacity[0.5], 
                    RGBColor[1., 0.607843, 0.]}]], 
                  Inset[
                   Style["\[FilledCircle]", FontSize -> 10.88], 
                   GeoPosition[{-44.027, -176.361}]], 
                  Directive[
                   Directive[
                    Opacity[1], 
                    RGBColor[0.790588, 0.201176, 0.]], 
                   FaceForm[{
                    Opacity[0.5], 
                    RGBColor[1., 0.607843, 0.]}]], 
                  Inset[
                   Style["\[FilledCircle]", FontSize -> 10.88], 
                   GeoPosition[{-10.88, -165.83}]], 
                  Directive[
                   Directive[
                    Opacity[1], 
                    RGBColor[0.790588, 0.201176, 0.]], 
                   FaceForm[{
                    Opacity[0.5], 
                    RGBColor[1., 0.607843, 0.]}]], 
                  Inset[
                   Style["\[FilledCircle]", FontSize -> 10.88], 
                   GeoPosition[{-27.8, -64.28}]], 
                  Directive[
                   Directive[
                    Opacity[1], 
                    RGBColor[0.790588, 0.201176, 0.]], 
                   FaceForm[{
                    Opacity[0.5], 
                    RGBColor[1., 0.607843, 0.]}]], 
                  Inset[
                   Style["\[FilledCircle]", FontSize -> 10.88], 
                   GeoPosition[{-12.17, 96.83}]], 
                  Opacity[1]}}, {{{{}, {}}, {{}, {
                    Text[
                    Pane[
                    Style[
                    Style["Albany", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                    
                    GeoPosition[{-35.02, 
                    117.88}], {-0.9620000000000001, -0.9620000000000001}], 
                    Text[
                    Pane[
                    Style[
                    Style["Ordzhonikidze", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                    GeoPosition[{44.92, 35.33}], {0.9620000000000001, 
                    0.9620000000000001}], 
                    Text[
                    Pane[
                    Style[
                    Style["Buala", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                    
                    GeoPosition[{-8.16, 
                    159.62}], {-0.9620000000000001, -0.9620000000000001}], 
                    Text[
                    Pane[
                    Style[
                    Style["Andreiasu de Jos", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                    
                    GeoPosition[{45.75, 
                    26.830000000000002`}], {-0.9620000000000001, \
-0.9620000000000001}], 
                    Text[
                    Pane[
                    Style[
                    Style["Owenga", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                    GeoPosition[{-44.027, -176.361}], {-0.9620000000000001, 
                    0.9620000000000001}], 
                    Text[
                    Pane[
                    Style[
                    Style["Cabo San Lucas", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                    
                    GeoPosition[{
                    22.88, -109.9}], {-0.9620000000000001, \
-0.9620000000000001}], 
                    Text[
                    Pane[
                    Style[
                    Style["Santiago del Estero", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                    GeoPosition[{-27.8, -64.28}], {0.9620000000000001, 
                    0.9620000000000001}], 
                    Text[
                    Pane[
                    Style[
                    Style["Roto", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                    
                    GeoPosition[{-10.88, -165.83}], {-0.9620000000000001, \
-0.9620000000000001}], 
                    Text[
                    Pane[
                    Style[
                    Style["West Island", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                    GeoPosition[{-12.17, 96.83}], {-0.9620000000000001, 
                    0.9620000000000001}], 
                    Text[
                    Pane[
                    Style[
                    Style["Carauari", {Bold, 
                    GrayLevel[0]}], {Bold, 
                    GrayLevel[0]}]], 
                    GeoPosition[{-4.87, -66.9}], {0.9620000000000001, 
                    0.9620000000000001}]}}}, {{{}}, {{}}}}}, GeoBackground -> 
               GeoStyling["GeoPlotMap"], LabelStyle -> Automatic, 
               PlotRangeClipping -> False]], 
            "BasicGeoRange" -> {{-44.027, 45.75}, {-176.361, 159.62}}, 
            "GeoGraphicsOptions" -> {
             GeoBackground -> GeoStyling["StreetMapNoLabels"], GeoCenter -> 
              GeoPosition[{0., -8.370499999999993}], GeoGridLines -> None, 
              GeoGridLinesStyle -> GrayLevel[0.4, 0.3], GeoModel -> "ITRF00", 
              GeoProjection -> "Equirectangular", 
              GeoRange -> {{-90., 90.}, {-188.3705, 171.6295}}, 
              GeoRangePadding -> None, GeoServer -> {Automatic}, GeoZoomLevel -> 
              1, MetaInformation -> {
               "Software" -> "Wolfram Language", "TileSources" -> 
                "Wolfram Knowledgebase with data from OpenStreetMap"}}}, 
          PlotRange -> {{-188.3705, 171.6295}, {-90., 90.}}, 
          PlotRangeClipping -> False, PlotRangePadding -> None]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->
  Automatic,ExpressionUUID->"772cc4e4-ad89-427e-bc98-834f0dda0c3f"]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["\:95ee&\:7b54",
 FontFamily->"Microsoft YaHei",
 FontWeight->"Normal",
 FontSlant->"Oblique"]], "QASection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369892836948*^9, 3.836989286186699*^9}},
 CellTags->"p:282",ExpressionUUID->"c0c3283e-770a-4a23-99d2-effe84be9eeb"],

Cell["\:6570\:636e\:96c6\:53ef\:4ee5\:5305\:542b\:54ea\:4e9b\:7c7b\:578b\:7684\
\:6570\:636e\:ff1f", "Question",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8374715740943327`*^9, 
  3.8374715793901844`*^9}},ExpressionUUID->"c9129e99-a8c5-4a97-a25d-\
d2b476cce112"],

Cell["\:4efb\:4f55\:7c7b\:578b\:3002\:4e0d\:4ec5\:4ec5\:662f\:6570\:5b57\:548c\
\:6587\:672c\:ff0c\:8fd8\:53ef\:4ee5\:662f\:56fe\:50cf\:3001\:56fe\:4ee5\:53ca\
\:66f4\:591a\:5176\:5b83\:7c7b\:578b\:3002\:6ca1\:6709\:5fc5\:8981\:8ba9\:67d0\
\:4e00\:884c\:6216\:67d0\:4e00\:5217\:7684\:6240\:6709\:5143\:7d20\:90fd\:662f\
\:540c\:4e00\:7c7b\:578b\:3002", "Answer",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8374715862857327`*^9, 
  3.837471621854642*^9}},ExpressionUUID->"a988b29b-46ed-414c-91bf-\
1a8b7adfab3f"],

Cell["\:6211\:53ef\:4ee5\:5c06\:7535\:5b50\:8868\:683c\:8f6c\:6362\:4e3a\:6570\
\:636e\:96c6\:5417\:ff1f", "Question",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8374716286803703`*^9, 3.837471642553276*^9}},
 CellTags->"i:26",ExpressionUUID->"cd0c7837-8843-42e3-9573-2b8cf9157520"],

Cell[TextData[{
 "\:53ef\:4ee5\:3002",
 ButtonBox["SemanticImport",
  BaseStyle->"Link"],
 " \:901a\:5e38\:662f\:4e00\:4e2a\:5f88\:597d\:7684\:65b9\:5f0f\:3002"
}], "Answer",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8374716463900166`*^9, 
  3.8374716578015027`*^9}},ExpressionUUID->"234d4bc6-9767-4796-9643-\
86c218a6bfdf"],

Cell["\:4ec0\:4e48\:662f\:6570\:636e\:5e93\:ff0c\:5b83\:4eec\:4e0e\:6570\:636e\
\:96c6\:6709\:4ec0\:4e48\:5173\:7cfb\:ff1f", "Question",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8374716679723063`*^9, 
  3.837471672991905*^9}},ExpressionUUID->"597ca1a5-f2e8-4690-8849-\
c0e68532b820"],

Cell[TextData[{
 "\:6570\:636e\:5e93\:662f\:5728\:8ba1\:7b97\:673a\:7cfb\:7edf\:4e2d\:5b58\
\:50a8\:7ed3\:6784\:5316\:6570\:636e\:7684\:4e00\:79cd\:4f20\:7edf\:65b9\:5f0f\
\:3002\:6570\:636e\:5e93\:901a\:5e38\:88ab\:8bbe\:7f6e\:4e3a\:5141\:8bb8\:8bfb\
\:53d6\:548c\:5199\:5165\:6570\:636e\:3002",
 ButtonBox["\:6570\:636e\:96c6",
  BaseStyle->"Link"],
 "\:662f\:4e00\:79cd\:8868\:793a\:53ef\:80fd\:5b58\:50a8\:5728\:6570\:636e\
\:5e93\:4e2d\:7684\:6570\:636e\:7684\:65b9\:5f0f\:ff0c\:7528 Wolfram \:8bed\
\:8a00\:64cd\:4f5c\:8d77\:6765\:975e\:5e38\:5bb9\:6613\:3002"
}], "Answer",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.837471680600299*^9, 3.8374716816145697`*^9}, {
   3.8374717547041216`*^9, 3.8374717894792414`*^9}, 3.837471970628251*^9},
 CellTags->"i:27",ExpressionUUID->"83c38610-07f5-4e8c-a23f-9b571dc741b8"],

Cell["\:6570\:636e\:96c6\:4e2d\:7684\:6570\:636e\:4e0e \
SQL(\:5173\:7cfb\:578b)\:6570\:636e\:5e93\:4e2d\:7684\:6570\:636e\:76f8\:6bd4\
\:5982\:4f55\:ff1f", "Question",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8374718018959923`*^9, 3.8374718214217863`*^9}},
 CellTags->"i:28",ExpressionUUID->"820de64d-7221-4ebf-9f50-83dc224464f6"],

Cell[TextData[{
 "SQL \:6570\:636e\:5e93\:4e25\:683c\:6765\:8bf4\:662f\:57fa\:4e8e\:4ee5\:7279\
\:5b9a\:7c7b\:578b\:7684\:884c\:548c\:5217\:6392\:5217\:7684\:6570\:636e\:8868\
\:683c\:ff0c\:5e76\:901a\:8fc7\[OpenCurlyDoubleQuote]\:5916\:90e8\:952e\:503c\
\[CloseCurlyDoubleQuote]\:6765\:8fde\:63a5\:5176\:4ed6\:6570\:636e\:3002",
 ButtonBox["\:6570\:636e\:96c6",
  BaseStyle->"Link"],
 "\:53ef\:4ee5\:662f\:4efb\:4f55\:7c7b\:578b\:7684\:6570\:636e\:7ec4\:5408\
\:ff0c\:53ef\:4ee5\:5305\:542b\:4efb\:610f\:6570\:91cf\:7684\:5d4c\:5957\:ff0c\
\:4ee5\:53ca\:4efb\:4f55\:5c42\:6b21\:7ed3\:6784\:ff0c\:6709\:70b9\:7c7b\:4f3c\
\:4e8e NoSQL \:6570\:636e\:5e93\:ff0c\:4f46\:7531\:4e8e\:8bed\:8a00\:7684\
\:7b26\:53f7\:6027\:8d28\:ff0c\:4f7f\:5f97\:989d\:5916\:7684\:64cd\:4f5c\:6210\
\:4e3a\:53ef\:80fd\:3002"
}], "Answer",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8374718322199073`*^9, 
  3.837471955971379*^9}},ExpressionUUID->"f81f58b8-f73a-4406-93b3-\
bedf95990fe4"],

Cell["\:6211\:53ef\:4ee5\:4f7f\:7528\:6570\:636e\:96c6\:6765\:4e3a\:5b83\:4eec\
\:5efa\:7acb\:5b9e\:4f53\:548c\:6570\:503c\:5417\:ff1f", "Question",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.837471964068712*^9, 3.8374719646571374`*^9}, {
  3.837472044924179*^9, 3.837472051575392*^9}},
 CellTags->"i:29",ExpressionUUID->"b1612e9a-a6c7-4d24-9766-fe36662a680d"],

Cell[TextData[{
 "\:662f\:7684\:ff0c\:5982\:679c\:4f60\:6709\:4e00\:4e2a\:6570\:636e\:96c6\
\:ff0c\:5b83\:662f\:5173\:8054\:7684\:5173\:8054\:ff0c\:5916\:90e8\:952e\:503c\
\:4e3a\:5b9e\:4f53\:ff0c\:5185\:90e8\:952e\:503c\:662f\:5c5e\:6027\:ff0c\:90a3\
\:4e48\:4f60\:53ea\:9700\:8981\:628a\:8fd9\:4e2a\:653e\:5728 ",
 ButtonBox["EntityStore",
  BaseStyle->"Link"],
 " \:91cc\:9762\:ff0c\:5c31\:5dee\:4e0d\:591a\:662f\:628a\:4e00\:5207\:90fd\
\:8bbe\:7f6e\:597d\:4e86\:3002"
}], "Answer",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8374719970505843`*^9, 
  3.837472047898224*^9}},ExpressionUUID->"1fab5cb1-2882-4854-b86d-\
7d144333623d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["\:6280\:672f\:7b14\:8bb0",
 FontFamily->"Microsoft YaHei",
 FontWeight->"Normal",
 FontSlant->"Oblique"]], "TechNoteSection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369892974498467`*^9, 
  3.8369892981412697`*^9}},ExpressionUUID->"96c75f60-0ea4-43b7-b4f9-\
f39e70328a19"],

Cell[TextData[{
 ButtonBox["\:6570\:636e\:96c6",
  BaseStyle->"Link"],
 "\:652f\:6301\:4e00\:79cd\:65b0\:7684",
 StyleBox["\:7b26\:53f7\:6570\:636e\:5e93\:7ed3\:6784",
  FontWeight->"Bold"],
 "\:ff0c\:5b83\:6982\:62ec\:4e86",
 StyleBox["\:5173\:7cfb\:578b\:6570\:636e\:5e93",
  FontWeight->"Bold"],
 "\:548c",
 StyleBox["\:5c42\:6b21\:578b\:6570\:636e\:5e93",
  FontWeight->"Bold"],
 "\:3002"
}], "TechNote",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.651515120816633*^9, 3.651515125814807*^9}, 
   3.6515155174947033`*^9, {3.8374720612193713`*^9, 3.8374720840037203`*^9}, 
   3.8374721198636513`*^9, {3.837472150367094*^9, 3.8374721505745316`*^9}},
 CellTags->"i:30",ExpressionUUID->"6825b3c1-b69f-4b1d-ad8a-0de3a68bfc37"],

Cell[TextData[{
 ButtonBox["\:6570\:636e\:96c6",
  BaseStyle->"Link"],
 "\:4e2d\:8fd8\:5305\:62ec\:8bb8\:591a\:6211\:4eec\:5c1a\:672a\:8ba8\:8bba\
\:7684\:5176\:5b83\:673a\:5236\:548c\:529f\:80fd\:3002"
}], "TechNote",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.651515120816633*^9, 3.651515125814807*^9}, 
   3.6515155174947033`*^9, {3.8374721608211327`*^9, 
   3.8374722020856323`*^9}},ExpressionUUID->"28c88970-22c7-4455-9f13-\
a60f62d86fa0"],

Cell[TextData[{
 "\:5bf9\:6570\:636e\:96c6\:7684\:67e5\:8be2\:6240\:80fd\:505a\:7684\:4e00\
\:5207\:ff0c\:4e5f\:53ef\:4ee5\:901a\:8fc7\:5728\:5e95\:5c42\:5217\:8868\:548c\
\:5173\:8054\:4e0a\:4f7f\:7528 ",
 ButtonBox["Map",
  BaseStyle->"Link"],
 " \:548c ",
 ButtonBox["Apply",
  BaseStyle->"Link"],
 " \:7b49\:51fd\:6570\:6765\:5b8c\:6210\:ff0c\:4f46\:901a\:5e38\:5bf9\:6570\
\:636e\:96c6\:7684\:67e5\:8be2\:4f1a\:7b80\:5355\:5f97\:591a\:3002"
}], "TechNote",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.651515120816633*^9, 3.651515125814807*^9}, 
   3.6515155174947033`*^9, {3.8374722135230427`*^9, 
   3.8374722508156652`*^9}},ExpressionUUID->"6da132fb-7b52-4c72-a7c0-\
b4f16c66d72d"],

Cell[TextData[{
 "\:60a8\:53ef\:4ee5\:4f7f\:7528 ",
 ButtonBox["DatabaseLink",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/DatabaseLink/guide/\
SQLDatabaseOperations.html"], None},
  ButtonNote->
   "http://reference.wolfram.com/language/DatabaseLink/guide/\
SQLDatabaseOperations.html"],
 " \:6765\:76f4\:63a5\:5c06 Wolfram \:8bed\:8a00\:8fde\:63a5\:5230 SQL \:6570\
\:636e\:5e93\:ff0c\:5e76\:4f7f\:7528 SQL \:8bed\:6cd5\:8fdb\:884c\:67e5\:8be2\
\:3002"
}], "TechNote",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.651515120816633*^9, 3.651515125814807*^9}, 
   3.6515155174947033`*^9, {3.8374722606853056`*^9, 3.8374723018842506`*^9}},
 CellTags->"i:31",ExpressionUUID->"08bdf09f-2438-45e7-8c9c-c7255c360d05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["\:63a2\:7d22\:66f4\:591a",
 FontFamily->"Microsoft YaHei",
 FontWeight->"Normal",
 FontSlant->"Oblique"]], "MoreExploreSection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.836977820142336*^9, 
  3.8369778210619183`*^9}},ExpressionUUID->"dab02fe5-bcf4-4d8c-9d30-\
04d00a49754c"],

Cell[TextData[ButtonBox["Wolfram \:8bed\:8a00\:4e2d\:7684\:8ba1\:7b97\:7ed3\
\:6784\:5316\:6570\:636e\:96c6\:6307\:5357\[NonBreakingSpace]\[RightGuillemet]\
",
 BaseStyle->"Link",
 ButtonData->"paclet:guide/ComputationWithStructuredDatasets"]], "MoreExplore",\

 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellChangeTimes->{{3.8369778037535343`*^9, 3.836977816709057*^9}},
 CellTags->
  "LastCellOfAPage",ExpressionUUID->"47d13a19-2a49-4e9e-8faa-f6d1cfea35bc"]
}, Open  ]]
},
Saveable->False,
WindowToolbars->{},
BlinkingCellInsertionPoint->False,
CellInsertionPointCell->None,
WindowSize->{1920., 1017.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
WindowPersistentStyles->{
 WindowFrame, WindowMargins, WindowSize, Magnification},
WindowTitle->"\:6570\:636e\:96c6 - Wolfram \:8bed\:8a00\:5165\:95e8\:4ecb\
\:7ecd \:7ffb\:8bd1 By \:90d1\:660c\:76db",
DockedCells->{
  Cell[
   BoxData[
    TagBox[
     GridBox[{{
        TemplateBox[{
         "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "\"\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\"", 
          GraphicsBox[
           TagBox[
            RasterBox[CompressedData["
1:eJztl01IVFEUxyctMFzUysjIyUDCTauiIJFM6ENpM4NEtJrBUaSYZMYPhCRm
rYuoICgiW0VEBVIUEbTNEMTAIqRsk6JGCVFBHx7//+4JLo/36DqvB4Ie+Mk7
7+t3733nHpzq9NlEW0ksFsuX4U8i1duQy6X6kpuRtGTzHe3ZTOuxbFemPZPb
ny7FyZ2gEqwHInICfJToguOIReywPVHHlYDzcY4hJHZ486giyBOXtfms5Pms
Bs9zUBDTow6DJOgBT8DP/+B5CepAPbgqZm+zT70Bt9VXCx6H8DwE28Gw5ufB
IT2eA1N6PKquC0V4xtUxqfkE6ARD4BHYAx5Y938Gu8GdZXq4VsNWngIfwDzY
Aa6Bm55nOKYq8NXRw29eb+Uz4JSVd4Nn4IbPs2fARUdPQcfLWAQJ8Mq6Tkdd
gGcEHHT0sHYn9Jg1dcnnnhf6vnee8xzXVkcP9wdr97eY7z0NnlrX74qpxffg
iOZ2VDp6kvqOe6AVXAb7xNQB462YNfsCfoBzoE1MzTEqHD096mgE98WsEec4
Jqamvvk8cx2kwWuw19HDXnIAbNAx03ka9IO8mO+3ScyebRZTi01i1rqguHjY
r3aJWaugOA5O6vEC+K6ebWDW0cNgv6oBnwKus87KwKDmv8BRMOBz77/6G/sV
e8lkwHWuTwm4pQ7WzGIRHgb7FXsJ9/mI5z2si42gXMw8/ByuHgb7FXsJ9yX3
IPfHFjF1xTl5v0exnrCx5gnn+fu7JC7h/z/0Y52+P+rfWX9iCXVYErg=
             "], {{0,
              34}, {26, 0}}, {0, 255}, ColorFunction -> RGBColor], 
            BoxForm`ImageTag[
            "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
             1], Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
           ImageSize -> Magnification[1], ImageSizeRaw -> {26, 34}, 
           PlotRange -> {{0, 26}, {0, 34}}], 
          GraphicsBox[
           TagBox[
            RasterBox[CompressedData["
1:eJztXUuS47gRLX8WXtYRaJ+gl17SS+8U4/CeM+H2hDdtRY8jHF6ZR9AReATt
qrwyj6AjcO+ZaN0gLZCZwEMiQVJqSd2qwYvgdBGf/AF4+LFqfvvd37/56y+f
np5++M3pP998+88/fPz47b/+9Hx6+fOHH/72/Yf3f/njh3+8//79x99/96tT
4u9Oz79/8fT066cY9NNLSz++9uPz0+uOPv3n3Zj+40vj083npZktd5IVdJzk
hvT9pHOq78uc9I75rD/KA31n6/z03+dY1lRX64jkQh3LLpevbWI7t6N/Esv/
vdSJDpcOdpr5M74lvk/tt6VPL1VG3j7v79Qedr2XLlevoKDgsTHx8Cud+OTA
XDKM7yfOijnmlB+XC9zvuGfMm+HhqfwR8sjLY54ddbJuw05yesL7Sp2qHtY1
4+F8VjZ4Xajf2/q6Gd/HuUDH6OTvZOM21jHZmm0TsTvH/d531WZOn5o3x3lL
Ys22pnFN87Bezs6CgoLHhFsnMqd1IW1cz26TsrO8nOdSX8bgO+CwZlmHzf2L
OoXbYE08y/2e80AXcDGkbVEuzEXbIAvmA9S/kvuz+aIL5yeJHbTlVHbcQwzT
/BDncT5l6xXuLyh4k4C1Xfb8wZe9Bfcrnr0J949r43H9vV9bl2Oyn2w88Te/
Yx0+DxmiOiddiSyDk2/B/cEGFWPm/GkOeDmavo5zQ5wnaYX7CwreJvy61HGb
cc7uy63g/rEMPLEeg/tl7cxrZa/DpStZ2TOfFTo1Vy5yP88Zk02vGzkTic54
prjx/JDuFWJ501nXXCwS/Wev+9m+aN/Bdrk8dUYVZE1zv7n/4vScHQUFBY8L
f2fpz99PP1v8vob71ROV8efSruxYfj9xojujVuf92cfg/mWdPf88yDp9ed0f
8uXMZJIxroP5zN3ar6Tn6cGOsK5efd6f8S1/3n/6Nzrbirl7sj852yFuk87P
Zfzzmr1VQUHBY2M6+x/HPJnnCddY9yOXjevmkz7kqhut+xPZS9zv1/juvnvc
N3STTv5+R8XCsi+2Y+Joyy67fLijxifxXbhf5uzkeyZ/zt/yt0ADzrXs06RH
fJ7uKI7TnXfh/oKCnwvgDiD67u8W5/1JmZuc92vOndbus9wvd+D+TEq+ZQ3v
wpNTebkTMO5S4b4gZ5dp9xlnPp7/cR7F73v0g9/K4v7Ff4c17VEK9xcUvE2M
vJR828dcpc/m3wL3e05fvsPktW/0jY7n02m9PSS6FP+infHvJlyZ+4352p/h
671AWi5wv/+2R/Y5hfsLCt4icKzD2cpe3xmOZS8484nuIm/E/efqpJXfLkIc
hihdvtnP7YvcuYq/Ww1nM7EM/v5I2y5zzCV3vXJeF/YCg7Yx8kv2LMj9MofI
7/YV7i8oeJOY1vhwxh+e5JvPS+5643vGG3H/mTr9efYi9/vf5+qUHebc6O0P
c4M8e+Mc3rzLDWcvF3C/P6fnuSdno5xX+d/Lm7mnKNxfUPDmodeeBZdjXD+P
sYw5v6CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoOBr
BxE9n57aPV/aloLr4dSeFbdr9m/CXlmf60fVPXTdGi5mHLvqS9uyhNz45fTm
9LTu3y9jXcFacHu1/NRXktlmnprzXb8ZcQ19Pxdw3K7WTtcG2+bQ30nf4fQc
7zXX3BIuZhy79kryKhl3Kt1K23J6tVK2OX7Bh69mbFv+FkzgeVpg/r9bL5CZ
Q8v5D8n99+S1jP4W43hm3Zvbfivuz/nN6Y7/b/57dCcdwzX6K/T9VqXfgvuj
MYZpBPPluWPRGr9KdkdfyXz8iDxzLzi+5/Ac+d/PHkfQB7bcT+SpOP/huJ+m
PflDcj/Eu7+NZV7PXbn/nrhWf70X97NMGdM1v+M6b8tp0q+T/+/cCh/ISrsG
h1wLj8Yz9wJN5z3C+x3/3KgyY7/g8XeE8vn/z1dAncnP7Rk3xOsrRof9SHiF
6x/gXc4Zxb6dkvuO4v1oT/G6R/JQhvt3w/mNsmuUAbL3Kk/rF50tlNnyv3tV
VvQk8SWDA0HeJba3UFfi2UIbYb2Dtol9HyBf4thr+1a0/Vbpk3bdUYoWZRP0
M8Nu3dai38ntVLmEs9jHAylAvu6zkT4lC9tI+yKx2yt5jZJh6TO5FmQKz6O/
e7DJv4PPOF6cPh1jHweK+4H2S2yUdnT+yzkz1hkobifpmxsK3HNkeysKYy6q
Z8TA25nJrykdv63hK/ogequZmCFqMtZfZI9nHIsSr0bZvKW0H3nZNMW3W5Cx
4bwOftZcRErG0SqXqROt+4146jEkcPZIv+gytmC/ORpp77hOBfk9hfY5gFxs
syPIGYz2OHL5HeftVLqgUXajjcJrggr6j9drxHWO+0XHEWUs2N5COnG5DduB
aVhfbMW4DqT4SNu30PYt1JUz/IEC9+vYNcr3WsVvzu6aYuA4S//+Xcr9PYUx
Vis5EoOR3wxZDZTRvmjewHg+G/51YFevdam4SnsPYOfR6lOUtiv6LmPK4n4d
I91G6HMFaRi33rBdxwPXN6u5aCa/A3nYBtKndH/BdulADtoXjQUK9/g5H1tD
jo59ZdiD+a68tDPOix3EqTb8dn0SuUivtYntdGU8Ry/FWwPyrfEvfjT8/sw2
Hw25so4R3h0otNWg5EgZbCdp43fqfc96fd80bPZtB3Zu4F307SBN0Km6En/x
p9V1Vfk57u8usB25H9dcYheuBSVGnRH7Z1Wvh3o5WzBN+qbEYfTD0O39Vr7X
/C593rJbxoXo92sh8MXkEMtmpa+DNOl/yTyiYq59ETt7CuM8GrOgbwv1RJ81
12xQptgKunCtKjokFr3hp+wVrDbMxUig98IbitcRWp7E6cD5yE/S18W/41MG
lk0q38nG8St9uNV+UeifjREjgV47VUoO1rHGs6uLY1F4sTbigvviDuo74LgU
e5GTxL4NxecoTS52ZLRTLt4cx1YeyLf6jqCH52iVMWKH8Yx4At4PIFfGS63K
1DO6TP6E2O4hntomwbOqJzIP/C7xrzJxneP+s22nzFwDduCYiPq7jrOSl/hu
2ELWe8bvtdwv7Tpn99wYjOKTszmnf6WsJe5vjTTxD/di0RhBG6C+jFVXRniy
ARsaUnMH6MT5Rfw/qvfV3J+xbUfqPG0uTpSO2zV9Zzafy1jjt13ha2/YJnEU
v/ReCetYPjo+30I7aHsiHieY3/l9y++yj+lJ7Q8pPmPRwHVTEjsrzcqnM877
oU6vn5xeupz75dHr/npGV44/8cynA1lZu1V935/Fzpm43or7W5U+GDJ1H/sa
ud/a22q7H5n7BVZfrjL6JCbST/H8we/dDJ1Nzn8rHksxUmm4Lu4hJkvcr+Px
2dxP8ZnPTrfDgq89pAknu7EjXHtYqBP5SBPvH0BOS2EsYhwkrYc4bpRM5H55
RE8H9Vt+pC9k19or4ymoM/lWPMWfjVXH0kvruL/D94zcc7jf2WmdidUzNmXj
BeWlzc2zAlW2hbQk1mfYvsRDuEeMzkUgrp1RJvGdwt5X1iXCI7iX9z5k7OlU
uo69xZ9ipz6vQBuX+BrP2a39eGPo6zKyTF0Z2zXXJby8BKjjoM9PPf/O2a9t
ps/n/tbQoeXdnPspvneQ9brm47Xc731iO7cUjzWpg/OBnKVpXdhOms/ceHHj
WOb/PcVj34/1mZhIu+tvNyIOtmK3Nt6kznwonK/WUEbSJHbjOSyFfdhGyzXi
jW2gY4W6XPmN2GXUqWd04fjvKb3LOpD6bmRNvCjufw7VTFw/l/u17Tnuxz1h
C+W8Hoq/F9zN+C79aU9qH2vE/8i6OoL7UiXb6ZL92pxNObvP5n6ly/nTqnrO
1i3F34HUGTlbKOPHLa3jfvFP4iRjpJmxG2Ng3YNondhXdhS+sSEK/QbHQqPr
WXGbsWlHcDdqlJmLx2rup5iHWq6LY8/Jxn7W5nSQ3YfEhx2F71twnYAxi3y2
dFE6XqSM9IGBfxZdlWGLq79hfXKXKWN7MGIl/nczbZekZeKtgbGaW3MIjmTw
HLwvcr+KF8IaB/Wcj6S+veI0HO/OXpnL+zlZSq7Umf3Gmi7k/hnbTe43/CKr
HKXfkUkc0fdWyfD9GcrgXhfL1Zxfq7x2xnfLbuvs2rLRp62IR2XEQNDMyHG+
JvdCtIL7M3aMZxUz+qJ5PCNno+pY40XfCUXjl87jfjzzIYI7OChzbe7XaJVM
iWVuLb523a8x3skauhyk76CPOA4GsvsFzhsI/J0NXebA6RWpeQnkRnn8c63K
JGlWvvHgPOj0bLUNbJ9LT85+tF7LD8r8XRQu2/Cj71yljt6jJT7SNJYaZccG
5Ro2ZeNFExdI+2bPe5S/FaTVa2ynMOd72y15hj6JWa6MtJfpO5RpQW8utjWX
S3RBf9lQ/O1E5PuS3RT+Fo3ui+Z4UHU3FL5bxnhLDLJxMmwQ+2ScJf3W6pfK
v+z5qOGvtrmy0g0dpk96/KIeVS7X1lK/Ql8N+7LxyOm09BsPyh3HhZJZqXe0
zepDbgwPFP4+hoxpUnWlD1VaF8j2bavjQGHe6Sic0yfraCi7pRV9suC+4H4g
87w/4ygoKHgcUNhb4f2YnMsTLawpztTVa5kUzhH7a+kpuC0o3vc2X9qegoKC
80Hp78Phmr+7si48q5O9hqwdrzbHFNwWFL61rr60LQUFBZeDwt9N7Sl8O1nf
SFdD4XuijtQ3RXP4P6lulfg=
             "], {{0, 34}, {383, 0}}, {0, 255}, 
             ColorFunction -> RGBColor], 
            BoxForm`ImageTag[
            "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
             1], Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
           ImageSize -> Magnification[1], ImageSizeRaw -> {383, 34}, 
           PlotRange -> {{0, 383}, {0, 34}}]}, "RowWithSeparators"], 
        PaneBox[
         StyleBox["\[VeryThinSpace]", ShowStringCharacters -> False], 
         Alignment -> Right, ImageSize -> {174, 47}], 
        PaneBox[
         PaneBox[
          TemplateBox[{"\[ThinSpace]", "\" \"", 
            TagBox[
             TooltipBox[
              PaneSelectorBox[{False -> ButtonBox[
                  PaneBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAPiDmBmIUBO/j//z8jEDcA8W8g3oBFnhmIZ/9HgE9o8mxAvBZJ/hsQuyPJ
8wPxfiT5N0BsjiQvCsTnkOSfALEWkrwSEN9Bkr8OxDJobniAJP8ZZCYWfxCj
RpGQXcS4mVi/ExuGxMYFmlp4nAIAG14fWQ==
                    "], {{0, 14}, {9, 
                    0}}, {0, 255}, ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {9, 14}, PlotRange -> {{0, 9}, {0, 14}}, 
                    ImageSize -> Magnification[1]], ImageSize -> {35, 30}, 
                   Alignment -> Center], 
                  ButtonFunction :> (
                   NotebookLocate[{"EIWL2-44-importing-and-exporting.nb", ""},
                     FrontEnd`HistoryData :> {
                    EvaluationNotebook[]}]& ), Enabled -> True, Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], True -> 
                ButtonBox[
                  PaneBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAPiDmBmIUBO/j//z8jEDcA8W8g3oBFnhmIZ/9HgE9o8mxAvBZJ/hsQuyPJ
8wPxfiT5N0BsjiQvCsTnkOSfALEWkrwSEN9Bkr8OxDJobniAJP8ZZCYWfxCj
RpGQXcS4mVi/ExuGxMYFmlp4nAIAG14fWQ==
                    "], {{0, 14}, {9, 
                    0}}, {0, 255}, ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {9, 14}, PlotRange -> {{0, 9}, {0, 14}}, 
                    ImageSize -> Magnification[1]], ImageSize -> {35, 30}, 
                   Alignment -> Center], 
                  ButtonFunction :> (
                   NotebookLocate[{"EIWL2-44-importing-and-exporting.nb", ""},
                     FrontEnd`HistoryData :> {
                    EvaluationNotebook[]}]& ), Enabled -> True, Appearance -> 
                  None, Background -> RGBColor[0.835294, 0.364706, 0.0196078],
                   Evaluator -> Automatic, Method -> "Preemptive"]}, 
               Dynamic[
                CurrentValue["MouseOver"]], ImageSize -> Automatic, 
               FrameMargins -> 0], "\"\:5bfc\:5165\:4e0e\:5bfc\:51fa\"", 
              TooltipDelay -> 0.15, LabelStyle -> "TextStyling"], 
             Annotation[#, "Importing and Exporting", "Tooltip"]& ], 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {5, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[5], Selectable -> False], 
            TagBox[
             TooltipBox[
              PaneSelectorBox[{False -> ButtonBox[
                  PaneBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAfiDmBmAWI////vwKIfwFxMQMOAJT7+R8B6nGoSf+PCjpwqMskUl0SEP9F
UtcHxIxY1EWjqZuOQ10Mmr2TcNj7BEnNP1LNIeQeIDsZn78IhQ8x4fwfNb4a
cPgTFu8l2ORBAAC+1hnm
                    "], {{0, 15}, {9, 0}}, {0, 255}, 
                    ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {9, 15}, PlotRange -> {{0, 9}, {0, 15}}, 
                    ImageSize -> Magnification[1]], ImageSize -> {35, 30}, 
                   Alignment -> Center], 
                  ButtonFunction :> (
                   NotebookLocate[{"EIWL2-46-writing-good-code.nb", ""}, 
                    FrontEnd`HistoryData :> {
                    EvaluationNotebook[]}]& ), Appearance -> None, Evaluator -> 
                  Automatic, Method -> "Preemptive"], True -> ButtonBox[
                  PaneBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAfiDmBmAWI////vwKIfwFxMQMOAJT7+R8B6nGoSf+PCjpwqMskUl0SEP9F
UtcHxIxY1EWjqZuOQ10Mmr2TcNj7BEnNP1LNIeQeIDsZn78IhQ8x4fwfNb4a
cPgTFu8l2ORBAAC+1hnm
                    "], {{0, 15}, {9, 0}}, {0, 255}, 
                    ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {9, 15}, PlotRange -> {{0, 9}, {0, 15}}, 
                    ImageSize -> Magnification[1]], ImageSize -> {35, 30}, 
                   Alignment -> Center], 
                  ButtonFunction :> (
                   NotebookLocate[{"EIWL2-46-writing-good-code.nb", ""}, 
                    FrontEnd`HistoryData :> {
                    EvaluationNotebook[]}]& ), Appearance -> None, Background -> 
                  RGBColor[0.835294, 0.364706, 0.0196078], Evaluator -> 
                  Automatic, Method -> "Preemptive"]}, 
               Dynamic[
                CurrentValue["MouseOver"]], ImageSize -> Automatic, 
               FrameMargins -> 0], 
              "\"\:7f16\:5199\:4f18\:79c0\:7684\:4ee3\:7801\"", TooltipDelay -> 
              0.15, LabelStyle -> "TextStyling"], 
             Annotation[#, "Writing Good Code", "Tooltip"]& ]}, 
           "RowWithSeparators"], Alignment -> Right], ImageSize -> {100, 30}, 
         FrameMargins -> {{0, 6}, {0, 0}}, Alignment -> Right], 
        ActionMenuBox[
         PaneSelectorBox[{True -> PanelBox[
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UBAkIQ3ELED8////Jf/pA0D2/KWTXSB7ZtPBPrA9DKOAYgAMR1Eg9gPiABpi
P6g912mcLmAAZM9XOtkFsicKiNcD8QYaYpD5UQOdXoYD+E/HMooO9iDbR7c6
BQDxtyEt
                "], {{0, 16}, {27, 0}}, {0, 255}, ColorFunction -> 
                RGBColor], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                Magnification -> 1], Selectable -> False], DefaultBaseStyle -> 
              "ImageGraphics", ImageSize -> Magnification[1], 
              ImageSizeRaw -> {27, 16}, PlotRange -> {{0, 27}, {0, 16}}], 
             Appearance -> None, Background -> 
             RGBColor[0.835294, 0.364706, 0.0196078], ImageSize -> {35, 30}, 
             Alignment -> Center], False -> PanelBox[
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UBAkIQ3ELED8////Jf/pA0D2/KWTXSB7ZtPBPrA9DKOAYgAMR1Eg9gPiABpi
P6g912mcLmAAZM9XOtkFsicKiNcD8QYaYpD5UQOdXoYD+E/HMooO9iDbR7c6
BQDxtyEt
                "], {{0, 16}, {27, 0}}, {0, 255}, ColorFunction -> 
                RGBColor], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                Magnification -> 1], Selectable -> False], DefaultBaseStyle -> 
              "ImageGraphics", ImageSize -> Magnification[1], 
              ImageSizeRaw -> {27, 16}, PlotRange -> {{0, 27}, {0, 16}}], 
             Appearance -> None, Background -> 
             RGBColor[0.952941, 0.509804, 0], ImageSize -> {35, 30}, 
             Alignment -> Center]}, 
          Dynamic[
           CurrentValue["MouseOver"]]], {
         "\:524d\:8a00" :> 
          NotebookLocate[{"EIWL2-0a-preface.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\:4ec0\:4e48\:662f Wolfram \:8bed\:8a00?" :> 
          NotebookLocate[{"EIWL2-0b-what-is-the-wolfram-language.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "\:4f7f\:7528 Wolfram \:8bed\:8a00" :> 
          NotebookLocate[{
            "EIWL2-0c-practicalities-of-using-the-wolfram-language.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "\:5176\:5b83\:8d44\:6e90" :> 
          NotebookLocate[{"EIWL2-0d-other-resources.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]1\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\:8d77\:6b65\:ff1a\:521d\:7b49\:6570\:5b66" :> 
          NotebookLocate[{
            "EIWL2-01-starting-out-elementary-arithmetic.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]2\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\:51fd\:6570\:4ecb\:7ecd" :> 
          NotebookLocate[{"EIWL2-02-introducing-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]3\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\:521d\:8bc6\:5217\:8868" :> 
          NotebookLocate[{"EIWL2-03-first-look-at-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]4\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\:663e\:793a\:5217\:8868" :> 
          NotebookLocate[{"EIWL2-04-displaying-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]5\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\:64cd\:4f5c\:5217\:8868" :> 
          NotebookLocate[{"EIWL2-05-operations-on-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]6\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\:521b\:5efa\:8868" :> 
          NotebookLocate[{"EIWL2-06-making-tables.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]7\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\:989c\:8272\:548c\:6837\:5f0f" :> 
          NotebookLocate[{"EIWL2-07-colors-and-styles.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]8\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\:57fa\:672c\:56fe\:5f62\:5bf9\:8c61" :> 
          NotebookLocate[{"EIWL2-08-basic-graphics-objects.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]9\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\:4ea4\:4e92\:5f0f\:64cd\:4f5c" :> 
          NotebookLocate[{"EIWL2-09-interactive-manipulation.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "10\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:56fe\:50cf\
" :> NotebookLocate[{"EIWL2-10-images.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "11\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:5b57\:7b26\
\:4e32\:4e0e\:6587\:672c" :> 
          NotebookLocate[{"EIWL2-11-strings-and-text.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "12\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:58f0\:97f3\
" :> NotebookLocate[{"EIWL2-12-sound.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "13\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:6570\:7ec4\
\:ff0c\:6216\:5217\:8868\:7684\:5217\:8868" :> 
          NotebookLocate[{"EIWL2-13-arrays-or-lists-of-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "14\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:5750\:6807\
\:4e0e\:56fe\:5f62" :> 
          NotebookLocate[{"EIWL2-14-coordinates-and-graphics.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "15\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Wolfram \
\:8bed\:8a00\:7684\:8303\:56f4" :> 
          NotebookLocate[{
            "EIWL2-15-the-scope-of-the-wolfram-language.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "16\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:771f\:5b9e\
\:4e16\:754c\:7684\:6570\:636e" :> 
          NotebookLocate[{"EIWL2-16-real-world-data.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "17\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:5355\:4f4d\
" :> NotebookLocate[{"EIWL2-17-units.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "18\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:5730\:7406\
\:8ba1\:7b97" :> 
          NotebookLocate[{"EIWL2-18-geocomputation.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "19\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:65e5\:671f\
\:548c\:65f6\:95f4" :> 
          NotebookLocate[{"EIWL2-19-dates-and-times.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "20\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:9009\:9879\
" :> NotebookLocate[{"EIWL2-20-options.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "21\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:56fe\:548c\
\:7f51\:7edc" :> 
          NotebookLocate[{"EIWL2-21-graphs-and-networks.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "22\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:673a\:5668\
\:5b66\:4e60" :> 
          NotebookLocate[{"EIWL2-22-machine-learning.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "23\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:518d\:8c08\
\:6570\:5b57" :> 
          NotebookLocate[{"EIWL2-23-more-about-numbers.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "24\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:66f4\:591a\
\:53ef\:89c6\:5316\:7684\:5f62\:5f0f" :> 
          NotebookLocate[{"EIWL2-24-more-forms-of-visualization.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "25\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:5e94\:7528\
\:51fd\:6570\:7684\:65b9\:5f0f" :> 
          NotebookLocate[{"EIWL2-25-ways-to-apply-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "26\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:7eaf\:533f\
\:540d\:51fd\:6570" :> 
          NotebookLocate[{"EIWL2-26-pure-anonymous-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "27\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:91cd\:590d\
\:5e94\:7528\:51fd\:6570" :> 
          NotebookLocate[{"EIWL2-27-applying-functions-repeatedly.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "28\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:6d4b\:8bd5\
\:4e0e\:6761\:4ef6" :> 
          NotebookLocate[{"EIWL2-28-tests-and-conditionals.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "29\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:518d\:8c08\
\:7eaf\:51fd\:6570" :> 
          NotebookLocate[{"EIWL2-29-more-about-pure-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "30\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:91cd\:65b0\
\:6392\:5217\:5217\:8868" :> 
          NotebookLocate[{"EIWL2-30-rearranging-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "31\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:63d0\:53d6\
\:5217\:8868\:5143\:7d20" :> 
          NotebookLocate[{"EIWL2-31-parts-of-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "32\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:6a21\:5f0f\
" :> NotebookLocate[{"EIWL2-32-patterns.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "33\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:8868\:8fbe\
\:5f0f\:53ca\:5176\:7ed3\:6784" :> 
          NotebookLocate[{"EIWL2-33-expressions-and-their-structure.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "34\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:5173\:8054\
" :> NotebookLocate[{"EIWL2-34-associations.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "35\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:7406\:89e3\
\:81ea\:7136\:8bed\:8a00" :> 
          NotebookLocate[{"EIWL2-35-natural-language-understanding.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "36\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:521b\:5efa\
\:7f51\:7ad9\:548c\:5e94\:7528\:7a0b\:5e8f" :> 
          NotebookLocate[{"EIWL2-36-creating-websites-and-apps.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "37\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:5e03\:5c40\
\:4e0e\:663e\:793a" :> 
          NotebookLocate[{"EIWL2-37-layout-and-display.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          
          "38\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:4e3a\:5bf9\
\:8c61\:6307\:6d3e\:540d\:79f0" :> 
          NotebookLocate[{"EIWL2-38-assigning-names-to-things.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "39\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:7acb\:5373\
\:8d4b\:503c\:4e0e\:5ef6\:8fdf\:8d4b\:503c" :> 
          NotebookLocate[{"EIWL2-39-immediate-and-delayed-values.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "40\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:5b9a\:4e49\
\:4f60\:81ea\:5df1\:7684\:51fd\:6570" :> 
          NotebookLocate[{"EIWL2-40-defining-your-own-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "41\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:518d\:8c08\
\:6a21\:5f0f" :> 
          NotebookLocate[{"EIWL2-41-more-about-patterns.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "42\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:5b57\:7b26\
\:4e32\:6a21\:5f0f\:4e0e\:6a21\:677f" :> 
          NotebookLocate[{"EIWL2-42-string-patterns-and-templates.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "43\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:5b58\:50a8\
\:5bf9\:8c61" :> 
          NotebookLocate[{"EIWL2-43-storing-things.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "44\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:5bfc\:5165\
\:4e0e\:5bfc\:51fa" :> 
          NotebookLocate[{"EIWL2-44-importing-and-exporting.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "45\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:6570\:636e\
\:96c6" :> NotebookLocate[{"EIWL2-45-datasets.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "46\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:7f16\:5199\
\:4f18\:79c0\:7684\:4ee3\:7801" :> 
          NotebookLocate[{"EIWL2-46-writing-good-code.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "47\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\:8c03\:8bd5\
\:4f60\:7684\:4ee3\:7801" :> 
          NotebookLocate[{"EIWL2-47-debugging-your-code.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\:8fd8\:6709\:4ec0\:4e48\:6211\:4eec\:5c1a\:672a\:8bba\:53ca" :> 
          NotebookLocate[{"EIWL2-what-we-havent-discussed.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\:540e\:8bb0\:ff1a\:6210\:4e3a\:4e00\:4e2a\:7a0b\:5e8f\:5458" :> 
          NotebookLocate[{"EIWL2-being-a-programmer.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "\:4e60\:9898\:7b54\:6848" :> 
          NotebookLocate[{"EIWL2-answers-to-exercises.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "\:7d22\:5f15" :> 
          NotebookLocate[{"EIWL2-book-index.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}]}, Appearance -> None]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
   "Text", ShowCellBracket -> False, CellFrame -> {{0, 0}, {3, 0}}, 
   Selectable -> False, CellFrameColor -> 
   RGBColor[0.835294, 0.364706, 0.0196078], CellMargins -> {{0, 0}, {0, -1}}, 
   CellFrameMargins -> {{27, 0}, {1, 7}}, Background -> 
   RGBColor[0.952941, 0.509804, 0], CellTags -> "DockedCellLogoCell"], 
  Cell["\:7b2c\:4e8c\:7248", "Text", FontFamily -> "Source Sans Pro", 
   CellFrame -> {{0, 0}, {3, 0}}, ShowCellBracket -> False, 
   CellMargins -> {{0, 0}, {-1, -1}}, CellFrameMargins -> {{66, 0}, {2, 4}}, 
   CellFrameColor -> RGBColor[0.952941, 0.509804, 0], FontSize -> 10, 
   FontTracking -> "Extended", FontColor -> RGBColor[1, 0.929412, 0.721569], 
   Background -> RGBColor[0.862745, 0.309804, 0], CellTags -> 
   "DockedCellLogoCell"]},
PrintingStartingPageNumber->359,
PageHeaders->{{
   Cell[
    TextData[{
      StyleBox[
       CounterBox["Page"], "PageNumber"], 
      StyleBox[
      "    An Elementary Introduction to the Wolfram Language", "Header"]}], 
    "Header", CellMargins -> {{37, Inherited}, {Inherited, Inherited}}], None,
    None}, {None, None, 
   Cell[
    TextData[{
      StyleBox[
       CounterBox["Section"], "Header"], 
      StyleBox[" | Datasets \[LongDash] wolfr.am/eiwl-", "Header"], 
      StyleBox[
       CounterBox["Section"], "Header"], 
      StyleBox["    ", "Header"], 
      StyleBox[
       CounterBox["Page"], "PageNumber"]}], "Header", 
    CellMargins -> {{Inherited, 17}, {Inherited, Inherited}}]}},
PrintingOptions->{"FirstPageHeader"->True},
ShowCellBracket->Automatic,
ShowAutoSpellCheck->False,
ShowPredictiveInterface->False,
ShowSyntaxStyles->False,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (2021\:5e742\:67085\
\:65e5)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
      "Style Environments", "Section", 
       CellChangeTimes -> {{3.64661165091824*^9, 3.646611654013329*^9}, 
         3.6485723794335403`*^9, 3.651347081728628*^9, 3.651347179462186*^9, 
         3.651347384135805*^9, 3.651348171662589*^9}], 
      Cell[
       StyleData[All, "Working"], CellInsertionPointCell -> 
       FEPrivate`FrontEndResource["FEExpressions", "CellInsertionMenu"], 
       CreateCellID -> True, $CellContext`GhostCellInEmptyNotebook -> False], 
      
      Cell[
       StyleData[All, "Printout"], 
       PrintingOptions -> {
        "PageSize" -> {504, 720}, "PrintRegistrationMarks" -> True}, 
       Magnification -> 0.6]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Headers and Footers", "Section"], 
      Cell[
       StyleData["Header"], StyleMenuListing -> None, FontFamily -> "Verdana",
        FontSize -> 7, FontSlant -> "Plain", FontColor -> GrayLevel[0.6]], 
      Cell[
       StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
       StyleMenuListing -> None, FontFamily -> "Verdana", FontSize -> 7, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       GrayLevel[0]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "WPL Specific", "Section", 
       CellChangeTimes -> {{3.6556608433734913`*^9, 3.6556608489412746`*^9}}], 
      Cell[
       StyleData["Link"], FontFamily -> "Source Sans Pro", FontSize :> 
       If[CurrentValue[
           EvaluationCell[], "FontFamily"] === "Source Sans Pro", Inherited, 
         If[CurrentValue[
            EvaluationCell[], "FontFamily"] === "WolframCodeSans", Inherited, 
          Inherited 0.9]], FontColor -> GrayLevel[0]], 
      Cell[
       StyleData["CodeLink"], 
       ButtonBoxOptions -> {
        Appearance -> None, ButtonFunction :> (FEPrivate`FrontEndExecute[
           FrontEndToken["OpenHelpLink", {
             Part[#, 1], Null}]]& ), ButtonSource -> ButtonContents, 
         Evaluator -> None, Method -> "Preemptive"}]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Custom Styles", "Section", 
       CellChangeTimes -> {{3.646611660445352*^9, 3.646611669493331*^9}}], 
      Cell[
       StyleData["Notebook"], PageWidth :> 700, 
       PrintingOptions -> {
        "InnerOuterMargins" -> {35, 16}, "PaperOrientation" -> "Portrait", 
         "PaperSize" -> {504, 720}, 
         "PrintingMargins" -> {{20, 20}, {54, 54}}}, CellLabelAutoDelete -> 
       False, ShowSyntaxStyles -> True, 
       AutoStyleOptions -> {
        "FormattingErrorTooltips" -> False, "HighlightComments" -> False, 
         "HighlightEmphasizedSyntaxErrors" -> False, 
         "HighlightExcessArguments" -> False, "HighlightFormattingErrors" -> 
         False, "HighlightGlobalToLocalScopeConflicts" -> False, 
         "HighlightGraphicsCompatibilityProblems" -> False, 
         "HighlightLocalScopeConflicts" -> False, "HighlightMissingArguments" -> 
         False, "HighlightNoKernelPresent" -> False, 
         "HighlightOrderOfEvaluationConflicts" -> False, "HighlightStrings" -> 
         True, "HighlightSymbolContexts" -> False, "HighlightSymbolShadowing" -> 
         False, "HighlightSyntaxErrors" -> False, "HighlightUndefinedSymbols" -> 
         False, "HighlightUnknownOptions" -> False, 
         "HighlightUnwantedAssignments" -> False}, MenuSortingValue -> None, 
       GraphicsBoxOptions -> {ImageSize -> 240}, 
       Graphics3DBoxOptions -> {ImageSize -> 240}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Title"], CellMargins -> {{64, Inherited}, {50, 72}}, 
          MenuCommandKey :> None, FontFamily -> "Verdana", FontSize -> 42, 
          FontWeight -> "Bold", FontColor -> GrayLevel[0.4]], 
         Cell[
          StyleData["Title", "Printout"], 
          CellMargins -> {{64, Inherited}, {50, 72}}]}, Closed]], 
      Cell[
       StyleData["Chapter"], MenuCommandKey :> None], 
      Cell[
       StyleData["Subchapter"], MenuCommandKey :> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> 
          Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[
               0.9019607843137255, 0.4117647058823529, 0.027450980392156862`],
               FontFamily -> "Courier", FontSize -> 36, FontWeight -> Plain]],
             "SectionNumber"], CellMargins -> {{96, Inherited}, {12, 44}}, 
          Evaluatable -> True, CellGroupingRules -> {"SectionGrouping", 60}, 
          PageBreakAbove -> True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["Section", "Printout"], 
          CellMargins -> {{96, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionDoubleDigit"], CellFrame -> {{0, 0}, {0, 0}}, 
          CellDingbat -> Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[
               0.9019607843137255, 0.4117647058823529, 0.027450980392156862`],
               FontFamily -> "Courier", FontSize -> 36, FontWeight -> Plain]],
             "SectionNumber"], CellMargins -> {{112, Inherited}, {12, 44}}, 
          Evaluatable -> True, CellGroupingRules -> {"SectionGrouping", 60}, 
          PageBreakAbove -> True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionDoubleDigit", "Printout"], 
          CellMargins -> {{112, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNumber"], CellBaseline -> Baseline, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 26, FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["SectionNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionInline"], FontFamily -> 
          "Source Sans Pro Semibold", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["SectionInline", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNoDingbat"], 
          CellMargins -> {{64, Inherited}, {12, 44}}, Evaluatable -> True, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> 
          True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionNoDingbat", "Printout"], 
          CellMargins -> {{64, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       StyleData["AnswerKeyNumberedSection"], 
       CellMargins -> {{64, Inherited}, {8, 28}}, Evaluatable -> True, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> True, 
       ShowCellLabel -> False, 
       CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
       CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", FontSize -> 
       18, FontSlant -> "Plain", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
       InterpretationBoxOptions -> {Editable -> True}], 
      Cell[
       StyleData["AnswerKeySectionNumber"], CellBaseline -> Baseline, 
       FontFamily -> "Source Sans Pro Semibold", FontSize -> 18, FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
      Cell[
       StyleData["IndexLinkGuide"], 
       CellMargins -> {{64, Inherited}, {48, 28}}, Evaluatable -> True, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> True, 
       ShowCellLabel -> False, 
       CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
       CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "Exercise", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 14, 
       FontSlant -> "Plain", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
       InterpretationBoxOptions -> {Editable -> True}], 
      Cell[
       StyleData["Index"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 11], 
      Cell[
       StyleData["IndexSubentry"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 11], 
      Cell[
       StyleData["FunctionName"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro Semibold", FontWeight -> "Bold"], 
      Cell[
       StyleData["IndexColumn"], 
       CellMargins -> {{66, 0}, {Inherited, Inherited}}, TabSpacings -> {2.}, 
       MenuSortingValue -> 10000, FontFamily -> "Source Sans Pro", 
       GridBoxOptions -> {
        GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
         GridBoxItemSize -> {"Columns" -> {{25}}}, 
         GridBoxSpacings -> {"Columns" -> {{2}}}}], 
      Cell[
       StyleData["IndexSubsection"], 
       CellMargins -> {{64, Inherited}, {9, 28}}, 
       CellGroupingRules -> {"SectionGrouping", 40}, MenuSortingValue -> 
       10000, FontFamily -> "Source Sans Pro", FontSize -> 24], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsection"], CellMargins -> {{64, Inherited}, {12, 32}},
           FontFamily -> "Source Sans Pro Semibold", FontSize -> 18, 
          FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["Subsection", "Printout"], 
          CellMargins -> {{64, Inherited}, {12, 32}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ResourcesSubsection"], 
          CellMargins -> {{64, Inherited}, {4, 16}}, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 15, FontSlant -> "Plain", 
          FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["ResourcesSubsection", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 16}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubsection"], 
          CellMargins -> {{64, Inherited}, {6, 12}}, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 16, FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["Subsubsection", "Printout"], 
          CellMargins -> {{64, Inherited}, {6, 12}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabularySection"], PageWidth :> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 24}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.901961, 0.411765, 0.027451], FontFamily -> 
          "Source Sans Pro", FontSize -> 18, FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["VocabularySection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 24}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabularyTable", StyleDefinitions -> StyleData["Text"]],
           SpanMaxSize -> 1, FontFamily -> "Source Sans Pro Light", FontColor -> 
          GrayLevel[0.8], 
          GridBoxOptions -> {
           GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxDividers -> {"Columns" -> {{False}}, "Rows" -> {False, {
                 Directive[
                  Thickness[0.5], "VocabDivColor"]}, False}}, 
            GridBoxItemStyle -> {
             "Columns" -> {"VocabularyCode", Inherited, Inherited}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{0, 1, 2, 1, 2}}, "Rows" -> {{1}}}}], 
         Cell[
          StyleData["VocabularyTable", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "VocabularyTable3Column", StyleDefinitions -> StyleData["Text"]], 
          SpanMaxSize -> 1, FontFamily -> "Source Sans Pro Light", FontColor -> 
          GrayLevel[0.8], 
          GridBoxOptions -> {
           GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxDividers -> {"Columns" -> {{False}}, "Rows" -> {False, {
                 Directive[
                  Thickness[0.5], "VocabDivColor"]}, False}}, 
            GridBoxItemStyle -> {
             "Columns" -> {
               "VocabularyCode", Inherited, "VocabularyCode", Inherited, 
                Inherited}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{0, 1, 2, 1, 2}}, "Rows" -> {{1}}}}], 
         Cell[
          StyleData["VocabularyTable3Column", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabularyText"], FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["VocabularyText", "Printout"], 
          CellMargins -> {{66, 10}, {7, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabularyCode", StyleDefinitions -> StyleData["Text"]], 
          Deletable -> False, FontFamily -> "Source Sans Pro", FontSize -> 14,
           FontWeight -> "Bold", FontColor -> GrayLevel[0.25], 
          GridBoxOptions -> {
           GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxDividers -> {
             "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {True, {True}, True}, "RowsIndexed" -> {}}}], 
         Cell[
          StyleData["VocabularyCode", "Printout"], FontColor -> 
          GrayLevel[0.25]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabDivColor"], FontColor -> GrayLevel[0.8]], 
         Cell[
          StyleData["VocabDivColor", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseSection"], PageWidth :> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 30}}, Evaluatable -> True, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, ShowCellLabel -> False, CellFrameMargins -> {{8, 8}, {4, 6}},
           CellFrameColor -> RGBColor[0.901961, 0.411765, 0.027451], 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 18, 
          FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["ExerciseSection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Exercise"], PageWidth :> 700, CellDingbat -> Cell[
            TextData[{"  ", 
              CounterBox["Section"], ".", 
              CounterBox["Exercise"]}], "ExerciseNumber", FontColor -> 
            RGBColor[
             0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
          ShowGroupOpener -> True, CellMargins -> {{108, Inherited}, {4, 8}}, 
          CellGroupingRules -> {"SectionGrouping", 67}, CounterIncrements -> 
          "Exercise", MenuSortingValue -> 10020, MenuCommandKey :> "2", 
          FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
          "Plain", FontSlant -> "Plain", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["Exercise", "Printout"], ShowGroupOpener -> False, 
          CellMargins -> {{110, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseNumber"], FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Bold", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["ExerciseNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseSubsection"], PageWidth :> 500, 
          CellFrame -> {{False, False}, {1, False}}, 
          CellMargins -> {{64, Inherited}, {8, 18}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, CellFrameColor -> 
          RGBColor[0.65, 0.6, 0.6], FontFamily -> "Source Sans Pro", FontSize -> 
          18, FontSlant -> "Italic", FontColor -> RGBColor[0.65, 0.6, 0.6]], 
         Cell[
          StyleData["ExerciseSubsection", "Printout"], 
          CellFrame -> {{False, False}, {1, False}}, CellFrameColor -> 
          RGBColor[0.65, 0.6, 0.6]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseNote"], PageWidth :> 700, 
          CellMargins -> {{64, Inherited}, {4, 8}}, PageBreakBelow -> False, 
          MenuSortingValue -> 10050, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.25], $CellContext`ReturnCreatesNewCell -> 
          True], 
         Cell[
          StyleData["ExerciseNote", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["QASection"], PageWidth :> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 30}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.901961, 0.411765, 0.027451], 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Question", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 18, 
          FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["QASection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Question"], PageWidth :> 700, 
          CellMargins -> {{64, Inherited}, {2, 12}}, PageBreakBelow -> False, 
          CounterIncrements -> "Question", MenuSortingValue -> 10030, 
          MenuCommandKey :> "3", FontFamily -> "Source Sans Pro", FontSize -> 
          14, FontWeight -> "Bold", FontSlant -> 
          "Plain", $CellContext`ReturnCreatesNewCell -> 
          True, $CellContext`DefaultReturnCreatedCellStyle -> "Answer"], 
         Cell[
          StyleData["Question", "Printout"], 
          CellMargins -> {{65, Inherited}, {2, 12}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Answer"], PageWidth :> 700, 
          CellMargins -> {{66, 10}, {4, 1}}, LineSpacing -> {1.125, 1., 2.}, 
          MenuSortingValue -> 10032, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.25], $CellContext`ReturnCreatesNewCell -> 
          True, $CellContext`DefaultReturnCreatedCellStyle -> "Question"], 
         Cell[
          StyleData["Answer", "Printout"], 
          CellMargins -> {{66, 10}, {4, 1}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["QuestionNumber"], FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Bold", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["QuestionNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["TechNoteSection"], PageWidth :> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 30}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.901961, 0.411765, 0.027451], FontFamily -> 
          "Source Sans Pro", FontSize -> 18, FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["TechNoteSection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["TechNote"], PageWidth :> 700, CellDingbat -> Cell[
            TextData[{"\[FilledSmallSquare]"}], FontSize -> 12, FontColor -> 
            GrayLevel[0.5]], CellMargins -> {{78, Inherited}, {4, 8}}, 
          CellChangeTimes -> {{3.651515120816633*^9, 3.651515125814807*^9}, 
            3.6515155174947033`*^9}, LineSpacing -> {1.25, 1., 2.}, 
          MenuSortingValue -> 10040, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.25], $CellContext`ReturnCreatesNewCell -> 
          True], 
         Cell[
          StyleData["TechNote", "Printout"], 
          CellMargins -> {{82, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["MoreExploreSection"], PageWidth :> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 30}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.901961, 0.411765, 0.027451], FontFamily -> 
          "Source Sans Pro", FontSize -> 18, FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["MoreExploreSection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["MoreExplore"], PageWidth :> 700, 
          CellMargins -> {{64, Inherited}, {4, 8}}, PageBreakBelow -> False, 
          MenuSortingValue -> 10050, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0], $CellContext`ReturnCreatesNewCell -> 
          True], 
         Cell[
          StyleData["MoreExplore", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["MoreExploreShortURL"], 
          CellMargins -> {{64, Inherited}, {4, 8}}, PageBreakBelow -> False, 
          FontFamily -> "Source Sans Pro Light", FontSize -> 14, FontSlant -> 
          "Plain", FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["MoreExploreShortURL", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], CellMargins -> {{66, 10}, {4, 14}}, FontFamily -> 
          "Baskerville", FontSize -> 18, FontColor -> 
          GrayLevel[0], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["Text", "Printout"], CellMargins -> {{66, 10}, {7, 7}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ResourcesText"], CellMargins -> {{66, 10}, {2, 0}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
          "Plain", FontSlant -> "Plain", FontColor -> 
          GrayLevel[0], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ResourcesText", "Printout"], 
          CellMargins -> {{66, 10}, {2, 0}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ResourcesLink"], CellMargins -> {{66, 10}, {2, 0}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
          "Plain", FontSlant -> "Italic", FontColor -> 
          GrayLevel[0], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ResourcesLink", "Printout"], 
          CellMargins -> {{66, 10}, {2, 0}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CodeCaption"], CellFrame -> {{0, 0}, {0, 0}}, 
          CellMargins -> {{66, 10}, {4, 12}}, PageBreakBelow -> False, 
          CellFrameColor -> GrayLevel[0.4], MenuSortingValue -> 10010, 
          MenuCommandKey :> "1", FontFamily -> "Source Sans Pro", FontSize -> 
          16, FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["CodeCaption", "Printout"], 
          CellMargins -> {{66, 10}, {4, 12}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], CellMargins -> {{99, 10}, {3, 7}}, SpanMaxSize -> 
          1, FontSize -> 15], 
         Cell[
          StyleData["Input", "Printout"], CellMargins -> {{99, 10}, {3, 7}}]},
         Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{99, 10}, {14, 7}}, FontSize -> 
          15], 
         Cell[
          StyleData["Output", "Printout"], 
          CellMargins -> {{99, 10}, {14, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{99, 10}, {25, 10}}, 
          SpanMaxSize -> 1, MenuSortingValue -> 1500, FontSize -> 15], 
         Cell[
          StyleData["InputOnly", "Printout"], 
          CellMargins -> {{99, 10}, {15, 10}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CellLabel"], 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          LanguageCategory -> None, StyleMenuListing -> None, FontFamily -> 
          "Helvetica Neue", FontSize -> 9, FontWeight -> "Plain", FontSlant -> 
          "Plain", FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["CellLabel", "Printout"], FontSize -> 8, FontColor -> 
          GrayLevel[0.5]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Message"], Editable -> False, 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellGroupingRules -> "OutputGrouping", TextClipboardType -> 
          "PlainText", PageBreakWithin -> False, GroupPageBreakWithin -> 
          False, GeneratedCell -> True, CellAutoOverwrite -> True, 
          ShowCellLabel -> False, DefaultFormatType -> 
          DefaultOutputFormatType, ContextMenu -> 
          FEPrivate`FrontEndResource["ContextMenus", "Output"], 
          ShowAutoStyles -> False, ShowSyntaxStyles -> False, 
          AutoStyleOptions -> {
           "StringStyle" -> None, "SyntaxErrorStyle" -> None}, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           AutoItalicWords -> {}, AutoQuoteCharacters -> {}, 
          PasteAutoQuoteCharacters -> {}, LanguageCategory -> None, 
          FormatType -> InputForm, ShowStringCharacters -> False, 
          CounterIncrements -> "Message", MenuSortingValue -> 1600, 
          StyleMenuListing -> None, FontFamily :> 
          CurrentValue["PanelFontFamily"], FontSize -> 11, FontColor -> 
          RGBColor[0.5072, 0.16933, 0.15221], $CellContext`StripStyleOnPaste -> 
          True], 
         Cell[
          StyleData["Message", "Printout"], 
          CellMargins -> {{100, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabels -> {{None, None}, {None, None}}, FontColor -> 
          GrayLevel[0]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseInput", StyleDefinitions -> StyleData["Input"]], 
          CellMargins -> {{88, 10}, {4, 7}}, ShowCellLabel -> False, 
          SpanMaxSize -> 1, FontSize -> 
          14, $CellContext`GeneratedCellStyles -> {
           "Output" -> "ExerciseOutput"}], 
         Cell[
          StyleData["ExerciseInput", "Printout"], 
          CellMargins -> {{88, 10}, {4, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExerciseOutput", StyleDefinitions -> StyleData["Output"]], 
          CellMargins -> {{88, 10}, {10, 4}}, ShowCellLabel -> False, 
          FontSize -> 14], 
         Cell[
          StyleData["ExerciseOutput", "Printout"], 
          CellMargins -> {{88, 10}, {10, 4}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Picture"], CellMargins -> {{66, 10}, {10, 10}}, 
          CellGroupingRules -> "GraphicsGrouping", StyleMenuListing -> None], 
         
         Cell[
          StyleData["Picture", "Printout"], 
          CellMargins -> {{66, 10}, {8, 8}}]}, Closed]], 
      Cell[
       StyleData["ExerciseSummaryCell"], PageWidth :> 700, CellFrame -> 0, 
       CellMargins -> {{64, Inherited}, {8, 10}}, 
       CellGroupingRules -> {"SectionGrouping", 64}, PageBreakBelow -> False, 
       ShowCellLabel -> False, CellFrameMargins -> 0, ShowStringCharacters -> 
       False, FontFamily -> "Source Sans Pro", FontSize -> 18, FontColor -> 
       RGBColor[1, 1, 1], 
       GridBoxOptions -> {GridBoxBackground -> {"Columns" -> {{
              RGBColor[0.990997, 0.539528, 0.155779], 
              RGBColor[0.989487, 0.434699, 0.0320439]}}, "Rows" -> {{None}}}, 
         GridBoxItemSize -> {"Columns" -> {
             Scaled[0.7], 
             Scaled[0.3]}, "Rows" -> {{Automatic}}}}], 
      Cell[
       StyleData["ExerciseSummaryHeading"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 18, FontColor -> 
       RGBColor[1, 1, 1]], 
      Cell[
       StyleData["ExerciseSummarySubheading"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 15, FontColor -> 
       RGBColor[1., 0.9294117647058824, 0.7215686274509804]], 
      Cell[
       StyleData["ExercisePreviewButtonText"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 14, FontSlant -> "Plain", 
       FontColor -> RGBColor[0.6, 0.6, 0.6]], 
      Cell[
       StyleData["ExercisePreviewButtonTextHighlight"], ShowStringCharacters -> 
       False, FontFamily -> "Source Sans Pro", FontSize -> 14, FontSlant -> 
       "Plain", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Inline and special formatting", "Section", 
       CellChangeTimes -> {{3.646681732592888*^9, 3.646681749414035*^9}}], 
      Cell[
       StyleData["Graphics"], MenuSortingValue -> None], 
      Cell[
       StyleData["Graphics3D"], MenuSortingValue -> None], 
      Cell[
       StyleData["StandardForm"], 
       InputAutoReplacements -> {
        "->" -> "\[Rule]", ":>" -> "\[RuleDelayed]", "<=" -> "\[LessEqual]", 
         ">=" -> "\[GreaterEqual]", "!=" -> "\[NotEqual]", "==" -> "\[Equal]",
          "@>" -> "\\[InlinePart]", "<->" -> "\[UndirectedEdge]", ParentList},
        LineSpacing -> {1.25, 0, 2}, SingleLetterItalics -> False, 
       StyleMenuListing -> None, FontFamily -> "Source Sans Pro", 
       PrivateFontOptions -> {"OperatorSubstitution" -> True}], 
      Cell[
       StyleData["OutputForm"], PageWidth :> DirectedInfinity[1], 
       TextAlignment -> Left, LineSpacing -> {0.6, 1}, 
       AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}, 
       StyleMenuListing -> None, FontFamily -> "Source Sans Pro", 
       PrivateFontOptions -> {"OperatorSubstitution" -> True}], 
      Cell[
       StyleData["InputForm"], PageWidth :> DirectedInfinity[1], 
       InputAutoReplacements -> {}, AllowInlineCells -> False, Hyphenation -> 
       False, AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}, 
       AutoSpacing -> False, NumberMarks -> True, AutoNumberFormatting -> 
       False, StyleMenuListing -> None, FontFamily -> "Source Sans Pro", 
       PrivateFontOptions -> {"OperatorSubstitution" -> True}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["DetailsLink"], FontFamily -> "Source Sans Pro", FontSize :> 
          If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "WolframCodeSans", 
             Inherited, Inherited 0.9]], FontColor -> GrayLevel[0], 
          ButtonBoxOptions -> {
           ButtonFunction :> (
             Function[$CellContext`t, 
              NotebookFind[$CellContext`t, "Notes", All, CellStyle]; 
              NotebookFind[$CellContext`t, "NotesSection", All, CellStyle, 
                AutoScroll -> Top]][
              Documentation`HelpLookup[
               StringJoin["ref/", #]]]& ), ButtonSource -> ButtonContents, 
            Evaluator -> Automatic}], 
         Cell[
          StyleData["DetailsLink", "Printout"], FontFamily -> 
          "Source Sans Pro", FontSize :> If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "WolframCodeSans", 
             Inherited, Inherited 0.88]], FontColor -> GrayLevel[0]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["LinkAlt"], FontFamily -> "Source Sans Pro", FontSize :> 
          If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "WolframCodeSans", 
             Inherited, Inherited 0.9]], FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["LinkAlt", "Printout"], FontFamily -> "Source Sans Pro", 
          FontSize :> If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "WolframCodeSans", 
             Inherited, Inherited 0.88]], FontColor -> GrayLevel[0]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Hyperlink"], MenuSortingValue -> None, FontColor -> 
          RGBColor[0.3, 0.35, 0.5]], 
         Cell[
          StyleData["Hyperlink", "Printout"]]}, Closed]], 
      Cell[
       StyleData[
       "IndexNavigationLink", StyleDefinitions -> StyleData["Hyperlink"]], 
       MenuSortingValue -> None, FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
      Cell[
       StyleData["Crosslink"], 
       ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
            
            NotebookLocate[#2, "OpenInNewWindow" -> 
             CurrentValue["HyperlinkModifierKey"]]}]& ), Evaluator -> None, 
         Method -> "Queued"}], 
      Cell[
       StyleData["VocabularyLink"], FontColor -> GrayLevel[0], 
       ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
            
            NotebookLocate[#2, "OpenInNewWindow" -> 
             CurrentValue["HyperlinkModifierKey"]]}]& ), Evaluator -> None, 
         Method -> "Queued"}], 
      Cell[
       StyleData["InlineCode"], SpanMaxSize -> 1, FontColor -> GrayLevel[0]], 
      
      Cell[
       StyleData["InlineCodeText"], SpanMaxSize -> 1, FontFamily -> 
       "Source Sans Pro", FontSize -> 0.95 Inherited], 
      Cell[
       StyleData["NoLabel"], ShowCellLabel -> 
       False, $CellContext`GeneratedCellStyles -> {
        "Output" -> "ExerciseOutput"}], 
      Cell[
       StyleData["MenuName"], FontFamily -> "Verdana", FontWeight -> "Bold", 
       FontColor -> GrayLevel[0.286275]], 
      Cell[
       StyleData["KeyEvent"], CellFrame -> {{0.5, 0.5}, {0.5, 0.5}}, 
       CellFrameMargins -> {{2, 2}, {2, 2}}, CellFrameColor -> GrayLevel[0.7],
        FontFamily -> "Verdana", FontColor -> GrayLevel[0.4]], 
      Cell[
       StyleData["KeyEventDelimiter"], FontColor -> GrayLevel[0.5]], 
      Cell[
       CellGroupData[{
         Cell["Key Styles", "Subsubsection"], 
         Cell[
          StyleData["Key0"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {"Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-2, -2}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}], 
         Cell[
          StyleData["Key1"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #2, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "ColumnsIndexed" -> {2 -> GrayLevel[0.8352941176470589]}, 
                  "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-2, -2}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}], 
         Cell[
          StyleData["Key2"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #2, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #3, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "ColumnsIndexed" -> {
                   2 -> GrayLevel[0.8352941176470589], 3 -> 
                    GrayLevel[0.8352941176470589]}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-2, -2}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}], 
         Cell[
          StyleData["Key3"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #2, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #3, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #4, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "ColumnsIndexed" -> {
                   2 -> GrayLevel[0.8352941176470589], 3 -> 
                    GrayLevel[0.8352941176470589], 4 -> 
                    GrayLevel[0.8352941176470589]}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-2, -2}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Entity styles", "Subsubsection"], 
         Cell[
          StyleData["Entity"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneSelectorBox[{True -> GridBox[{{
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontFamily -> "Source Sans Pro", 
                    FontWeight -> "Plain", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 1}], False -> 
                 PaneBox[#, 
                   BaseStyle -> {
                    FontColor -> RGBColor[0.395437, 0.20595, 0.061158]}, 
                   BaselinePosition -> Baseline]}, 
                Dynamic[
                 CurrentValue[Evaluatable]], ImageSize -> Automatic, 
                BaselinePosition -> Baseline, 
                BaseStyle -> {FontFamily -> "Helvetica"}], FrameStyle -> 
               RGBColor[1., 0.504768, 0.], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityFrameless"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              PaneSelectorBox[{True -> GridBox[{{
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontFamily -> "Source Sans Pro", 
                    FontWeight -> "Plain", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 1}], False -> 
                PaneBox[#, 
                  BaseStyle -> {
                   FontColor -> RGBColor[0.395437, 0.20595, 0.061158]}, 
                  BaselinePosition -> Baseline]}, 
               Dynamic[
                CurrentValue[Evaluatable]], ImageSize -> Automatic, 
               BaselinePosition -> Baseline, 
               BaseStyle -> {FontFamily -> "Helvetica"}], #3, 
              BaseStyle -> {
               ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {
                 FontWeight -> "Plain", "OperatorSubstitution" -> False}}]& ),
             Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityFramelessHot"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {
           DisplayFunction -> (PaneSelectorBox[{True -> GridBox[{{
                   
                   StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0]], 
                   StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0], Selectable -> 
                    False]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 1}], False -> 
               PaneBox[#, BaseStyle -> {FontColor -> GrayLevel[0]}, 
                 BaselinePosition -> Baseline]}, 
              Dynamic[
               CurrentValue[Evaluatable]], ImageSize -> Automatic, 
              BaselinePosition -> Baseline, 
              BaseStyle -> {
               FontWeight -> "Plain", FontFamily -> "Helvetica", 
                ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClass"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneSelectorBox[{True -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 2}], False -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 2}]}, 
                Dynamic[
                 CurrentValue[Evaluatable]], ImageSize -> Automatic, 
                BaselinePosition -> Baseline, 
                BaseStyle -> {FontFamily -> "Helvetica"}], FrameStyle -> 
               RGBColor[1., 0.504768, 0.], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClassFrameless"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              PaneSelectorBox[{True -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 2}], False -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 2}]}, 
               Dynamic[
                CurrentValue[Evaluatable]], ImageSize -> Automatic, 
               BaselinePosition -> Baseline, 
               BaseStyle -> {FontFamily -> "Helvetica"}], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClassFramelessHot"], ShowStringCharacters -> False,
           TemplateBoxOptions -> {
           DisplayFunction -> (PaneSelectorBox[{True -> GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                   
                   StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0]], 
                   StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0], Selectable -> 
                    False]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}], False -> GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                   StyleBox[#, FontColor -> GrayLevel[0]]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}]}, 
              Dynamic[
               CurrentValue[Evaluatable]], ImageSize -> Automatic, 
              BaselinePosition -> Baseline, 
              BaseStyle -> {
               FontWeight -> "Plain", FontFamily -> "Helvetica", 
                ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityProperty"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               
               PaneBox[#, 
                BaseStyle -> {
                 FontSlant -> Italic, FontWeight -> Plain, FontFamily -> 
                  "Source Sans Pro", FontColor -> 
                  RGBColor[0.395437, 0.20595, 0.061158]}, BaselinePosition -> 
                Baseline], FrameStyle -> 
               RGBColor[0.94227, 0.703639, 0.033387], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityPropertyClass"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneBox[
                GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], #}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}], 
                BaseStyle -> {
                 FontSlant -> Italic, FontWeight -> Plain, FontFamily -> 
                  "Source Sans Pro", FontColor -> 
                  RGBColor[0.395437, 0.20595, 0.061158]}, BaselinePosition -> 
                Baseline], FrameStyle -> 
               RGBColor[0.94227, 0.703639, 0.033387], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityValue"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              
              GridBox[{{#, #2}}, GridBoxAlignment -> {"Rows" -> {{Baseline}}},
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}}, 
               BaselinePosition -> {1, 1}], Background -> 
              RGBColor[{0.9921568627450981, 0.9529411764705882, 
                0.8509803921568627}], BaselinePosition -> Baseline, 
              FrameMargins -> {{1, 1}, {1, 1}}, ImageMargins -> 2, FrameStyle -> 
              RGBColor[{0.9333333333333333, 0.8470588235294118, 
                0.5529411764705883}], RoundingRadius -> 5]& )}]}, Closed]]}, 
     Closed]]}, Visible -> False, FrontEndVersion -> 
  "12.2 for Microsoft Windows (64-bit) (2021\:5e742\:67085\:65e5)", 
  StyleDefinitions -> "StylesheetFormatting.nb"],
ExpressionUUID->"f7be5360-17f9-4b7f-a92a-9d7da316e093"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "i:1"->{
  Cell[1379, 43, 685, 15, 128, "Text",ExpressionUUID->"29971f26-11dc-468c-aba3-42988e3c4b43",
   CellTags->"i:1"]},
 "i:10"->{
  Cell[124276, 2620, 304, 6, 70, "CodeCaption",ExpressionUUID->"3c31075a-9bf1-4a0d-ae07-d2f653fdd530",
   CellTags->"i:10"]},
 "i:11"->{
  Cell[161830, 3411, 410, 11, 73, "CodeCaption",ExpressionUUID->"7a9974ef-4edd-4036-b26e-5e5326320fc4",
   CellTags->{"p:274", "i:11"}]},
 "i:12"->{
  Cell[163339, 3459, 394, 7, 73, "CodeCaption",ExpressionUUID->"dd1c88f7-6239-480c-abd7-4647da5e97d4",
   CellTags->"i:12"]},
 "i:13"->{
  Cell[229219, 4823, 715, 18, 70, "Text",ExpressionUUID->"40208f57-b4ad-441c-8d4a-56eb73bab303",
   CellTags->{"p:275", "i:13"}]},
 "i:14"->{
  Cell[246475, 5180, 300, 6, 70, "CodeCaption",ExpressionUUID->"1673015e-1ff0-4429-9847-aad505b04b13",
   CellTags->"i:14"]},
 "i:15"->{
  Cell[263555, 5514, 1140, 18, 70, "Text",ExpressionUUID->"e72747f4-ff88-4b09-9282-50deda522519",
   CellTags->"i:15"]},
 "i:16"->{
  Cell[264698, 5534, 331, 6, 70, "CodeCaption",ExpressionUUID->"66540b04-372e-4cf8-bdb7-d1aa63d22211",
   CellTags->"i:16"]},
 "i:17"->{
  Cell[378601, 7918, 293, 6, 70, "CodeCaption",ExpressionUUID->"55da807e-9a64-47c6-a39c-24654c6d0bc2",
   CellTags->"i:17"]},
 "i:18"->{
  Cell[602012, 12551, 358, 7, 70, "CodeCaption",ExpressionUUID->"9d17b0cf-b393-45f0-a370-0ad3efda80ea",
   CellTags->"i:18"]},
 "i:19"->{
  Cell[605449, 12643, 486, 8, 70, "Text",ExpressionUUID->"620ac347-68b4-4654-900a-1cd588aaca74",
   CellTags->"i:19"]},
 "i:2"->{
  Cell[2067, 60, 345, 6, 79, "Text",ExpressionUUID->"ae81b7e4-5ec6-406b-8aaf-496db845412c",
   CellTags->"i:2"]},
 "i:20"->{
  Cell[685355, 14226, 434, 11, 73, "CodeCaption",ExpressionUUID->"b3d153c1-76e1-4855-8ebb-aeff31392eb5",
   CellTags->"i:20"]},
 "i:21"->{
  Cell[687717, 14293, 369, 10, 70, "CodeCaption",ExpressionUUID->"853fad81-205e-4f3e-a232-2454dac38075",
   CellTags->"i:21"]},
 "i:22"->{
  Cell[689025, 14336, 303, 7, 70, "CodeCaption",ExpressionUUID->"8f055eb0-13f2-49d5-8d97-a16a33c8c025",
   CellTags->{"p:280", "i:22"}]},
 "i:23"->{
  Cell[714576, 14951, 2510, 77, 177, "Text",ExpressionUUID->"288f8536-7358-4568-8fb4-f95e21169494",
   CellTags->"i:23"]},
 "i:24"->{
  Cell[717089, 15030, 595, 17, 74, "CodeCaption",ExpressionUUID->"b4cb821e-1a4b-4750-a627-6850dfc4fe8d",
   CellTags->"i:24"]},
 "i:25"->{
  Cell[718232, 15070, 605, 17, 74, "CodeCaption",ExpressionUUID->"74081cda-5de2-4dcc-9dbb-bb3422ee6b30",
   CellTags->"i:25"]},
 "i:26"->{
  Cell[1913171, 38926, 322, 6, 63, "Question",ExpressionUUID->"cd0c7837-8843-42e3-9573-2b8cf9157520",
   CellTags->"i:26"]},
 "i:27"->{
  Cell[1914194, 38956, 860, 16, 86, "Answer",ExpressionUUID->"83c38610-07f5-4e8c-a23f-9b571dc741b8",
   CellTags->"i:27"]},
 "i:28"->{
  Cell[1915057, 38974, 374, 7, 63, "Question",ExpressionUUID->"820de64d-7221-4ebf-9f50-83dc224464f6",
   CellTags->"i:28"]},
 "i:29"->{
  Cell[1916442, 39004, 401, 7, 63, "Question",ExpressionUUID->"b1612e9a-a6c7-4d24-9766-fe36662a680d",
   CellTags->"i:29"]},
 "i:3"->{
  Cell[23245, 490, 511, 8, 128, "Text",ExpressionUUID->"d84987f3-9a8e-40b7-9ac5-c0c84e0e19cb",
   CellTags->"i:3"]},
 "i:30"->{
  Cell[1917903, 39044, 764, 20, 59, "TechNote",ExpressionUUID->"6825b3c1-b69f-4b1d-ad8a-0de3a68bfc37",
   CellTags->"i:30"]},
 "i:31"->{
  Cell[1919889, 39100, 795, 19, 59, "TechNote",ExpressionUUID->"08bdf09f-2438-45e7-8c9c-c7255c360d05",
   CellTags->"i:31"]},
 "i:4"->{
  Cell[23759, 500, 294, 6, 73, "CodeCaption",ExpressionUUID->"b44910d3-3611-4d38-abe4-224db0a56a72",
   CellTags->"i:4"]},
 "i:5"->{
  Cell[52358, 1096, 427, 11, 70, "CodeCaption",ExpressionUUID->"d2cf7064-169f-4140-9666-76999da3fc45",
   CellTags->{"p:272", "i:5"}]},
 "i:6"->{
  Cell[87452, 1790, 378, 11, 70, "CodeCaption",ExpressionUUID->"63f7c831-910a-4f81-afd1-33b6a99371c3",
   CellTags->"i:6"]},
 "i:7"->{
  Cell[120429, 2501, 308, 7, 70, "CodeCaption",ExpressionUUID->"d2a75d4d-d24c-4935-9df0-acec04d937c6",
   CellTags->{"p:273", "i:7"}]},
 "i:8"->{
  Cell[121175, 2527, 677, 15, 70, "Text",ExpressionUUID->"f5634acf-c28f-4fa8-86ef-8bab832b889c",
   CellTags->"i:8"]},
 "i:9"->{
  Cell[123514, 2601, 759, 17, 70, "Text",ExpressionUUID->"9a3c31e7-e1eb-4cff-8a73-8f8f07590932",
   CellTags->"i:9"]},
 "LastCellOfAPage"->{
  Cell[51702, 1083, 653, 11, 70, "Text",ExpressionUUID->"65e77bd0-1f6c-483e-8217-3b2b10bc087e",
   CellTags->"LastCellOfAPage"],
  Cell[120001, 2486, 413, 12, 70, "Output",ExpressionUUID->"5d538428-1b0a-4923-92e2-930df24b44df",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[145757, 3097, 16058, 311, 223, "Output",ExpressionUUID->"1fb61b46-4f77-4baf-ade5-fd71f64a4630",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[219358, 4637, 9846, 183, 70, "Output",ExpressionUUID->"770d3bbc-821f-4b0e-a712-61d1e54d3931",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[265297, 5552, 89697, 1887, 70, "Output",ExpressionUUID->"44ae734a-bf3f-4f73-811d-5734568ffdfb",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[415941, 8772, 12656, 241, 70, "Output",ExpressionUUID->"598e5c1f-9717-49eb-a795-bda59d9775d4",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[475661, 9984, 16519, 324, 70, "Output",ExpressionUUID->"271379dc-4c77-4b15-9a02-8eceaca01c85",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[578549, 12077, 22001, 428, 466, "Output",ExpressionUUID->"eded0ae1-eeac-4276-8c7a-b096f7ee4d4e",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[688582, 14321, 428, 12, 70, "Output",ExpressionUUID->"40742866-5db5-4486-9070-f51101dd9e2c",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[754780, 16150, 33806, 985, 70, "Output",ExpressionUUID->"da0a011c-c987-48b3-8a90-9d342c69e8ee",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[1132606, 22814, 98245, 2051, 70, "Output",ExpressionUUID->"1c288eaa-ea0f-4d78-b308-d8c62cb609d3",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[1583773, 32458, 900, 24, 47, "Exercise",ExpressionUUID->"05ea2a8c-84d5-4473-896b-450babd0658f",
   CellTags->"LastCellOfAPage"],
  Cell[1921066, 39135, 479, 11, 59, "MoreExplore",ExpressionUUID->"47d13a19-2a49-4e9e-8faa-f6d1cfea35bc",
   CellTags->"LastCellOfAPage"]},
 "p:271"->{
  Cell[696, 24, 680, 17, 189, "SectionDoubleDigit",ExpressionUUID->"a43a8fc3-c81c-4787-a769-3d893d7cb992",
   CounterAssignments->{{"Section", 44}, {"Subsection", 0}, {"Subsubsection", 0}, {"Exercise", 0}},
   CellTags->"p:271"]},
 "p:272"->{
  Cell[52358, 1096, 427, 11, 70, "CodeCaption",ExpressionUUID->"d2cf7064-169f-4140-9666-76999da3fc45",
   CellTags->{"p:272", "i:5"}]},
 "p:273"->{
  Cell[120429, 2501, 308, 7, 70, "CodeCaption",ExpressionUUID->"d2a75d4d-d24c-4935-9df0-acec04d937c6",
   CellTags->{"p:273", "i:7"}]},
 "p:274"->{
  Cell[161830, 3411, 410, 11, 73, "CodeCaption",ExpressionUUID->"7a9974ef-4edd-4036-b26e-5e5326320fc4",
   CellTags->{"p:274", "i:11"}]},
 "p:275"->{
  Cell[229219, 4823, 715, 18, 70, "Text",ExpressionUUID->"40208f57-b4ad-441c-8d4a-56eb73bab303",
   CellTags->{"p:275", "i:13"}]},
 "p:276"->{
  Cell[355009, 7442, 292, 6, 70, "CodeCaption",ExpressionUUID->"21ce5bca-2c6b-431e-81fc-3288adffb794",
   CellTags->"p:276"]},
 "p:277"->{
  Cell[428612, 9016, 491, 8, 70, "Text",ExpressionUUID->"1cab299d-4cd7-4b9b-b6a1-f1bb4eaa9aca",
   CellTags->"p:277"]},
 "p:278"->{
  Cell[492195, 10311, 284, 5, 70, "CodeCaption",ExpressionUUID->"acaea558-b7ba-49a1-b5fd-964a95147be2",
   CellTags->"p:278"]},
 "p:279"->{
  Cell[600565, 12508, 275, 5, 70, "CodeCaption",ExpressionUUID->"6fbb5cea-c499-462d-a954-7974a791a168",
   CellTags->"p:279"]},
 "p:280"->{
  Cell[689025, 14336, 303, 7, 70, "CodeCaption",ExpressionUUID->"8f055eb0-13f2-49d5-8d97-a16a33c8c025",
   CellTags->{"p:280", "i:22"}]},
 "p:281"->{
  Cell[753997, 16124, 448, 13, 70, "CodeCaption",ExpressionUUID->"1baa224e-4c7a-4cc5-b373-e05a790fda85",
   CellTags->"p:281"]},
 "p:282"->{
  Cell[1911973, 38895, 333, 8, 141, "QASection",ExpressionUUID->"c0c3283e-770a-4a23-99d2-effe84be9eeb",
   CellTags->"p:282"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"i:1", 2012902, 40989},
 {"i:10", 2013029, 40992},
 {"i:11", 2013166, 40995},
 {"i:12", 2013315, 40998},
 {"i:13", 2013452, 41001},
 {"i:14", 2013594, 41004},
 {"i:15", 2013731, 41007},
 {"i:16", 2013863, 41010},
 {"i:17", 2014000, 41013},
 {"i:18", 2014137, 41016},
 {"i:19", 2014275, 41019},
 {"i:2", 2014405, 41022},
 {"i:20", 2014530, 41025},
 {"i:21", 2014669, 41028},
 {"i:22", 2014808, 41031},
 {"i:23", 2014957, 41034},
 {"i:24", 2015091, 41037},
 {"i:25", 2015230, 41040},
 {"i:26", 2015369, 41043},
 {"i:27", 2015505, 41046},
 {"i:28", 2015640, 41049},
 {"i:29", 2015776, 41052},
 {"i:3", 2015911, 41055},
 {"i:30", 2016039, 41058},
 {"i:31", 2016176, 41061},
 {"i:4", 2016312, 41064},
 {"i:5", 2016445, 41067},
 {"i:6", 2016591, 41070},
 {"i:7", 2016726, 41073},
 {"i:8", 2016872, 41076},
 {"i:9", 2017001, 41079},
 {"LastCellOfAPage", 2017142, 41082},
 {"p:271", 2019141, 41119},
 {"p:272", 2019384, 41123},
 {"p:273", 2019532, 41126},
 {"p:274", 2019680, 41129},
 {"p:275", 2019830, 41132},
 {"p:276", 2019973, 41135},
 {"p:277", 2020112, 41138},
 {"p:278", 2020244, 41141},
 {"p:279", 2020384, 41144},
 {"p:280", 2020524, 41147},
 {"p:281", 2020674, 41150},
 {"p:282", 2020815, 41153}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[696, 24, 680, 17, 189, "SectionDoubleDigit",ExpressionUUID->"a43a8fc3-c81c-4787-a769-3d893d7cb992",
 CounterAssignments->{{"Section", 44}, {"Subsection", 0}, {"Subsubsection", 0}, {"Exercise", 0}},
 CellTags->"p:271"],
Cell[1379, 43, 685, 15, 128, "Text",ExpressionUUID->"29971f26-11dc-468c-aba3-42988e3c4b43",
 CellTags->"i:1"],
Cell[2067, 60, 345, 6, 79, "Text",ExpressionUUID->"ae81b7e4-5ec6-406b-8aaf-496db845412c",
 CellTags->"i:2"],
Cell[2415, 68, 341, 7, 73, "CodeCaption",ExpressionUUID->"eabeb1e1-d802-4085-a676-4ba0cec6cda7"],
Cell[CellGroupData[{
Cell[2781, 79, 835, 21, 139, "Input",ExpressionUUID->"227bf311-4fff-403a-b0a1-5bb904d049e4"],
Cell[3619, 102, 19611, 385, 195, "Output",ExpressionUUID->"afb3f699-41be-4d37-9b27-5e5714dadfc5",
 Evaluatable->False]
}, Open  ]],
Cell[23245, 490, 511, 8, 128, "Text",ExpressionUUID->"d84987f3-9a8e-40b7-9ac5-c0c84e0e19cb",
 CellTags->"i:3"],
Cell[23759, 500, 294, 6, 73, "CodeCaption",ExpressionUUID->"b44910d3-3611-4d38-abe4-224db0a56a72",
 CellTags->"i:4"],
Cell[CellGroupData[{
Cell[24078, 510, 211, 5, 57, "Input",ExpressionUUID->"b199d28a-7c87-4c9d-b154-5ae53988fa09"],
Cell[24292, 517, 191, 5, 79, "Output",ExpressionUUID->"3d11f792-e9c1-48b6-adcb-1b3a45631912",
 Evaluatable->False]
}, Open  ]],
Cell[24498, 525, 398, 8, 73, "CodeCaption",ExpressionUUID->"6d9d3714-a6d4-43f8-abeb-cf101ccc6206"],
Cell[CellGroupData[{
Cell[24921, 537, 216, 5, 57, "Input",ExpressionUUID->"a5893f1d-3038-4e01-92e7-6646da5bbc25"],
Cell[25140, 544, 191, 5, 79, "Output",ExpressionUUID->"5f4a8b52-a136-42e9-8374-90b204faf4a1",
 Evaluatable->False]
}, Open  ]],
Cell[25346, 552, 564, 11, 128, "Text",ExpressionUUID->"4da1329c-8c10-4af2-aafd-d22e58333dc3"],
Cell[25913, 565, 358, 8, 73, "CodeCaption",ExpressionUUID->"a06eeb3e-6fc6-48a5-af3f-166609f90c75"],
Cell[CellGroupData[{
Cell[26296, 577, 180, 4, 57, "Input",ExpressionUUID->"4bc94b73-06f0-48e7-bf7c-68019ed20c7b"],
Cell[26479, 583, 14148, 274, 197, "Output",ExpressionUUID->"eca7a6b4-ed40-47a9-a76a-2e12325169fe",
 Evaluatable->False]
}, Open  ]],
Cell[40642, 860, 520, 13, 70, "Text",ExpressionUUID->"b5f0702e-4c56-4126-b28f-bb672fc9fbab"],
Cell[41165, 875, 479, 12, 70, "CodeCaption",ExpressionUUID->"08da1713-def3-4a61-91a4-871c8d5ef751"],
Cell[CellGroupData[{
Cell[41669, 891, 205, 5, 70, "Input",ExpressionUUID->"46463f73-8ecb-416b-a561-49ae701685a2"],
Cell[41877, 898, 9810, 182, 70, "Output",ExpressionUUID->"722ae6f9-982a-4034-9447-219258cc5141",
 Evaluatable->False]
}, Open  ]],
Cell[51702, 1083, 653, 11, 70, "Text",ExpressionUUID->"65e77bd0-1f6c-483e-8217-3b2b10bc087e",
 CellTags->"LastCellOfAPage"],
Cell[52358, 1096, 427, 11, 70, "CodeCaption",ExpressionUUID->"d2cf7064-169f-4140-9666-76999da3fc45",
 CellTags->{"p:272", "i:5"}],
Cell[CellGroupData[{
Cell[52810, 1111, 201, 5, 70, "Input",ExpressionUUID->"674d69bd-0d2f-465c-85f5-58001ca92487"],
Cell[53014, 1118, 9809, 182, 70, "Output",ExpressionUUID->"5922addc-3df4-4ba7-a6cb-4a4164bcb8b0",
 Evaluatable->False]
}, Open  ]],
Cell[62838, 1303, 632, 17, 70, "Text",ExpressionUUID->"ef696a96-e1b7-4945-bed3-d3251972bdeb"],
Cell[63473, 1322, 263, 6, 70, "CodeCaption",ExpressionUUID->"1ae1e45b-a4e1-483b-83a1-ef8d69906a7c"],
Cell[CellGroupData[{
Cell[63761, 1332, 197, 5, 70, "Input",ExpressionUUID->"a8505d69-86d6-4b40-8e4c-fa2f4cb4e791"],
Cell[63961, 1339, 13002, 244, 70, "Output",ExpressionUUID->"3f5596fb-257a-41d4-bf17-89b70b14a2aa",
 Evaluatable->False]
}, Open  ]],
Cell[76978, 1586, 410, 8, 70, "CodeCaption",ExpressionUUID->"0af3dd15-ccdd-4d8a-87e0-5d9de706bc81"],
Cell[CellGroupData[{
Cell[77413, 1598, 243, 7, 70, "Input",ExpressionUUID->"f4df816e-d176-413c-a77a-a2895201b2ed"],
Cell[77659, 1607, 9778, 180, 70, "Output",ExpressionUUID->"c647ee24-3034-4077-b46e-d54410511bab",
 Evaluatable->False]
}, Open  ]],
Cell[87452, 1790, 378, 11, 70, "CodeCaption",ExpressionUUID->"63f7c831-910a-4f81-afd1-33b6a99371c3",
 CellTags->"i:6"],
Cell[CellGroupData[{
Cell[87855, 1805, 204, 5, 70, "Input",ExpressionUUID->"526248db-b06b-461f-9589-e34ffd8cb68c"],
Cell[88062, 1812, 29910, 606, 70, "Output",ExpressionUUID->"237fd118-e84b-44a3-bc38-14a84d80ec0d",
 Evaluatable->False]
}, Open  ]],
Cell[117987, 2421, 316, 7, 70, "Text",ExpressionUUID->"4ca7617d-13f4-499b-804b-42adf09ef4a0"],
Cell[118306, 2430, 561, 13, 70, "CodeCaption",ExpressionUUID->"e71fc055-bc15-4adc-a2da-10ffceb8c8f9"],
Cell[CellGroupData[{
Cell[118892, 2447, 204, 5, 70, "Input",ExpressionUUID->"df3c5ee7-3967-49a4-bbd9-2521217764b3"],
Cell[119099, 2454, 382, 11, 70, "Output",ExpressionUUID->"f887f3b1-ef7c-4cde-ab4b-9c20c5536fc8",
 Evaluatable->False]
}, Open  ]],
Cell[119496, 2468, 277, 7, 70, "CodeCaption",ExpressionUUID->"2c3ca063-f10e-4914-95e1-23dbd7b657d1"],
Cell[CellGroupData[{
Cell[119798, 2479, 200, 5, 70, "Input",ExpressionUUID->"15365425-176f-4f2c-bbbe-a9960ffe7782"],
Cell[120001, 2486, 413, 12, 70, "Output",ExpressionUUID->"5d538428-1b0a-4923-92e2-930df24b44df",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[120429, 2501, 308, 7, 70, "CodeCaption",ExpressionUUID->"d2a75d4d-d24c-4935-9df0-acec04d937c6",
 CellTags->{"p:273", "i:7"}],
Cell[CellGroupData[{
Cell[120762, 2512, 202, 5, 70, "Input",ExpressionUUID->"69c86e2f-9341-4965-8a83-aaa0a173a69a"],
Cell[120967, 2519, 193, 5, 70, "Output",ExpressionUUID->"7adce590-cf05-4f20-9cea-1e545abc5e93",
 Evaluatable->False]
}, Open  ]],
Cell[121175, 2527, 677, 15, 70, "Text",ExpressionUUID->"f5634acf-c28f-4fa8-86ef-8bab832b889c",
 CellTags->"i:8"],
Cell[121855, 2544, 483, 12, 70, "CodeCaption",ExpressionUUID->"ca00f8f2-e235-4e6e-b852-c97a2cca05e1"],
Cell[CellGroupData[{
Cell[122363, 2560, 239, 6, 70, "Input",ExpressionUUID->"b9f883fa-0a03-4600-88b2-d9e266c5a0ef"],
Cell[122605, 2568, 193, 5, 70, "Output",ExpressionUUID->"6ae4ddaf-fa5f-42aa-8c9b-170c7dffc2fc",
 Evaluatable->False]
}, Open  ]],
Cell[122813, 2576, 257, 6, 70, "CodeCaption",ExpressionUUID->"bbaa57d0-8c22-4705-9ec9-d4527960877e"],
Cell[CellGroupData[{
Cell[123095, 2586, 208, 5, 70, "Input",ExpressionUUID->"68a6c3fe-496d-4c95-928c-9b16fa270f98"],
Cell[123306, 2593, 193, 5, 70, "Output",ExpressionUUID->"a1070862-60e9-4ffb-9485-85f3989e992e",
 Evaluatable->False]
}, Open  ]],
Cell[123514, 2601, 759, 17, 70, "Text",ExpressionUUID->"9a3c31e7-e1eb-4cff-8a73-8f8f07590932",
 CellTags->"i:9"],
Cell[124276, 2620, 304, 6, 70, "CodeCaption",ExpressionUUID->"3c31075a-9bf1-4a0d-ae07-d2f653fdd530",
 CellTags->"i:10"],
Cell[CellGroupData[{
Cell[124605, 2630, 362, 11, 70, "Input",ExpressionUUID->"4b96ff64-d4fd-4212-9303-5e9cbe3b9dc0"],
Cell[124970, 2643, 257, 7, 70, "Output",ExpressionUUID->"07ec3864-2369-4c6a-ad1a-446520bd1231",
 Evaluatable->False]
}, Open  ]],
Cell[125242, 2653, 432, 12, 70, "CodeCaption",ExpressionUUID->"be1be0b9-365c-4d5e-bb43-32b83d9ef231"],
Cell[CellGroupData[{
Cell[125699, 2669, 363, 11, 70, "Input",ExpressionUUID->"f0593e3d-bda8-46f9-8dbe-15c3ea6275d1"],
Cell[126065, 2682, 257, 7, 70, "Output",ExpressionUUID->"221b8342-9541-460b-9f12-66c43172dac8",
 Evaluatable->False]
}, Open  ]],
Cell[126337, 2692, 518, 15, 70, "Text",ExpressionUUID->"fbb6df0d-6369-4f24-92c2-8ce26ae9d5d8"],
Cell[126858, 2709, 517, 12, 70, "CodeCaption",ExpressionUUID->"c99eafed-da95-4c25-a5cd-bff7cd44c1fa"],
Cell[CellGroupData[{
Cell[127400, 2725, 251, 7, 70, "Input",ExpressionUUID->"a37a2ddb-7432-4933-9b34-fb897ca1bf4c"],
Cell[127654, 2734, 17385, 338, 70, "Output",ExpressionUUID->"73fe2cde-6dbc-4000-89ea-a7d340fcf7af",
 Evaluatable->False]
}, Open  ]],
Cell[145054, 3075, 397, 8, 70, "CodeCaption",ExpressionUUID->"22a282d3-918f-44c6-85a6-fc8e8d10e13b"],
Cell[CellGroupData[{
Cell[145476, 3087, 278, 8, 92, "Input",ExpressionUUID->"04b9370c-ac5b-45cd-ac51-489e0feff0c4"],
Cell[145757, 3097, 16058, 311, 223, "Output",ExpressionUUID->"1fb61b46-4f77-4baf-ade5-fd71f64a4630",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[161830, 3411, 410, 11, 73, "CodeCaption",ExpressionUUID->"7a9974ef-4edd-4036-b26e-5e5326320fc4",
 CellTags->{"p:274", "i:11"}],
Cell[CellGroupData[{
Cell[162265, 3426, 175, 4, 92, "Input",ExpressionUUID->"a291396a-348a-4b03-821b-f97d0a40e888"],
Cell[162443, 3432, 575, 15, 79, "Output",ExpressionUUID->"3c869a03-8bb0-4b15-a17b-190cc7e5169f",
 Evaluatable->False]
}, Open  ]],
Cell[163033, 3450, 303, 7, 79, "Text",ExpressionUUID->"9bb61a47-28f5-4dbd-b368-722c268fa869"],
Cell[163339, 3459, 394, 7, 73, "CodeCaption",ExpressionUUID->"dd1c88f7-6239-480c-abd7-4647da5e97d4",
 CellTags->"i:12"],
Cell[CellGroupData[{
Cell[163758, 3470, 468, 14, 92, "Input",ExpressionUUID->"79054081-f344-4c57-a3b5-27e574c16292"],
Cell[164229, 3486, 303, 9, 79, "Output",ExpressionUUID->"83885077-e72e-4161-8dd3-ef9a9d679c3e",
 Evaluatable->False]
}, Open  ]],
Cell[164547, 3498, 328, 10, 73, "CodeCaption",ExpressionUUID->"4460d28a-a035-4f8b-ab9e-268cd96f57aa"],
Cell[CellGroupData[{
Cell[164900, 3512, 469, 14, 92, "Input",ExpressionUUID->"374cc508-4b89-4c76-a7b3-6e925b2363ba"],
Cell[165372, 3528, 303, 9, 70, "Output",ExpressionUUID->"82f83f63-8a38-416f-b570-00d5ff4c93e2",
 Evaluatable->False]
}, Open  ]],
Cell[165690, 3540, 332, 8, 70, "CodeCaption",ExpressionUUID->"d71dbce1-aabc-411e-aaf3-262127c8e5eb"],
Cell[CellGroupData[{
Cell[166047, 3552, 252, 7, 70, "Input",ExpressionUUID->"6c29b2ad-f13e-4df3-8959-bc7eeb9bf680"],
Cell[166302, 3561, 19774, 395, 70, "Output",ExpressionUUID->"d4541ada-cfca-4fad-93e0-07576c99f2fb",
 Evaluatable->False]
}, Open  ]],
Cell[186091, 3959, 325, 7, 70, "CodeCaption",ExpressionUUID->"101c3c5e-6bc7-4785-af73-860502a49ca9"],
Cell[CellGroupData[{
Cell[186441, 3970, 284, 9, 70, "Input",ExpressionUUID->"bea25a9f-069c-4924-b6ae-ef2b23caf925"],
Cell[186728, 3981, 9779, 180, 70, "Output",ExpressionUUID->"d3904cf5-7d92-4898-8093-3f390f3c97d1",
 Evaluatable->False]
}, Open  ]],
Cell[196522, 4164, 319, 7, 70, "Text",ExpressionUUID->"383fd40f-0080-444c-850c-99bf1c2916e6"],
Cell[196844, 4173, 404, 11, 70, "CodeCaption",ExpressionUUID->"bcb5e980-e0bf-4395-83fc-92ba49e0e8b9"],
Cell[CellGroupData[{
Cell[197273, 4188, 210, 5, 70, "Input",ExpressionUUID->"6a01e8e9-aa59-4271-8f5b-77e2fc4b0e5d"],
Cell[197486, 4195, 21079, 414, 70, "Output",ExpressionUUID->"575c4017-560e-4d65-ab52-416ab941eb1c",
 Evaluatable->False]
}, Open  ]],
Cell[218580, 4612, 414, 9, 70, "CodeCaption",ExpressionUUID->"b737402f-b993-4294-8047-b63f52605ea6"],
Cell[CellGroupData[{
Cell[219019, 4625, 336, 10, 70, "Input",ExpressionUUID->"858aee17-f9cb-41a5-b8dc-0bbb54bff195"],
Cell[219358, 4637, 9846, 183, 70, "Output",ExpressionUUID->"770d3bbc-821f-4b0e-a712-61d1e54d3931",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[229219, 4823, 715, 18, 70, "Text",ExpressionUUID->"40208f57-b4ad-441c-8d4a-56eb73bab303",
 CellTags->{"p:275", "i:13"}],
Cell[229937, 4843, 317, 7, 70, "CodeCaption",ExpressionUUID->"5c7c4466-4cec-4e9b-8cad-6bd7a4f22537"],
Cell[CellGroupData[{
Cell[230279, 4854, 666, 17, 70, "Input",ExpressionUUID->"6596bced-f733-453e-86b7-47fa6f11ac33"],
Cell[230948, 4873, 15512, 304, 70, "Output",ExpressionUUID->"9ec6f73a-b1ff-477b-8d60-9fab601b9775",
 Evaluatable->False]
}, Open  ]],
Cell[246475, 5180, 300, 6, 70, "CodeCaption",ExpressionUUID->"1673015e-1ff0-4429-9847-aad505b04b13",
 CellTags->"i:14"],
Cell[CellGroupData[{
Cell[246800, 5190, 615, 16, 70, "Input",ExpressionUUID->"4908e7a3-5d48-466e-96e6-f9ef222ad2b6"],
Cell[247418, 5208, 16122, 303, 70, "Output",ExpressionUUID->"4d7f304b-8ef7-40ee-b064-8007d65de96a",
 Evaluatable->False]
}, Open  ]],
Cell[263555, 5514, 1140, 18, 70, "Text",ExpressionUUID->"e72747f4-ff88-4b09-9282-50deda522519",
 CellTags->"i:15"],
Cell[264698, 5534, 331, 6, 70, "CodeCaption",ExpressionUUID->"66540b04-372e-4cf8-bdb7-d1aa63d22211",
 CellTags->"i:16"],
Cell[CellGroupData[{
Cell[265054, 5544, 240, 6, 70, "Input",ExpressionUUID->"07665152-cccc-49a6-87ce-7bdfecd7bd58"],
Cell[265297, 5552, 89697, 1887, 70, "Output",ExpressionUUID->"44ae734a-bf3f-4f73-811d-5734568ffdfb",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[355009, 7442, 292, 6, 70, "CodeCaption",ExpressionUUID->"21ce5bca-2c6b-431e-81fc-3288adffb794",
 CellTags->"p:276"],
Cell[CellGroupData[{
Cell[355326, 7452, 214, 5, 70, "Input",ExpressionUUID->"4b28712c-d1c2-470b-b961-7c8ac47ec7e6"],
Cell[355543, 7459, 23043, 456, 70, "Output",ExpressionUUID->"f989d4a6-2464-47de-ad99-ebec986c4b3b",
 Evaluatable->False]
}, Open  ]],
Cell[378601, 7918, 293, 6, 70, "CodeCaption",ExpressionUUID->"55da807e-9a64-47c6-a39c-24654c6d0bc2",
 CellTags->"i:17"],
Cell[CellGroupData[{
Cell[378919, 7928, 323, 8, 70, "Input",ExpressionUUID->"820cd207-0446-4a41-a0e8-fdd0be129840"],
Cell[379245, 7938, 15997, 402, 70, "Output",ExpressionUUID->"aa52bc47-ceb0-4b71-8aef-79d9fc49eb8b",
 Evaluatable->False]
}, Open  ]],
Cell[395257, 8343, 420, 8, 70, "Text",ExpressionUUID->"318512b2-c13e-4a6a-89b0-26cb81cfcf2c"],
Cell[395680, 8353, 291, 7, 70, "CodeCaption",ExpressionUUID->"c7bbc911-39a7-4ad1-b7e3-b601e336f493"],
Cell[CellGroupData[{
Cell[395996, 8364, 222, 5, 70, "Input",ExpressionUUID->"b7e448f1-6ba3-4704-a109-233ed0b27f72"],
Cell[396221, 8371, 19083, 378, 70, "Output",ExpressionUUID->"5753319e-0259-4ed8-897a-4a4ebd37583a",
 Evaluatable->False]
}, Open  ]],
Cell[415319, 8752, 331, 7, 70, "CodeCaption",ExpressionUUID->"1e5ada54-2dca-4ef7-bcc3-f2bc3e95e043"],
Cell[CellGroupData[{
Cell[415675, 8763, 263, 7, 70, "Input",ExpressionUUID->"07e068e6-1864-41e4-bd2c-81dce05a6975"],
Cell[415941, 8772, 12656, 241, 70, "Output",ExpressionUUID->"598e5c1f-9717-49eb-a795-bda59d9775d4",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[428612, 9016, 491, 8, 70, "Text",ExpressionUUID->"1cab299d-4cd7-4b9b-b6a1-f1bb4eaa9aca",
 CellTags->"p:277"],
Cell[429106, 9026, 323, 7, 70, "CodeCaption",ExpressionUUID->"554baa61-72f4-4152-ab13-6d0daa5c56f1"],
Cell[CellGroupData[{
Cell[429454, 9037, 228, 5, 70, "Input",ExpressionUUID->"d863535f-09f4-479d-ad7c-3b577afb15c4"],
Cell[429685, 9044, 21312, 420, 70, "Output",ExpressionUUID->"6a944d5f-ada2-4283-9810-ae0953daa44b",
 Evaluatable->False]
}, Open  ]],
Cell[451012, 9467, 315, 7, 70, "CodeCaption",ExpressionUUID->"926e8ca0-2852-4b21-8c6f-047f04f2014c"],
Cell[CellGroupData[{
Cell[451352, 9478, 251, 6, 70, "Input",ExpressionUUID->"e5307dc1-da71-4de3-98ec-a1f8f63b31ad"],
Cell[451606, 9486, 23280, 470, 70, "Output",ExpressionUUID->"c2cd7f91-5935-42d6-a2c8-bc29d28d4108",
 Evaluatable->False]
}, Open  ]],
Cell[474901, 9959, 359, 9, 70, "CodeCaption",ExpressionUUID->"a7db02b8-3991-435f-872d-88f7bd18c4d9"],
Cell[CellGroupData[{
Cell[475285, 9972, 373, 10, 70, "Input",ExpressionUUID->"d7c6f89b-8003-481f-9c09-1a87297cdbf0"],
Cell[475661, 9984, 16519, 324, 70, "Output",ExpressionUUID->"271379dc-4c77-4b15-9a02-8eceaca01c85",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[492195, 10311, 284, 5, 70, "CodeCaption",ExpressionUUID->"acaea558-b7ba-49a1-b5fd-964a95147be2",
 CellTags->"p:278"],
Cell[CellGroupData[{
Cell[492504, 10320, 249, 6, 70, "Input",ExpressionUUID->"c3e32510-612f-44e4-9c1e-a7254ce7da19"],
Cell[492756, 10328, 38812, 791, 70, "Output",ExpressionUUID->"724a03a8-f3d8-4d7c-8e7c-e8003b6ee629",
 Evaluatable->False]
}, Open  ]],
Cell[531583, 11122, 332, 7, 70, "Text",ExpressionUUID->"79ca5d76-5c52-403c-9a6e-0c8baa5844b9"],
Cell[531918, 11131, 375, 8, 70, "CodeCaption",ExpressionUUID->"97b4dd15-6d60-4c41-894e-4c301f3a0a4a"],
Cell[CellGroupData[{
Cell[532318, 11143, 1665, 36, 112, "Input",ExpressionUUID->"5a4beb23-0208-4255-908a-6cfee79a915c"],
Cell[533986, 11181, 42391, 840, 563, "Output",ExpressionUUID->"161b2112-3105-4270-8abd-62769d351d35",
 Evaluatable->False]
}, Open  ]],
Cell[576392, 12024, 365, 8, 73, "CodeCaption",ExpressionUUID->"fbe51bbb-0801-4247-b94f-9e180aad258d"],
Cell[CellGroupData[{
Cell[576782, 12036, 1764, 39, 112, "Input",ExpressionUUID->"3e10e1e7-8111-440b-a0ec-ecb3cf31563f"],
Cell[578549, 12077, 22001, 428, 466, "Output",ExpressionUUID->"eded0ae1-eeac-4276-8c7a-b096f7ee4d4e",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[600565, 12508, 275, 5, 70, "CodeCaption",ExpressionUUID->"6fbb5cea-c499-462d-a954-7974a791a168",
 CellTags->"p:279"],
Cell[CellGroupData[{
Cell[600865, 12517, 175, 4, 70, "Input",ExpressionUUID->"d5a7d98b-197d-401d-9fd0-a97dc17aea93"],
Cell[601043, 12523, 954, 25, 70, "Output",ExpressionUUID->"2e0f5d16-dea8-44c0-82c9-9c855b374066",
 Evaluatable->False]
}, Open  ]],
Cell[602012, 12551, 358, 7, 70, "CodeCaption",ExpressionUUID->"9d17b0cf-b393-45f0-a370-0ad3efda80ea",
 CellTags->"i:18"],
Cell[CellGroupData[{
Cell[602395, 12562, 177, 4, 70, "Input",ExpressionUUID->"87ae0360-016b-42cb-bd2a-d79550c3154e"],
Cell[602575, 12568, 333, 8, 70, "Output",ExpressionUUID->"cc392e61-b528-4c9d-80a0-80d0405cb51f",
 Evaluatable->False]
}, Open  ]],
Cell[602923, 12579, 304, 6, 70, "CodeCaption",ExpressionUUID->"0358a742-1aad-4231-ba3c-22ce1925aa5b"],
Cell[CellGroupData[{
Cell[603252, 12589, 1846, 41, 70, "Input",ExpressionUUID->"6cfea72d-6911-4514-aea3-dfd3e19b62af"],
Cell[605101, 12632, 333, 8, 70, "Output",ExpressionUUID->"222b1774-a55b-4b38-9b8c-ed7aced78b91",
 Evaluatable->False]
}, Open  ]],
Cell[605449, 12643, 486, 8, 70, "Text",ExpressionUUID->"620ac347-68b4-4654-900a-1cd588aaca74",
 CellTags->"i:19"],
Cell[605938, 12653, 329, 7, 70, "CodeCaption",ExpressionUUID->"0a06c242-931d-4abb-a535-d51083a6a3c4"],
Cell[CellGroupData[{
Cell[606292, 12664, 1763, 39, 112, "Input",ExpressionUUID->"b5ebbfae-82fb-4d96-a7b8-0e6eb1b5c696"],
Cell[608058, 12705, 76617, 1503, 466, "Output",ExpressionUUID->"cbfbee66-5911-49c6-a329-95558633485f",
 Evaluatable->False]
}, Open  ]],
Cell[684690, 14211, 662, 13, 177, "Text",ExpressionUUID->"ad9a6d20-b14c-4dce-bb00-e9f26bca89cd"],
Cell[685355, 14226, 434, 11, 73, "CodeCaption",ExpressionUUID->"b3d153c1-76e1-4855-8ebb-aeff31392eb5",
 CellTags->"i:20"],
Cell[CellGroupData[{
Cell[685814, 14241, 488, 12, 92, "Input",ExpressionUUID->"6299e7ad-4f62-42e3-8c5f-421b1eb5b7ce"],
Cell[686305, 14255, 1397, 35, 442, "Output",ExpressionUUID->"b37e519c-b5ac-4b49-840e-e4f2e6cc9d09",
 Evaluatable->False]
}, Open  ]],
Cell[687717, 14293, 369, 10, 70, "CodeCaption",ExpressionUUID->"853fad81-205e-4f3e-a232-2454dac38075",
 CellTags->"i:21"],
Cell[CellGroupData[{
Cell[688111, 14307, 468, 12, 70, "Input",ExpressionUUID->"15757db8-8371-4cc1-845f-889383ceabdb"],
Cell[688582, 14321, 428, 12, 70, "Output",ExpressionUUID->"40742866-5db5-4486-9070-f51101dd9e2c",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[689025, 14336, 303, 7, 70, "CodeCaption",ExpressionUUID->"8f055eb0-13f2-49d5-8d97-a16a33c8c025",
 CellTags->{"p:280", "i:22"}],
Cell[CellGroupData[{
Cell[689353, 14347, 383, 10, 70, "Input",ExpressionUUID->"7bedef8d-7082-4144-b31f-cae334ec7cb9"],
Cell[689739, 14359, 24012, 565, 70, "Output",ExpressionUUID->"e03e0afa-99f6-420c-a304-e9eb96eaf1ca",
 Evaluatable->False]
}, Open  ]],
Cell[713766, 14927, 807, 22, 128, "Text",ExpressionUUID->"38ae046e-58bb-4b69-9aa4-e5a54bb4377b"],
Cell[714576, 14951, 2510, 77, 177, "Text",ExpressionUUID->"288f8536-7358-4568-8fb4-f95e21169494",
 CellTags->"i:23"],
Cell[717089, 15030, 595, 17, 74, "CodeCaption",ExpressionUUID->"b4cb821e-1a4b-4750-a627-6850dfc4fe8d",
 CellTags->"i:24"],
Cell[CellGroupData[{
Cell[717709, 15051, 229, 6, 57, "Input",ExpressionUUID->"edfc5a42-83bb-423b-bad7-bacc7ff18bff"],
Cell[717941, 15059, 276, 8, 79, "Output",ExpressionUUID->"80079c24-2584-4bff-906f-19dadbeab20a",
 Evaluatable->False]
}, Open  ]],
Cell[718232, 15070, 605, 17, 74, "CodeCaption",ExpressionUUID->"74081cda-5de2-4dcc-9dbb-bb3422ee6b30",
 CellTags->"i:25"],
Cell[CellGroupData[{
Cell[718862, 15091, 229, 6, 57, "Input",ExpressionUUID->"bc5b47dc-e519-4fd8-9686-7eb602e25e67"],
Cell[719094, 15099, 276, 8, 79, "Output",ExpressionUUID->"34758873-4631-46bf-aea5-8787411c5c7e",
 Evaluatable->False]
}, Open  ]],
Cell[719385, 15110, 485, 14, 74, "CodeCaption",ExpressionUUID->"dde5874c-c7b9-4644-894a-d1cecb717ad8"],
Cell[CellGroupData[{
Cell[719895, 15128, 307, 7, 92, "Input",ExpressionUUID->"139a0aa5-709d-4ec2-8adc-c2992015f5dc"],
Cell[720205, 15137, 33777, 984, 344, "Output",ExpressionUUID->"cb99eff0-73a7-44dd-821f-df4c178567be",
 Evaluatable->False]
}, Open  ]],
Cell[753997, 16124, 448, 13, 70, "CodeCaption",ExpressionUUID->"1baa224e-4c7a-4cc5-b373-e05a790fda85",
 CellTags->"p:281"],
Cell[CellGroupData[{
Cell[754470, 16141, 307, 7, 70, "Input",ExpressionUUID->"b91f9cd3-713b-49b4-b780-894513fbeea5"],
Cell[754780, 16150, 33806, 985, 70, "Output",ExpressionUUID->"da0a011c-c987-48b3-8a90-9d342c69e8ee",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[788601, 17138, 715, 17, 70, "Text",ExpressionUUID->"7cc486ec-3457-4059-86b8-a0054ddce34e"],
Cell[789319, 17157, 342213, 5617, 70, "Picture",ExpressionUUID->"ee567724-789d-4951-99e1-937c94b5340f"],
Cell[1131535, 22776, 386, 12, 70, "Text",ExpressionUUID->"7e8ee392-944f-46b6-8214-acbd16e8f4ae"],
Cell[1131924, 22790, 411, 12, 70, "CodeCaption",ExpressionUUID->"436c3ca4-3360-4142-b537-eb766ff39656"],
Cell[CellGroupData[{
Cell[1132360, 22806, 243, 6, 70, "Input",ExpressionUUID->"d5b8557d-bbac-43eb-ace5-8a90ae0856c7"],
Cell[1132606, 22814, 98245, 2051, 70, "Output",ExpressionUUID->"1c288eaa-ea0f-4d78-b308-d8c62cb609d3",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[1230866, 24868, 362, 8, 70, "CodeCaption",ExpressionUUID->"8c1363f5-f503-4038-b556-b3d3152f3739"],
Cell[CellGroupData[{
Cell[1231253, 24880, 260, 6, 70, "Input",ExpressionUUID->"1b7fa695-466c-4261-b14a-7f5536e648c9"],
Cell[1231516, 24888, 85457, 1968, 415, "Output",ExpressionUUID->"1564656a-34b9-48a3-8de4-c15706e948d7",
 Evaluatable->False]
}, Open  ]],
Cell[1316988, 26859, 281, 7, 73, "CodeCaption",ExpressionUUID->"829400d2-b28f-477d-a5eb-c0de30b747bf"],
Cell[CellGroupData[{
Cell[1317294, 26870, 255, 6, 92, "Input",ExpressionUUID->"d421a764-2032-4e38-a6b5-dd71b9bdd554"],
Cell[1317552, 26878, 7168, 208, 345, "Output",ExpressionUUID->"5343c9df-4f3c-4d87-a4e7-7010f2007399",
 Evaluatable->False]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1324769, 27092, 305, 9, 129, "VocabularySection",ExpressionUUID->"4094826b-9c96-483b-8989-00d39325ba81"],
Cell[1325077, 27103, 3070, 82, 357, "VocabularyTable",ExpressionUUID->"aeb42b64-0c92-4eef-9483-43758f7b21dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1328184, 27190, 1847, 49, 139, "ExerciseSection",ExpressionUUID->"35cc611e-c25c-493b-9a6b-1d8eb513ae80"],
Cell[CellGroupData[{
Cell[1330056, 27243, 1287, 40, 124, "ExerciseSummaryCell",ExpressionUUID->"144780d1-fbc0-4d9b-a361-9a7b0b5940cc"],
Cell[1331346, 27285, 593, 17, 59, "ExerciseNote",ExpressionUUID->"a94bc841-d917-43de-8ae8-7541ba0d4f79"],
Cell[CellGroupData[{
Cell[1331964, 27306, 862, 23, 59, "Exercise",ExpressionUUID->"f47b1ef1-0c74-482c-9d78-f659faa03143"],
Cell[1332829, 27331, 4659, 108, 70, "ExerciseOutput",ExpressionUUID->"cfe35bba-1f6a-4649-b6ed-ffbab7c5e131"]
}, Closed]],
Cell[CellGroupData[{
Cell[1337525, 27444, 818, 23, 47, "Exercise",ExpressionUUID->"e2648e65-7d71-4dfd-b187-87900922fda6"],
Cell[1338346, 27469, 38215, 875, 70, "ExerciseOutput",ExpressionUUID->"38729e28-dbf1-4d6e-a4c4-f96d95ba8aba"]
}, Closed]],
Cell[CellGroupData[{
Cell[1376598, 28349, 870, 24, 47, "Exercise",ExpressionUUID->"a8d8886e-74b0-4e2c-91dd-b5a46db248f8"],
Cell[1377471, 28375, 50892, 1000, 70, "ExerciseOutput",ExpressionUUID->"59772bdf-62ae-4861-a52d-f70ac66804fb"]
}, Closed]],
Cell[CellGroupData[{
Cell[1428400, 29380, 856, 23, 47, "Exercise",ExpressionUUID->"647f836e-2e81-434b-9838-d47f190e1caa"],
Cell[1429259, 29405, 51124, 994, 548, "ExerciseOutput",ExpressionUUID->"eeac2db8-771d-411a-b902-730c063b8245"]
}, Closed]],
Cell[CellGroupData[{
Cell[1480420, 30404, 882, 24, 47, "Exercise",ExpressionUUID->"f97b2442-c5f5-4fce-a9fe-a75824e26bc5"],
Cell[1481305, 30430, 50564, 992, 70, "ExerciseOutput",ExpressionUUID->"8c9791a1-d40c-4dea-8d32-2d6f75dbd6e5"]
}, Closed]],
Cell[CellGroupData[{
Cell[1531906, 31427, 856, 23, 47, "Exercise",ExpressionUUID->"b535d853-8a04-4ee5-ac60-e1d159317baa"],
Cell[1532765, 31452, 50971, 1001, 70, "ExerciseOutput",ExpressionUUID->"4b0f303e-4a81-4bd3-82a7-38732b033105"]
}, Closed]],
Cell[CellGroupData[{
Cell[1583773, 32458, 900, 24, 47, "Exercise",ExpressionUUID->"05ea2a8c-84d5-4473-896b-450babd0658f",
 CellTags->"LastCellOfAPage"],
Cell[1584676, 32484, 52033, 972, 70, "ExerciseOutput",ExpressionUUID->"51020751-c1ea-4fdf-a8e6-9b1d14e4a2df"]
}, Closed]],
Cell[CellGroupData[{
Cell[1636746, 33461, 979, 25, 84, "Exercise",ExpressionUUID->"081e9bd2-9149-4700-b7da-9658ade5c25e"],
Cell[1637728, 33488, 6420, 148, 70, "ExerciseOutput",ExpressionUUID->"081a95c7-c788-466b-8140-d344811a61dd"]
}, Closed]],
Cell[CellGroupData[{
Cell[1644185, 33641, 839, 23, 47, "Exercise",ExpressionUUID->"5b7c6476-fce5-4bc0-aa5b-0bf16febb604"],
Cell[1645027, 33666, 1229, 33, 70, "ExerciseOutput",ExpressionUUID->"ebc0463a-8631-4d0e-a003-285d3ea199e5"]
}, Closed]],
Cell[CellGroupData[{
Cell[1646293, 33704, 857, 23, 47, "Exercise",ExpressionUUID->"2a28a26a-8434-4ec1-9105-0f25b8319d30"],
Cell[1647153, 33729, 26606, 497, 70, "ExerciseOutput",ExpressionUUID->"9585da62-11c5-4fb1-9c0f-450c1f84782e"]
}, Closed]],
Cell[CellGroupData[{
Cell[1673796, 34231, 906, 24, 47, "Exercise",ExpressionUUID->"b0d8c9aa-21d8-4b9e-bea1-96535e829ed2"],
Cell[1674705, 34257, 16422, 396, 70, "ExerciseOutput",ExpressionUUID->"2ca6c9b5-ed20-4b99-aef4-89005e3ade55"]
}, Closed]],
Cell[CellGroupData[{
Cell[1691164, 34658, 914, 24, 47, "Exercise",ExpressionUUID->"f0ed566e-acf3-4a03-8fd8-b6b498805805"],
Cell[1692081, 34684, 118148, 2265, 70, "ExerciseOutput",ExpressionUUID->"ae333836-055f-4d82-895e-db537087398d"]
}, Closed]],
Cell[CellGroupData[{
Cell[1810266, 36954, 938, 24, 84, "Exercise",ExpressionUUID->"248f00bf-c68e-469b-885d-7e92a5dc29ba"],
Cell[1811207, 36980, 100705, 1908, 70, "ExerciseOutput",ExpressionUUID->"772cc4e4-ad89-427e-bc98-834f0dda0c3f"]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1911973, 38895, 333, 8, 141, "QASection",ExpressionUUID->"c0c3283e-770a-4a23-99d2-effe84be9eeb",
 CellTags->"p:282"],
Cell[1912309, 38905, 304, 7, 63, "Question",ExpressionUUID->"c9129e99-a8c5-4a97-a25d-d2b476cce112"],
Cell[1912616, 38914, 552, 10, 86, "Answer",ExpressionUUID->"a988b29b-46ed-414c-91bf-1a8b7adfab3f"],
Cell[1913171, 38926, 322, 6, 63, "Question",ExpressionUUID->"cd0c7837-8843-42e3-9573-2b8cf9157520",
 CellTags->"i:26"],
Cell[1913496, 38934, 366, 11, 45, "Answer",ExpressionUUID->"234d4bc6-9767-4796-9643-86c218a6bfdf"],
Cell[1913865, 38947, 326, 7, 63, "Question",ExpressionUUID->"597ca1a5-f2e8-4690-8849-c0e68532b820"],
Cell[1914194, 38956, 860, 16, 86, "Answer",ExpressionUUID->"83c38610-07f5-4e8c-a23f-9b571dc741b8",
 CellTags->"i:27"],
Cell[1915057, 38974, 374, 7, 63, "Question",ExpressionUUID->"820de64d-7221-4ebf-9f50-83dc224464f6",
 CellTags->"i:28"],
Cell[1915434, 38983, 1005, 19, 127, "Answer",ExpressionUUID->"f81f58b8-f73a-4406-93b3-bedf95990fe4"],
Cell[1916442, 39004, 401, 7, 63, "Question",ExpressionUUID->"b1612e9a-a6c7-4d24-9766-fe36662a680d",
 CellTags->"i:29"],
Cell[1916846, 39013, 676, 15, 86, "Answer",ExpressionUUID->"1fab5cb1-2882-4854-b86d-7d144333623d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1917559, 39033, 341, 9, 141, "TechNoteSection",ExpressionUUID->"96c75f60-0ea4-43b7-b4f9-f39e70328a19"],
Cell[1917903, 39044, 764, 20, 59, "TechNote",ExpressionUUID->"6825b3c1-b69f-4b1d-ad8a-0de3a68bfc37",
 CellTags->"i:30"],
Cell[1918670, 39066, 485, 12, 59, "TechNote",ExpressionUUID->"28c88970-22c7-4455-9f13-a60f62d86fa0"],
Cell[1919158, 39080, 728, 18, 104, "TechNote",ExpressionUUID->"6da132fb-7b52-4c72-a7c0-b4f16c66d72d"],
Cell[1919889, 39100, 795, 19, 59, "TechNote",ExpressionUUID->"08bdf09f-2438-45e7-8c9c-c7255c360d05",
 CellTags->"i:31"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1920721, 39124, 342, 9, 141, "MoreExploreSection",ExpressionUUID->"dab02fe5-bcf4-4d8c-9d30-04d00a49754c"],
Cell[1921066, 39135, 479, 11, 59, "MoreExplore",ExpressionUUID->"47d13a19-2a49-4e9e-8faa-f6d1cfea35bc",
 CellTags->"LastCellOfAPage"]
}, Open  ]]
}
]
*)

